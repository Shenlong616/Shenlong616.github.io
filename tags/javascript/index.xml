<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>javascript on Shenlong616</title>
    <link>https://shenlong616.github.io/tags/javascript/</link>
    <description>Recent content in javascript on Shenlong616</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 18 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://shenlong616.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript: custom CSS styles</title>
      <link>https://shenlong616.github.io/posts/javascript/custom-css-styles/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/custom-css-styles/</guid>
      <description> cssText property document.querySelectorAll( &amp;#34;.logo&amp;#34; )[0].childNodes[0].style.cssText = `color: var(--color_5) !important;`; </description>
      <content:encoded><![CDATA[<ul>
<li><code>cssText</code> property</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;.logo&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">childNodes</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span> <span class="o">=</span> <span class="sb">`color: var(--color_5) !important;`</span><span class="p">;</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: get the first element of an Array</title>
      <link>https://shenlong616.github.io/posts/javascript/get-the-first-element-of-an-array/</link>
      <pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/get-the-first-element-of-an-array/</guid>
      <description> at(0) method console.log([1, 2, 3].at(0)); // 1 </description>
      <content:encoded><![CDATA[<ul>
<li><code>at(0)</code> method</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="nx">at</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span> <span class="c1">// 1
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: get the last element of an Array</title>
      <link>https://shenlong616.github.io/posts/javascript/get-the-last-element-of-an-array/</link>
      <pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/get-the-last-element-of-an-array/</guid>
      <description> at(-1) method console.log([1, 2, 3].at(-1)); // 3 </description>
      <content:encoded><![CDATA[<ul>
<li><code>at(-1)</code> method</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="nx">at</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span> <span class="c1">// 3
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: default parameter values</title>
      <link>https://shenlong616.github.io/posts/javascript/default-parameters/</link>
      <pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/default-parameters/</guid>
      <description>const functionName = ( defaultParameter1 = &amp;#34;hello&amp;#34;, defaultParameter2 = () =&amp;gt; &amp;#34;world&amp;#34;, defaultParameter3 = [{ otherText: &amp;#34;!&amp;#34; }] ) =&amp;gt; `${defaultParameter1} ${defaultParameter2()}${ defaultParameter3[0].otherText }`; console.log(functionName()); // hello world! </description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">functionName</span> <span class="o">=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="nx">defaultParameter1</span> <span class="o">=</span> <span class="s2">&#34;hello&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">defaultParameter2</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="s2">&#34;world&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">defaultParameter3</span> <span class="o">=</span> <span class="p">[{</span> <span class="nx">otherText</span><span class="o">:</span> <span class="s2">&#34;!&#34;</span> <span class="p">}]</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span> <span class="p">=&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="sb">`</span><span class="si">${</span><span class="nx">defaultParameter1</span><span class="si">}</span><span class="sb"> </span><span class="si">${</span><span class="nx">defaultParameter2</span><span class="p">()</span><span class="si">}${</span>
</span></span><span class="line"><span class="cl">    <span class="nx">defaultParameter3</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">otherText</span>
</span></span><span class="line"><span class="cl">  <span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">functionName</span><span class="p">());</span> <span class="c1">// hello world!
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: get a random Number</title>
      <link>https://shenlong616.github.io/posts/javascript/get-a-random-number/</link>
      <pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/get-a-random-number/</guid>
      <description>Returns a random integer 0 to 2 console.log(Math.floor(Math.random() * 3)); // 0, 1 or 2 1 to 3 console.log(Math.floor(Math.random() * 3) + 1); // 1, 2 or 3 </description>
      <content:encoded><![CDATA[<h3 id="returns-a-random-integer">Returns a random integer</h3>
<ul>
<li>0 to 2</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="mi">3</span><span class="p">));</span> <span class="c1">// 0, 1 or 2
</span></span></span></code></pre></div><ul>
<li>1 to 3</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="mi">3</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// 1, 2 or 3
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: logical NOT (!)</title>
      <link>https://shenlong616.github.io/posts/javascript/logical-not/</link>
      <pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/logical-not/</guid>
      <description> ! operator logicalNot = () =&amp;gt; true; console.log(!logicalNot()); // false console.log(!logicalNot() &amp;amp;&amp;amp; false); // false console.log(!logicalNot() &amp;amp;&amp;amp; !!logicalNot() &amp;amp;&amp;amp; !!!logicalNot()); // false console.log(!!!!logicalNot() &amp;amp;&amp;amp; !!!!logicalNot()); //true // 616 console.loglogicalNot() // true ); </description>
      <content:encoded><![CDATA[<ul>
<li><code>!</code> operator</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">logicalNot</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="o">!</span><span class="nx">logicalNot</span><span class="p">());</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="o">!</span><span class="nx">logicalNot</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="kc">false</span><span class="p">);</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="o">!</span><span class="nx">logicalNot</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="o">!!</span><span class="nx">logicalNot</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="o">!!!</span><span class="nx">logicalNot</span><span class="p">());</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="o">!!!!</span><span class="nx">logicalNot</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="o">!!!!</span><span class="nx">logicalNot</span><span class="p">());</span> <span class="c1">//true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 616
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="ospan><span class="nx">logicalNot</span><span class="p">()</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">);</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: callback Function</title>
      <link>https://shenlong616.github.io/posts/javascript/callback/</link>
      <pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/callback/</guid>
      <description>let fullText = &amp;#34;&amp;#34;; const myArray1 = [{ helloText: [&amp;#34;hello&amp;#34;] }]; const myArray2 = [&amp;#34;world&amp;#34;]; const myArray3 = [ { function(parameter) { fullText += `${parameter} `; }, }, ]; [...myArray1[0].helloText, ...myArray2, &amp;#34; &amp;#34;].map((value) =&amp;gt; { myArray3[0].function(value); }); console.log(`${fullText.trim()}!`); // hello world! </description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">fullText</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">myArray1</span> <span class="o">=</span> <span class="p">[{</span> <span class="nx">helloText</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;hello&#34;</span><span class="p">]</span> <span class="p">}];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">myArray2</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;world&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">myArray3</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">function</span><span class="p">(</span><span class="nx">parameter</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">fullText</span> <span class="o">+=</span> <span class="sb">`</span><span class="si">${</span><span class="nx">parameter</span><span class="si">}</span><span class="sb"> `</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[...</span><span class="nx">myArray1</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">helloText</span><span class="p">,</span> <span class="p">...</span><span class="nx">myArray2</span><span class="p">,</span> <span class="s2">&#34; &#34;</span><span class="p">].</span><span class="nx">map</span><span class="p">((</span><span class="nx">value</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">myArray3</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="si">${</span><span class="nx">fullText</span><span class="p">.</span><span class="nx">trim</span><span class="p">()</span><span class="si">}</span><span class="sb">!`</span><span class="p">);</span> <span class="c1">// hello world!
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: falsy values</title>
      <link>https://shenlong616.github.io/posts/javascript/falsy/</link>
      <pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/falsy/</guid>
      <description>List of falsy values false 0 -0 0n &amp;quot;&amp;quot;, &#39;&#39;, `` — empty string value. null — the absence of any value. undefined — the primitive value. NaN — not a number. document.all Check a falsy value is false Boolean() method: for (const item of [false, 0, &amp;#34;&amp;#34;, null, undefined, document.all]) { console.log(`${item} is ${Boolean(item)}`); } NOT (!) operator method: for (const item of [false, 0, &amp;#34;&amp;#34;, null, undefined, document.all]) { if (!</description>
      <content:encoded><![CDATA[<h3 id="list-of-falsy-values">List of falsy values</h3>
<ul>
<li><code>false</code></li>
<li><code>0</code></li>
<li><code>-0</code></li>
<li><code>0n</code></li>
<li><code>&quot;&quot;</code>, <code>''</code>, <code>``</code> — empty string value.</li>
<li><code>null</code> — the absence of any value.</li>
<li><code>undefined</code> — the primitive value.</li>
<li><code>NaN</code> — not a number.</li>
<li><code>document.all</code></li>
</ul>
<h3 id="check-a-falsy-value-is-false">Check a falsy value is false</h3>
<ul>
<li>Boolean() method:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="nx">item</span> <span class="k">of</span> <span class="p">[</span><span class="kc">false</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">,</span> <span class="nb">document</span><span class="p">.</span><span class="nx">all</span><span class="p">])</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="si">${</span><span class="nx">item</span><span class="si">}</span><span class="sb"> is </span><span class="si">${</span><span class="nb">Boolean</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span><span class="si">}</span><span class="sb">`</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>NOT (!) operator method:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="nx">item</span> <span class="k">of</span> <span class="p">[</span><span class="kc">false</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">,</span> <span class="nb">document</span><span class="p">.</span><span class="nx">all</span><span class="p">])</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="si">${</span><span class="nx">item</span><span class="si">}</span><span class="sb"> is </span><span class="si">${</span><span class="o">!!</span><span class="nx">item</span><span class="si">}</span><span class="sb">`</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: creates a duplicate-free version of an Array</title>
      <link>https://shenlong616.github.io/posts/javascript/creates-a-duplicate-free-version-of-an-array/</link>
      <pubDate>Fri, 08 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/creates-a-duplicate-free-version-of-an-array/</guid>
      <description> Set() method console.log([...new Set([1, 2, 2, 3, 3, 3])]); // [1, 2, 3] </description>
      <content:encoded><![CDATA[<ul>
<li><code>Set()</code> method</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">([...</span><span class="k">new</span> <span class="nx">Set</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">])]);</span> <span class="c1">// [1, 2, 3]
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: get a random item from an Array</title>
      <link>https://shenlong616.github.io/posts/javascript/get-a-random-item-from-an-array/</link>
      <pubDate>Fri, 08 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/get-a-random-item-from-an-array/</guid>
      <description>var myArray = [1, 2, 3]; var myArray2 = [4, 5, 6]; const randomArray = (parameter) =&amp;gt; { return parameter[Math.floor(Math.random() * parameter.length)]; }; console.log(randomArray(myArray)); // 1, 2 or 3 console.log(randomArray([...myArray, ...myArray2])); // 1, 2, 3, 4, 5 or 6 </description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">myArray</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">myArray2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">randomArray</span> <span class="o">=</span> <span class="p">(</span><span class="nx">parameter</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">parameter</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="nx">parameter</span><span class="p">.</span><span class="nx">length</span><span class="p">)];</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">randomArray</span><span class="p">(</span><span class="nx">myArray</span><span class="p">));</span> <span class="c1">// 1, 2 or 3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">randomArray</span><span class="p">([...</span><span class="nx">myArray</span><span class="p">,</span> <span class="p">...</span><span class="nx">myArray2</span><span class="p">]));</span> <span class="c1">// 1, 2, 3, 4, 5 or 6
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
