<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ES5 on Shenlong616</title>
    <link>https://shenlong616.github.io/tags/es5/</link>
    <description>Recent content in ES5 on Shenlong616</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 26 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://shenlong616.github.io/tags/es5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript for Everyone</title>
      <link>https://shenlong616.github.io/posts/github/asabeneh/javascript-for-everyone/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/github/asabeneh/javascript-for-everyone/</guid>
      <description>A step by step guide to learn JavaScript and programming</description>
      <content:encoded><![CDATA[<h2 id="introduction">Introduction</h2>
<p><strong><em>JavaScript for Everyone</em></strong> is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. <strong><em>Congratulations</em></strong> for deciding to learn JavaScript, the language of the browser.</p>
<p>In this step by step tutorial, you will learn JavaScript, the most popular programming language in the history of mankind.
You use JavaScript <strong><em>to add interactivity to websites, to develop mobile apps, desktop applications, games</em></strong> and nowadays JavaScript can be used for <strong><em>machine learning</em></strong> and <strong><em>AI</em></strong>.
<strong><em>JavaScript (JS)</em></strong> has increased in popularity in recent years and has been the leading
programming language for four consecutive years and is the most used programming language on
Github.</p>
<h2 id="setup">Setup</h2>
<p>First thing first, lets install text or code editor. Install code editor, it could be <a href="https://code.visualstudio.com/">vscode</a>, <a href="https://atom.io/">atom</a>, <a href="http://brackets.io/">bracket</a>, <a href="https://notepad-plus-plus.org/">notepad++</a> or others. I recommend vscode.
Install either <a href="https://www.google.com/chrome/">Chrome</a> or <a href="https://www.mozilla.org/en-US/firefox/new/?v=b">Firefox</a> if you didn&rsquo;t have yet.</p>
<p>If you want help, you may join the <a href="https://t.me/JavaScriptforEveryone">telegram</a> channel.</p>
<h2 id="requirements">Requirements</h2>
<p>No prior knowledge of programming is required to follow this guide. You need only:</p>
<ol>
<li>Motivation</li>
<li>Computer</li>
<li>Internet</li>
<li>Browser</li>
<li>Code Editor</li>
</ol>
<h2 id="setup-1">Setup</h2>
<p>I believe you have the motivation and a strong desire to be a developer, computer and Internet. If you have those, then you have everything.</p>
<h3 id="install-nodejs">Install Node.js</h3>
<p>You may not need it right now but you may need it for later. Install <a href="https://nodejs.org/en/">node.js</a>.</p>
<p><img loading="lazy" src="/../assets/images/1/download_node.png" alt="Node download"  />
</p>
<p>After downloading double click and install</p>
<p><img loading="lazy" src="/../assets/images/1/install_node.png" alt="Install node"  />
</p>
<p>We can check if node is installed in our local machine by opening our device terminal or command prompt.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">asabeneh $ node -v
</span></span><span class="line"><span class="cl">v12.14.0
</span></span></code></pre></div><p>I am using node version 12.14.0, which is the recommended version of node.</p>
<h3 id="browser">Browser</h3>
<p>There are many browsers out there. However, I strongly recommend Google Chrome.</p>
<h4 id="installing-google-chrome">Installing Google Chrome</h4>
<p>Install <a href="https://www.google.com/chrome/">google chrome</a> if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.</p>
<p><img loading="lazy" src="/../assets/images/1/google_chrome.png" alt="Google Chrome"  />
</p>
<h4 id="opening-google-chrome-console">Opening Google Chrome Console</h4>
<p>You can open Google Chrome either by clicking three dots at the top right corner of the Chrome browser or using a shortcut. I prefer using shortcuts.</p>
<p><img loading="lazy" src="/../assets/images/1/opening_developer_tool.png" alt="Opening chrome"  />
</p>
<p>To open the Chrome console using a short cut.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Mac
</span></span><span class="line"><span class="cl">Command+Option+I
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows:
</span></span><span class="line"><span class="cl">Ctl+Shift+I
</span></span></code></pre></div><p><img loading="lazy" src="/../assets/images/1/opening_chrome_console_shortcut.png" alt="Opening console"  />
</p>
<p>After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console part. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code.
Let us write a JavaScript code on the Google Chrome console:</p>
<p><img loading="lazy" src="/../assets/images/1/js_code_on_chrome_console.png" alt="write code on console"  />
</p>
<h4 id="writing-code-on-browser-console">Writing Code on browser Console</h4>
<p>We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Mac
</span></span><span class="line"><span class="cl">Command+Option+I
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows:
</span></span><span class="line"><span class="cl">Ctl+Shift+I
</span></span></code></pre></div><h5 id="consolelog">Console.log</h5>
<p>To write our first JavaScript code, we used a builtin function <strong>console.log()</strong>. We passed an argument as input data, and the function displays the output. We passed &lsquo;Hello, World&rsquo; as input data or argument in the console.log() function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Hello, World!&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h5 id="consolelog-with-multiple-arguments">Console.log with multiple arguments</h5>
<p>The console.log(param1, param2, param3), can take multiple arguments.</p>
<p><img loading="lazy" src="/../assets/images/1/console_log_multipl_arguments.png" alt="console log multiple arguments"  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Hello&#34;</span><span class="p">,</span> <span class="s2">&#34;World&#34;</span><span class="p">,</span> <span class="s2">&#34;!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;HAPPY&#34;</span><span class="p">,</span> <span class="s2">&#34;NEW&#34;</span><span class="p">,</span> <span class="s2">&#34;YEAR&#34;</span><span class="p">,</span> <span class="mi">2020</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Welcome&#34;</span><span class="p">,</span> <span class="s2">&#34;to&#34;</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="s2">&#34;Days&#34;</span><span class="p">,</span> <span class="s2">&#34;Of&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>As you can see from the above snippet code, <em>console.log()</em> can take multiple arguments.</p>
<p>Congratulations! You wrote your first JavaScript code using <em>console.log()</em>.</p>
<h5 id="comment">Comment</h5>
<p>We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code. Any text starts with // in JavaScript is a comment or anything enclose like this /* */ is a comment.</p>
<p><strong>Example: Single Line Comment</strong></p>
<p>// This is the first comment<br>
// This is the second comment<br>
// I am a single line comment</p>
<p><strong>Example: Multiline Comment</strong></p>
<p>/_
This is a multiline comment<br>
Multiline comments can take multiple lines<br>
JavaScript is the language of the web<br>
_/</p>
<h5 id="syntax">Syntax</h5>
<p>JavaScript is a programming language. As a result, it has its syntax like other programming languages. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.</p>
<p><img loading="lazy" src="/../assets/images/1/raising_syntax_error.png" alt="Error"  />
</p>
<p>I made a deliberate mistake. As a result, the console raises a syntax error. Actually, the syntax is very informative. It informs what type of mistake we made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Hello, World!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Hello, World!&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>So far, we saw how to display text using a <em>console.log()</em>. If we are printing text or string using <em>console.log()</em>, the text has to be under the single, double, or backtick.
<strong>Example:</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Hello, World!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Hello, World!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`Hello, World!`</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="arithmetics">Arithmetics</h4>
<p>Now, let us practice more writing JavaScript codes using <em>console.log()</em> on google chrome console for number data types.
In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations.</p>
<p><img loading="lazy" src="/../assets/images/1/arithmetic.png" alt="Arithmetic"  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// Addition
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">3</span> <span class="o">-</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// Subtraction
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// Multiplication
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">3</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// Division
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">3</span> <span class="o">%</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// Modulus - finding remainder
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">3</span> <span class="o">**</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// Exponential
</span></span></span></code></pre></div><h3 id="code-editor">Code Editor</h3>
<p>We can write our codes on the browser console, but it won&rsquo;t be for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days python JavaScript challenge, we will use visual studio code.</p>
<h4 id="installing-visual-studio-code">Installing Visual Studio Code</h4>
<p>Visual studio code is a very popular open-source text editor. I would recommend to <a href="https://code.visualstudio.com/">download</a> visual studio code, but if you are in favor of other editors, feel free to follow with what you have.</p>
<p><img loading="lazy" src="/../assets/images/1/vscode.png" alt="Vscode"  />
</p>
<p>If you installed visual studio code, let us start using it.</p>
<h4 id="how-to-use-visual-studio-code">How to use visual studio code</h4>
<p>Open the visual studio code by double-clicking the visual studio icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.</p>
<p><img loading="lazy" src="/../assets/images/1/vscode_ui.png" alt="Vscode ui"  />
</p>
<p><img loading="lazy" src="/../assets/images/1/adding_project_to_vscode.png" alt="Vscode add project"  />
</p>
<p><img loading="lazy" src="/../assets/images/1/opening_project_on_vscode.png" alt="Vscode open project"  />
</p>
<p><img loading="lazy" src="/../assets/images/1/scripts_on_vscode.png" alt="script file"  />
</p>
<p><img loading="lazy" src="/../assets/images/1/running_script.png" alt="running script"  />
</p>
<p><img loading="lazy" src="/../assets/images/1/launched_on_new_tab.png" alt="coding running"  />
</p>
<h3 id="adding-javascript-to-a-web-page">Adding JavaScript to a web page</h3>
<p>JavaScript can be added to a web page in three ways:</p>
<ul>
<li><strong><em>Inline script</em></strong></li>
<li><strong><em>Internal script</em></strong></li>
<li><strong><em>External script</em></strong></li>
</ul>
<p>The following sections show different ways of adding JavaScript code to your web page.</p>
<h4 id="inline-script">Inline Script</h4>
<p>Create a folder on your desktop or in any location and create an <strong><em>index.html</em></strong> file in your folder. Then paste the following code and open it in a browser, either in <a href="https://www.google.com/chrome/">Chrome</a> or <a href="https://www.mozilla.org/en-US/firefox/new/?v=b">Firefox</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>JavaScript for Everyone<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">button</span> <span class="na">onclick</span><span class="o">=</span><span class="s">&#34;alert(&#39;Welcome to JavaScript!&#39;);&#34;</span><span class="p">&gt;</span>Click Me<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></div><h4 id="internal-script">Internal script</h4>
<p>Internal script can be written in the <em>head</em> or the <em>body</em> but it is preferred to put it on the body of the html document.</p>
<ul>
<li>Internal script at the head</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>JavaScript for Everyone<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Welcome to JavaScript for Everyone&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></div><ul>
<li>Internal script at the body</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>JavaScript for Everyone<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Welcome to JavaScript for Everyone&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></div><h4 id="external-script">External script</h4>
<p>The external script link can be on the head or body but it is preferred to put it in the body.</p>
<ul>
<li>External script at the head</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>JavaScript for Everyone<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;introduction.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="err">&lt;</span>/html
</span></span></code></pre></div><ul>
<li>External script at the body</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>JavaScript for Everyone<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      //it could be in the header or in the body
</span></span><span class="line"><span class="cl">      // Here is the recommended place to put the script
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;introduction.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="err">&lt;</span>/html
</span></span></code></pre></div><h3 id="exercisessetting-up-your-machine">Exercises:Setting Up your machine</h3>
<h2 id="variables">Variables</h2>
<p>Variables are <em>containers</em> of data. Variables <em>store</em> data in a memory location. When a variable is declared a memory location is reserved and when it is assigned to a value, the memory space will be filled. To declare a variable we use, <em>var</em>, <em>let</em> or <em>const</em> key words. For a variable which changes at different time we use <em>let</em> but if the data doesn&rsquo;t change at all we use <em>const</em>. For example PI, country name, gravity.</p>
<ul>
<li>A JavaScript variable name shouldn&rsquo;t begin with a number</li>
<li>A JavaScript variable name does not allow special characters except dollar sign and underscore.</li>
<li>A JavaScript variable name follow a camelCase convention.</li>
<li>A JavaScript variable name shouldn&rsquo;t have space between words. The following are valid examples of JavaScript variables.</li>
</ul>
<p>Valid variables in JavaScript:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">country</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">capitalCity</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">isMarried</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">first_name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">last_name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">is_married</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">capital_city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">num1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">num_1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">_num_1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">$num1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">year2019</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">year_2019</span><span class="p">;</span>
</span></span></code></pre></div><p>Camel case(camelCase) or the first way of declaring is conventional in JavaScript. In this material, camelCase variables will be used.</p>
<p>Invalid variable:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">  first-name
</span></span><span class="line"><span class="cl">  1_num
</span></span><span class="line"><span class="cl">  num_#_1
</span></span></code></pre></div><p>Declaring variables</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Declaring different variables of different data types
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span> <span class="c1">// first name of a person
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">lastName</span> <span class="o">=</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">;</span> <span class="c1">// last name of a person
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span> <span class="c1">// country
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">city</span> <span class="o">=</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">;</span> <span class="c1">// capital city
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">age</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="c1">// age in years
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">isMarried</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">isMarried</span><span class="p">);</span> <span class="c1">// Asabeneh, Yetayeh, Finland, Helsinki, 100, True
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Declaring variables with number values
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">gravity</span> <span class="o">=</span> <span class="mf">9.81</span><span class="p">;</span> <span class="c1">// earth gravity  in m/s2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">boilingPoint</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="c1">// water boiling point, temperature in oC
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">PI</span> <span class="o">=</span> <span class="mf">3.14</span><span class="p">;</span> <span class="c1">// geometrical constant
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">gravity</span><span class="p">,</span> <span class="nx">boilingPoint</span><span class="p">,</span> <span class="nx">PI</span><span class="p">);</span> <span class="c1">// 9.81, 100, 3.14
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Variables can also be declaring in one line separated by comma
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="c1">//name of a person
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">job</span> <span class="o">=</span> <span class="s2">&#34;teacher&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">live</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">job</span><span class="p">,</span> <span class="nx">live</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="exercise---1--variables">Exercise - 1 : Variables</h3>
<ol>
<li>
<p>Declare four variables without assigning values</p>
</li>
<li>
<p>Declare four variables with assigning values</p>
</li>
<li>
<p>Declare variables to store your first name, last name, marital status, country and age in multiple lines</p>
</li>
<li>
<p>Declare variables to store your first name, last name, marital status, country and age in a single line</p>
</li>
<li>
<p>Declare two variables <em>myAge</em> and <em>yourAge</em> and assign them initial values and log to browser console.
Output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">I am <span class="m">25</span> years old.
</span></span><span class="line"><span class="cl">You are <span class="m">30</span> years old.
</span></span></code></pre></div></li>
</ol>
<h2 id="comments">Comments</h2>
<p>Commenting in JavaScript is similar to other programming languages. Comments can help to make code more readable.
There are two ways of commenting:</p>
<ul>
<li><em>Single line commenting</em></li>
<li><em>Multiline commenting</em></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// let firstName = &#39;Asabeneh&#39;; single line comment
</span></span></span><span class="line"><span class="cl"><span class="c1">// let lastName = &#39;Yetayeh&#39;; single line comment
</span></span></span></code></pre></div><p>Multiline commenting:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">    let location = &#39;Helsinki&#39;;
</span></span></span><span class="line"><span class="cl"><span class="cm">    let age = 100;
</span></span></span><span class="line"><span class="cl"><span class="cm">    let isMarried = true;
</span></span></span><span class="line"><span class="cl"><span class="cm">    This is a Multiple line comment
</span></span></span><span class="line"><span class="cl"><span class="cm">    */</span>
</span></span></code></pre></div><h3 id="exercise-comments">Exercise: Comments</h3>
<ol>
<li>Write a single line comment which says, <em>comments can make code readable</em></li>
<li>Write a multiline comment which says, <em>comments can make code readable, easy to use</em>
<em>and informative</em></li>
</ol>
<h2 id="data-types">Data types</h2>
<p>In the previous section, we mentioned a little bit about data types. Data or values have data types. Data types describe the characteristics of data. Data types can be divided into two</p>
<ol>
<li>Primitive data types</li>
<li>Non-primitive data types(Object References)</li>
</ol>
<h3 id="primitive-data-types">Primitive Data Types</h3>
<p>Primitive data types in JavaScript includes:</p>
<ol>
<li>Numbers - Integers, floats</li>
<li>Strings - Any data under single or double quote</li>
<li>Booleans - true or false value</li>
<li>Null - empty value or no value</li>
<li>Undefined - a declared variable without a value</li>
</ol>
<p>Non-primitive data types in JavaScript includes:</p>
<ol>
<li>Objects</li>
<li>Functions</li>
<li>Arrays</li>
</ol>
<p>Now, let us see what exactly mean primitive and non-primitive data types.
<em>Primitive</em> data types are immutable(non-modifiable) data types. Once a primitive data type is created we can not modify it.
<strong>Example:</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">word</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span></code></pre></div><p>If we try to modify the string stored in variable <em>word</em>, JavaScript will raise an error. Any data type under a single quote, double-quote, or backtick is a string data type.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">word</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;Y&#34;</span><span class="p">;</span>
</span></span></code></pre></div><p>This expression does not change the string stored in the variable <em>word</em>. So, we can say that strings are not modifiable or immutable.
Primitive data types are compared by its values. Let us compare different data values. See the example below:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numOne</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numTwo</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numOne</span> <span class="o">==</span> <span class="nx">numTwo</span><span class="p">);</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">js</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">py</span> <span class="o">=</span> <span class="s2">&#34;Python&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">js</span> <span class="o">==</span> <span class="nx">py</span><span class="p">);</span> <span class="c1">//false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lightOn</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lightOff</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">lightOn</span> <span class="o">==</span> <span class="nx">lightOff</span><span class="p">);</span> <span class="c1">// false
</span></span></span></code></pre></div><h3 id="non-primitive-data-types">Non-Primitive Data Types</h3>
<p><em>Non-primitive</em> data types are modifiable or mutable. We can modify the value of non-primitive data types after it gets created.
Let us see by creating an array. An array is a list of data values in a square bracket. Arrays can contain the same or different data types. Array values are referenced by their index. In JavaScript array index starts at zero. I.e., the first element of an array is found at index zero, the second element at index one, and the third element at index two, etc.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">nums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">nums</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nums</span><span class="p">);</span> <span class="c1">// [10, 2, 3]
</span></span></span></code></pre></div><p>As you can see, an array in which a non-primitive data type is mutable. Non-primitive data types can not be compared by value. Even if two non-primitive data types have the same properties and values, they are not strictly equal.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">nums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nums</span> <span class="o">==</span> <span class="nx">numbers</span><span class="p">);</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">userOne</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">role</span><span class="o">:</span> <span class="s2">&#34;teaching&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">country</span><span class="o">:</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">userTwo</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">role</span><span class="o">:</span> <span class="s2">&#34;teaching&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">country</span><span class="o">:</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">userOne</span> <span class="o">==</span> <span class="nx">userTwo</span><span class="p">);</span> <span class="c1">// false
</span></span></span></code></pre></div><p>Rule of thumb, we do not compare non-primitive data types. Do not compare array, function, or object.
Non-primitive values are referred to as reference types because they are being compared by reference instead of value. Two objects are only strictly equal if they refer to the same underlying object.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">nums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="nx">nums</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nums</span> <span class="o">==</span> <span class="nx">numbers</span><span class="p">);</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">userOne</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">role</span><span class="o">:</span> <span class="s2">&#34;teaching&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">country</span><span class="o">:</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">userTwo</span> <span class="o">=</span> <span class="nx">userOne</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">userOne</span> <span class="o">==</span> <span class="nx">userTwo</span><span class="p">);</span> <span class="c1">// true
</span></span></span></code></pre></div><p>If you have a hard time understanding the difference between primitive data types and non-primitive data types, you are not the only one. Calm down and just go to the next section and try to come back after some time. Now let us start the data types by number type.</p>
<h2 id="numbers">Numbers</h2>
<p>Numbers are integers and decimal values which can do all the arithmetic operations.
Lets&rsquo; see some examples of Numbers.</p>
<h3 id="declaring-number-data-types">Declaring number data types</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">age</span> <span class="o">=</span> <span class="mi">35</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">gravity</span> <span class="o">=</span> <span class="mf">9.81</span><span class="p">;</span> <span class="c1">//we use const for non-changing values, gravitational constant in  m/s2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">mass</span> <span class="o">=</span> <span class="mi">72</span><span class="p">;</span> <span class="c1">// mass in Kilogram
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">PI</span> <span class="o">=</span> <span class="mf">3.14</span><span class="p">;</span> <span class="c1">// pi a geometrical constant
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//More Examples
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">boilingPoint</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="c1">// temperature in oC, boiling point of water which is a constant
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">bodyTemp</span> <span class="o">=</span> <span class="mi">37</span><span class="p">;</span> <span class="c1">// oC average human body temperature, which is a constant
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">age</span><span class="p">,</span> <span class="nx">gravity</span><span class="p">,</span> <span class="nx">mass</span><span class="p">,</span> <span class="nx">PI</span><span class="p">,</span> <span class="nx">boilingPoint</span><span class="p">,</span> <span class="nx">bodyTemp</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="math-object">Math Object</h3>
<p>In JavaScript the Math Object provides a lots of methods to work with numbers.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">PI</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">PI</span><span class="p">);</span> <span class="c1">// 3.141592653589793
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Rounding to the closest number
</span></span></span><span class="line"><span class="cl"><span class="c1">// if above .5 up if less 0.5 down rounding
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">PI</span><span class="p">));</span> <span class="c1">// 3 to round values to the nearest number
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mf">9.81</span><span class="p">));</span> <span class="c1">// 10
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">PI</span><span class="p">));</span> <span class="c1">// 3 rounding down
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">PI</span><span class="p">));</span> <span class="c1">// 4 rounding up
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">));</span> <span class="c1">// -5, returns the minimum value
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">));</span> <span class="c1">// 20, returns the maximum value
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">randNum</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">();</span> <span class="c1">// creates random number between 0 to 0.999999
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">randNum</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Let us  create random number between 0 to 10
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">num</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="mi">11</span><span class="p">);</span> <span class="c1">// creates random number between 0 and 10
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Absolute value
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">));</span> <span class="c1">//10
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//Square root
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">100</span><span class="p">));</span> <span class="c1">// 10
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span> <span class="c1">//1.4142135623730951
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Power
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">));</span> <span class="c1">// 9
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">E</span><span class="p">);</span> <span class="c1">// 2.718
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Logarithm
</span></span></span><span class="line"><span class="cl"><span class="c1">//Returns the natural logarithm of base E of x, Math.log(x)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span> <span class="c1">// 0.6931471805599453
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span> <span class="c1">// 2.302585092994046
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Trigonometry
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="mi">60</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="mi">60</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="random-number-generator">Random number generator</h4>
<p>The JavaScript Math Object has a random() method number generator which generates number from 0 to 0.999999999&hellip;</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">randomNum</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">();</span> <span class="c1">// generates 0 to 0.999
</span></span></span></code></pre></div><p>Now, let us see how we can use random() method to generate a random number between 0 and 10 inclusive.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">randomNum</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">();</span> <span class="c1">// generates 0 to 0.999
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">numBtnZeroAndTen</span> <span class="o">=</span> <span class="nx">randomNum</span> <span class="o">*</span> <span class="mi">11</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numBtnZeroAndTen</span><span class="p">);</span> <span class="c1">// this gives: min 0 and max 10.99
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">randomNumRoundToFloor</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">numBtnZeroAndTen</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">randomNumRoundToFloor</span><span class="p">);</span> <span class="c1">// this gives between 0 and 10
</span></span></span></code></pre></div><h2 id="strings">Strings</h2>
<p>Strings are texts, which are under <strong><em>single</em></strong> or <strong><em>double</em></strong> quote. To declare a string, we need a variable name, assignment operator, a value under a single quote, double-quote, or backtick.
Lets&rsquo; see some examples of string:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">space</span> <span class="o">=</span> <span class="s2">&#34; &#34;</span><span class="p">;</span> <span class="c1">// an empty space string
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastName</span> <span class="o">=</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">city</span> <span class="o">=</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">language</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">job</span> <span class="o">=</span> <span class="s2">&#34;teacher&#34;</span><span class="p">;</span>
</span></span></code></pre></div><h3 id="string-concatenation">String Concatenation</h3>
<p>Connect two or more strings together is called concatenation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Declaring different variables of different data types
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">space</span> <span class="o">=</span> <span class="s2">&#34; &#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastName</span> <span class="o">=</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">city</span> <span class="o">=</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">language</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">job</span> <span class="o">=</span> <span class="s2">&#34;teacher&#34;</span><span class="p">;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="nx">firstName</span> <span class="o">+</span> <span class="nx">space</span> <span class="o">+</span> <span class="nx">lastName</span><span class="p">;</span> <span class="c1">// concatenation, merging two string together.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">fullName</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Asabeneh Yetayeh
</span></span></code></pre></div><p>We can concatenate string in different ways.</p>
<h4 id="concatenating-using-addition-operator">Concatenating using addition operator</h4>
<p>Concatenating using the addition operator is an old way. This way of concatenating is tedious and error-prone. It is good to know how to concatenate this way, but I strongly suggest to use the second way.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Declaring different variables of different data types
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">space</span> <span class="o">=</span> <span class="s2">&#34; &#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastName</span> <span class="o">=</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">city</span> <span class="o">=</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">language</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">job</span> <span class="o">=</span> <span class="s2">&#34;teacher&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">age</span> <span class="o">=</span> <span class="mi">250</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="nx">firstName</span> <span class="o">+</span> <span class="nx">space</span> <span class="o">+</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">personInfoOne</span> <span class="o">=</span> <span class="nx">fullName</span> <span class="o">+</span> <span class="s2">&#34;. I am &#34;</span> <span class="o">+</span> <span class="nx">age</span> <span class="o">+</span> <span class="s2">&#34;. I live in &#34;</span> <span class="o">+</span> <span class="nx">country</span><span class="p">;</span> <span class="c1">// ES5
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">personInfoOne</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Asabeneh Yetayeh. I am 250. I live in Finland
</span></span></code></pre></div><h4 id="long-literal-strings">Long Literal Strings</h4>
<p>A string could be a single character or paragraph or a page. If the string length is too big it does not fit in one line. We can use the backslash character (\) at the end of each line to indicate that the string will continue on the next line.
<strong>Example:</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">paragraph</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;My name is Asabeneh Yetayeh. I live in Finland, Helsinki.\
</span></span></span><span class="line"><span class="cl"><span class="s2">I am a teacher and I love teaching. I teach HTML, CSS, JavaScript, React, Redux, \
</span></span></span><span class="line"><span class="cl"><span class="s2">Node.js, Python, Data Analysis and D3.js for anyone who is interested to learn. \
</span></span></span><span class="line"><span class="cl"><span class="s2">In the end of 2019, I was thinking to expand my teaching and to reach \
</span></span></span><span class="line"><span class="cl"><span class="s2">to global audience and I started a Python challenge from November 20 - December 19.\
</span></span></span><span class="line"><span class="cl"><span class="s2">It was one of the most rewarding and inspiring experience.\
</span></span></span><span class="line"><span class="cl"><span class="s2">Now, we are in 2020. I am enjoying preparing the 30DaysOfJavaScript challenge and \
</span></span></span><span class="line"><span class="cl"><span class="s2">I hope you are enjoying too.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">paragraph</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="escape-sequences-in-string">Escape Sequences in string</h4>
<p>In JavaScript and other programming language \ followed by some characters is an escape sequence. Let&rsquo;s see the most common escape characters:</p>
<ul>
<li>\n: new line</li>
<li>\t: Tab means(8 spaces)</li>
<li>\\: Back slash</li>
<li>\&rsquo;: Single quote (&rsquo;)</li>
<li>\&quot;:Double quote (&quot;)</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;I hope every one is enjoying the 30 Days Of JavaScript challenge.\nDo you ?&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span> <span class="c1">// line break
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Days\tTopics\tExercises&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Day 1\t3\t5&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Day 2\t3\t5&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Day 3\t3\t5&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Day 4\t3\t5&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;This is a back slash  symbol (\\)&#34;</span><span class="p">);</span> <span class="c1">// To write a back slash
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;In every programming language it starts with &#34;Hello, World!&#34;&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;In every programming language it starts with &#39;Hello, World!&#39;&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;The saying &#39;Seeing is Believing&#39; is&#39;t correct in 2020&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="template-literalstemplate-strings">Template Literals(Template Strings)</h4>
<p>To create a template string, we use two backticks. We can inject data as expression inside a template string. To inject data, we enclose the expression with a curly bracket({}) followed by a $ sign. See the syntax below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">//Syntax
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="sb">`String literal text``String literal text </span><span class="si">${</span><span class="nx">expression</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span></code></pre></div><p><strong>Example: 1</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`The sum of 2 and 3 is 5`</span><span class="p">);</span> <span class="c1">// statically writing the data
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`The sum of </span><span class="si">${</span><span class="nx">a</span><span class="si">}</span><span class="sb"> and </span><span class="si">${</span><span class="nx">b</span><span class="si">}</span><span class="sb"> is </span><span class="si">${</span><span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="si">}</span><span class="sb">`</span><span class="p">);</span> <span class="c1">// injecting the data dynamically
</span></span></span></code></pre></div><p><strong>Example:2</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastName</span> <span class="o">=</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">city</span> <span class="o">=</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">language</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">job</span> <span class="o">=</span> <span class="s2">&#34;teacher&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">age</span> <span class="o">=</span> <span class="mi">250</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="nx">firstName</span> <span class="o">+</span> <span class="s2">&#34; &#34;</span> <span class="o">+</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">personInfoTwo</span> <span class="o">=</span> <span class="sb">`I am </span><span class="si">${</span><span class="nx">fullName</span><span class="si">}</span><span class="sb">. I am </span><span class="si">${</span><span class="nx">age</span><span class="si">}</span><span class="sb">. I live in </span><span class="si">${</span><span class="nx">country</span><span class="si">}</span><span class="sb">.`</span><span class="p">;</span> <span class="c1">//ES6 - String interpolation method
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">personInfoThree</span> <span class="o">=</span> <span class="sb">`I am </span><span class="si">${</span><span class="nx">fullName</span><span class="si">}</span><span class="sb">. I live in </span><span class="si">${</span><span class="nx">city</span><span class="si">}</span><span class="sb">, </span><span class="si">${</span><span class="nx">country</span><span class="si">}</span><span class="sb">. I am a </span><span class="si">${</span><span class="nx">job</span><span class="si">}</span><span class="sb">. I teach </span><span class="si">${</span><span class="nx">language</span><span class="si">}</span><span class="sb">.`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">personInfoTwo</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">personInfoThree</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">I am Asabeneh Yetayeh. I am 250. I live in Finland.
</span></span><span class="line"><span class="cl">I am Asabeneh Yetayeh. I live in Helsinki, Finland. I am a teacher. I teach JavaScript.
</span></span></code></pre></div><p>Using a string template or string interpolation method, we can add expression, which could be a value or some operations(comparison, arithmetic operations, ternary operation).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="si">${</span><span class="nx">a</span><span class="si">}</span><span class="sb"> is greater than </span><span class="si">${</span><span class="nx">b</span><span class="si">}</span><span class="sb">: </span><span class="si">${</span><span class="nx">a</span> <span class="o">&gt;</span> <span class="nx">b</span><span class="si">}</span><span class="sb">`</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="m">2</span> is greater than 3: <span class="nb">false</span>
</span></span></code></pre></div><h3 id="string-methods">String Methods</h3>
<p>Everything in JavaScript is an object. A string is a primitive data type that means we can not modify once it is created. The string object has many string methods. There are different string methods that can help us to work with strings.</p>
<ol>
<li>
<p><em>length</em>: The string <em>length</em> method returns the number of characters in a string included empty space.
<strong>Example:</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">js</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">js</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span> <span class="c1">// 10
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span> <span class="c1">// 8
</span></span></span></code></pre></div></li>
<li>
<p><em>Accessing characters in a string</em>: We can access each character in a string using its index. In programming, counting starts from 0. The first index of the string is zero, and the last index is one minus the length of the string.</p>
</li>
</ol>
<p><img loading="lazy" src="/../assets/images/1/string_indexes.png" alt="Accessing sting by index"  />
</p>
<p>Let us access different characters in &lsquo;JavaScript&rsquo; string.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstLetter</span> <span class="o">=</span> <span class="nx">string</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstLetter</span><span class="p">);</span> <span class="c1">// J
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">secondLetter</span> <span class="o">=</span> <span class="nx">string</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span> <span class="c1">// a
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">thirdLetter</span> <span class="o">=</span> <span class="nx">string</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastLetter</span> <span class="o">=</span> <span class="nx">string</span><span class="p">[</span><span class="mi">9</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">lastLetter</span><span class="p">);</span> <span class="c1">// t
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastIndex</span> <span class="o">=</span> <span class="nx">string</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">lastIndex</span><span class="p">);</span> <span class="c1">// 9
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">[</span><span class="nx">lastIndex</span><span class="p">]);</span> <span class="c1">// t
</span></span></span></code></pre></div><ol start="3">
<li><em>toUpperCase()</em>: this method changes the string to uppercase letters.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">());</span> <span class="c1">// JAVASCRIPT
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">());</span> <span class="c1">// ASABENEH
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">());</span> <span class="c1">// FINLAND
</span></span></span></code></pre></div><ol start="4">
<li><em>toLowerCase()</em>: this method changes the string to lowercase letters.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;JavasCript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">());</span> <span class="c1">// javascript
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">());</span> <span class="c1">// asabeneh
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">());</span> <span class="c1">// finland
</span></span></span></code></pre></div><ol start="5">
<li><em>substr()</em>: It takes two arguments, the starting index and number of characters to slice.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">));</span> <span class="c1">// Script
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">));</span> <span class="c1">// land
</span></span></span></code></pre></div><ol start="6">
<li><em>substring()</em>: It takes two arguments, the starting index and the stopping index but it doesn&rsquo;t include the stopping index.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">));</span> <span class="c1">// Java
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">10</span><span class="p">));</span> <span class="c1">// Script
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">4</span><span class="p">));</span> <span class="c1">// Script
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">));</span> <span class="c1">// Fin
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">7</span><span class="p">));</span> <span class="c1">// land
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">3</span><span class="p">));</span> <span class="c1">// land
</span></span></span></code></pre></div><ol start="7">
<li><em>split()</em>: The split method splits a string at a specified place.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;30 Days Of JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">split</span><span class="p">());</span> <span class="c1">// [&#34;30 Days Of JavaScript&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34; &#34;</span><span class="p">));</span> <span class="c1">// [&#34;30&#34;, &#34;Days&#34;, &#34;Of&#34;, &#34;JavaScript&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">.</span><span class="nx">split</span><span class="p">());</span> <span class="c1">// [&#34;Asabeneh&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;&#34;</span><span class="p">));</span> <span class="c1">// [&#34;A&#34;, &#34;s&#34;, &#34;a&#34;, &#34;b&#34;, &#34;e&#34;, &#34;n&#34;, &#34;e&#34;, &#34;h&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">countries</span> <span class="o">=</span> <span class="s2">&#34;Finland, Sweden, Norway, Denmark, and Iceland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countries</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;,&#34;</span><span class="p">));</span> <span class="c1">// [&#34;Finland&#34;, &#34; Sweden&#34;, &#34; Norway&#34;, &#34; Denmark&#34;, &#34; and Iceland&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countries</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;, &#34;</span><span class="p">));</span> <span class="c1">//  [&#34;Finland&#34;, &#34;Sweden&#34;, &#34;Norway&#34;, &#34;Denmark&#34;, &#34;and Iceland&#34;]
</span></span></span></code></pre></div><ol start="8">
<li><em>trim()</em>: Removes trailing space in the beginning or the end of a string.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;   30 Days Of JavaScript   &#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="s2">&#34; &#34;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34; Asabeneh &#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">.</span><span class="nx">trim</span><span class="p">());</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">   <span class="m">30</span> Days Of JavasCript
</span></span><span class="line"><span class="cl"><span class="m">30</span> Days Of JavasCript
</span></span><span class="line"><span class="cl">  Asabeneh
</span></span><span class="line"><span class="cl">Asabeneh
</span></span></code></pre></div><ol start="9">
<li><em>includes()</em>: It takes a substring argument and it check if substring argument exists in the string. <em>includes()</em> returns a boolean. It checks if a substring exist in a string and it returns true if it exists and false if it doesn&rsquo;t exist.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;30 Days Of JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;Days&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;days&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;Script&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;script&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;java&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;Java&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;fin&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;Fin&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;land&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;Land&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span></code></pre></div><ol start="10">
<li><em>replace()</em>: takes to parameter the old substring and new substring.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">string</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">oldsubstring</span><span class="p">,</span> <span class="nx">newsubstring</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;30 Days Of JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;Python&#34;</span><span class="p">));</span> <span class="c1">// 30 Days Of Python
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;Fin&#34;</span><span class="p">,</span> <span class="s2">&#34;Noman&#34;</span><span class="p">));</span> <span class="c1">// Nomanland
</span></span></span></code></pre></div><ol start="11">
<li><em>charAt()</em>: Takes index and it returns the value at that index</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">string</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;30 Days Of JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span> <span class="c1">// 3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastIndex</span> <span class="o">=</span> <span class="nx">string</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">lastIndex</span><span class="p">));</span> <span class="c1">// t
</span></span></span></code></pre></div><ol start="12">
<li><em>charCodeAt()</em>: Takes index and it returns char code(ASCII number) of the value at that index</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">string</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;30 Days Of JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">3</span><span class="p">));</span> <span class="c1">// D ASCII number is 51
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastIndex</span> <span class="o">=</span> <span class="nx">string</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">lastIndex</span><span class="p">));</span> <span class="c1">// t ASCII is 116
</span></span></span></code></pre></div><ol start="13">
<li><em>indexOf()</em>: Takes a substring and if the substring exists in a string it returns the first position of the substring if does not exist it returns -1</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">string</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">substring</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;30 Days Of JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;D&#34;</span><span class="p">));</span> <span class="c1">// 3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;Days&#34;</span><span class="p">));</span> <span class="c1">// 3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;days&#34;</span><span class="p">));</span> <span class="c1">// -1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;a&#34;</span><span class="p">));</span> <span class="c1">// 4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;JavaScript&#34;</span><span class="p">));</span> <span class="c1">// 11
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;Script&#34;</span><span class="p">));</span> <span class="c1">//15
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;script&#34;</span><span class="p">));</span> <span class="c1">// -1
</span></span></span></code></pre></div><ol start="14">
<li><em>lastIndexOf()</em>: Takes a substring and if the substring exists in a string it returns the last position of the substring if it does not exist it returns -1</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">//syntax
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">string</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="nx">substring</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;I love JavaScript. If you do not love JavaScript what else can you love.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&#34;love&#34;</span><span class="p">));</span> <span class="c1">// 67
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&#34;you&#34;</span><span class="p">));</span> <span class="c1">// 63
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&#34;JavaScript&#34;</span><span class="p">));</span> <span class="c1">// 38
</span></span></span></code></pre></div><ol start="15">
<li><em>concat()</em>: it takes many substrings and creates concatenation.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">string</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">substring</span><span class="p">,</span> <span class="nx">substring</span><span class="p">,</span> <span class="nx">substring</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;30&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="s2">&#34;Days&#34;</span><span class="p">,</span> <span class="s2">&#34;Of&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">));</span> <span class="c1">// 30DaysOfJavaScript
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Fin&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="s2">&#34;land&#34;</span><span class="p">));</span> <span class="c1">// Finland
</span></span></span></code></pre></div><ol start="16">
<li><em>startsWith</em>: it takes a substring as an argument and it checks if the string starts with that specified substring. It returns a boolean(true or false).</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">//syntax
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">string</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="nx">substring</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;Love is the best to in this world&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;Love&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;love&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;world&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;Fin&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;fin&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;land&#34;</span><span class="p">));</span> <span class="c1">//  false
</span></span></span></code></pre></div><ol start="17">
<li><em>endsWith</em>: it takes a substring as an argument and it checks if the string starts with that specified substring. It returns a boolean(true or false).</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">string</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="nx">substring</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;Love is the best to in this world&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;world&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;love&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;in this world&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;land&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;fin&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;Fin&#34;</span><span class="p">));</span> <span class="c1">//  false
</span></span></span></code></pre></div><ol start="18">
<li><em>search</em>: it takes a substring as an argument and it returns the index of the first match.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">string</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="nx">substring</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;I love JavaScript. If you do not love JavaScript what else can you love.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s2">&#34;love&#34;</span><span class="p">));</span> <span class="c1">// 2
</span></span></span></code></pre></div><ol start="19">
<li><em>match</em>: it takes a substring or regular expression pattern as an argument and it returns an array if there is match if not it returns null. Let us see how a regular expression pattern looks like. It starts with / sign and ends with / sign.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;love&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">patternOne</span> <span class="o">=</span> <span class="sr">/love/</span><span class="p">;</span> <span class="c1">// with out any flag
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">patternTwo</span> <span class="o">=</span> <span class="sr">/love/gi</span><span class="p">;</span> <span class="c1">// g-means to search in the whole text, i - case insensitive
</span></span></span></code></pre></div><p>Match syntax</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// syntax
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">string</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">substring</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;I love JavaScript. If you do not love JavaScript what else can you love.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="s2">&#34;love&#34;</span><span class="p">));</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;love&#34;</span>, index: 2, input: <span class="s2">&#34;I love JavaScript. If you do not love JavaScript what else can you love.&#34;</span>, groups: undefined<span class="o">]</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/love/gi</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">));</span> <span class="c1">// [&#34;love&#34;, &#34;love&#34;, &#34;love&#34;]
</span></span></span></code></pre></div><p>Let us extract numbers from text using regular expression. This is not regular expression section, no panic, we will cover regular expression in other section.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">txt</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;In 2019, I run 30 Days of Python. Now, in 2020 I super exited to start this challenge&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">regEx</span> <span class="o">=</span> <span class="sr">/\d+/</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// d with escape character means d not a normal d instead acts a digit
</span></span></span><span class="line"><span class="cl"><span class="c1">// + means one or more digit numbers,
</span></span></span><span class="line"><span class="cl"><span class="c1">// if there is g after that it means global, search everywhere.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">regEx</span><span class="p">));</span> <span class="c1">// [&#34;2&#34;, &#34;0&#34;, &#34;1&#34;, &#34;9&#34;, &#34;3&#34;, &#34;0&#34;, &#34;2&#34;, &#34;0&#34;, &#34;2&#34;, &#34;0&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\d+/g</span><span class="p">));</span> <span class="c1">// [&#34;2019&#34;, &#34;30&#34;, &#34;2020&#34;]
</span></span></span></code></pre></div><ol start="20">
<li><em>repeat()</em>: it takes a number argument and it returned the repeated version of the string.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">string</span><span class="p">.</span><span class="nx">repeat</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s2">&#34;love&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string</span><span class="p">.</span><span class="nx">repeat</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span> <span class="c1">// lovelovelovelovelovelovelovelovelovelove
</span></span></span></code></pre></div><h2 id="checking-data-types-and-casting">Checking Data types and Casting</h2>
<h3 id="checking-data-types">Checking data types</h3>
<ul>
<li>Check Data types: To check the data type of a certain data type we use the <em>typeof</em> and we also change one data type to another.
<strong>Example:</strong></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Different javascript data types
</span></span></span><span class="line"><span class="cl"><span class="c1">// Let&#39;s declare different data types
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span> <span class="c1">// string
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">lastName</span> <span class="o">=</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">;</span> <span class="c1">// string
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">;</span> <span class="c1">// string
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">city</span> <span class="o">=</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">;</span> <span class="c1">// string
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">age</span> <span class="o">=</span> <span class="mi">250</span><span class="p">;</span> <span class="c1">// number, it is not my real age, do not worry about it
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">job</span><span class="p">;</span> <span class="c1">// undefined, because a value was not assigned
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">);</span> <span class="c1">// string
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">firstName</span><span class="p">);</span> <span class="c1">// string
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// number
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="mf">3.14</span><span class="p">);</span> <span class="c1">// number
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">true</span><span class="p">);</span> <span class="c1">// boolean
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">false</span><span class="p">);</span> <span class="c1">// boolean
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">NaN</span><span class="p">);</span> <span class="c1">// number
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">job</span><span class="p">);</span> <span class="c1">// undefined
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">undefined</span><span class="p">);</span> <span class="c1">// undefined
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">null</span><span class="p">);</span> <span class="c1">// object
</span></span></span></code></pre></div><h3 id="changing-data-typecasting">Changing data type(Casting)</h3>
<ul>
<li>Casting: Converting one data type to another data type. We use <em>parseInt()</em>, <em>parseFloat()</em>, <em>Number()</em>, <em>+ sign</em>, <em>str()</em>
When we do arithmetic operations string numbers should be first converted to integer or float if not it returns an error.</li>
</ul>
<h4 id="string-to-int">String to Int</h4>
<p>We can convert string number to a number. Any number inside a quote is a string number. An example of a string number: &lsquo;10&rsquo;, &lsquo;5&rsquo;, etc.
We can convert string to number using the following methods:</p>
<ul>
<li>parseInt()</li>
<li>Number()</li>
<li>Plus sign(+)</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="s2">&#34;10&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numInt</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numInt</span><span class="p">);</span> <span class="c1">// 10
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="s2">&#34;10&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numInt</span> <span class="o">=</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numInt</span><span class="p">);</span> <span class="c1">// 10
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="s2">&#34;10&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numInt</span> <span class="o">=</span> <span class="o">+</span><span class="nx">num</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numInt</span><span class="p">);</span> <span class="c1">// 10
</span></span></span></code></pre></div><h4 id="string-to-float">String to Float</h4>
<p>We can convert string float number to a float number. Any float number inside a quote is a string float number. An example of a string float number: &lsquo;9.81&rsquo;, &lsquo;3.14&rsquo;, &lsquo;1.44&rsquo;, etc.
We can convert string float to number using the following methods:</p>
<ul>
<li>parseFloat()</li>
<li>Number()</li>
<li>Plus sign(+)</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="s2">&#34;9.81&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numFloat</span> <span class="o">=</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numFloat</span><span class="p">);</span> <span class="c1">// 9.81
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="s2">&#34;9.81&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numFloat</span> <span class="o">=</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numFloat</span><span class="p">);</span> <span class="c1">// 9.81
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="s2">&#34;9.81&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numFloat</span> <span class="o">=</span> <span class="o">+</span><span class="nx">num</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numInt</span><span class="p">);</span> <span class="c1">// 9.81
</span></span></span></code></pre></div><h4 id="float-to-int">Float to Int</h4>
<p>We can convert float numbers to integers.
We use the following method to convert float to int:</p>
<ul>
<li>parseInt()</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="mf">9.81</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numInt</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numInt</span><span class="p">);</span> <span class="c1">// 9
</span></span></span></code></pre></div><h3 id="exercises-data-types">Exercises: Data Types</h3>
<ol>
<li>Declare variables and assign string, boolean, undefined and null data types</li>
<li>The JavaScript <strong><em>typeof</em></strong> operator uses to check different data types. Check the data type of each variables from question number 1.</li>
</ol>
<h4 id="exercise-string">Exercise: String</h4>
<ol>
<li>Declare a variable name company and assign it to an initial value <strong>&lsquo;Coding Academy&rsquo;</strong>.</li>
<li>Print the string on the browser console using <strong>console.log()</strong></li>
<li>Print the <strong>length</strong> of the string on the browser console using <em>console.log()</em></li>
<li>Change all the string to capital letters using <strong>toUpperCase()</strong> method</li>
<li>Change all the string to lowercase letters using <strong>toLowerCase()</strong> method</li>
<li>Cut(slice) out the first word of the string using <strong>slice</strong>, <strong>substr()</strong> or <strong>substring()</strong> method</li>
<li>Use <strong>substr</strong> to slice out the phase <strong>because because because</strong> in the following sentence:<strong>&lsquo;You cannot end a sentence with because because because is a conjunction&rsquo;</strong></li>
<li>Check if the string contains a word <strong>Academy</strong> using <strong>includes()</strong> method</li>
<li>Split the <strong>string</strong> into <strong>array</strong> using <strong>split()</strong> method</li>
<li>Split the string Coding Academy at the space using <strong>split()</strong> method</li>
<li>&lsquo;Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon&rsquo; <strong>split</strong> the string at the comma and change it to an array.</li>
<li>Change Coding Academy to Microsoft Academy using <strong>replace()</strong> method.</li>
<li>What is character at index 10 in &lsquo;Coding Academy&rsquo; string use <strong>charAt()</strong> method.</li>
<li>What is the character code of A in &lsquo;Coding Academy&rsquo; string using <strong>charCodeAt()</strong></li>
<li>Use <strong>indexOf</strong> to determine the position of the first occurrence of c in Coding Academy</li>
<li>Use <strong>lastIndexOf</strong> to determine the position of the last occurrence of c in Coding Academy.</li>
<li>Use <strong>indexOf</strong> to find the position of the first occurrence of the word <strong>because</strong> in the following sentence:<strong>&lsquo;You cannot end a sentence with because because because is a conjunction&rsquo;</strong></li>
<li>Use <strong>lastIndexOf</strong> to find the position of the first occurrence of the word <strong>because</strong> in the following sentence:<strong>&lsquo;You cannot end a sentence with because because because is a conjunction&rsquo;</strong></li>
<li>Use <strong>search</strong> to find the position of the first occurrence of the word <strong>because</strong> in the following sentence:<strong>&lsquo;You cannot end a sentence with because because because is a conjunction&rsquo;</strong></li>
<li>Use <strong>trim()</strong> to remove if there is trailing whitespace at the beginning and the end of a string.E.g &rsquo; Coding Academy &lsquo;.</li>
<li>Use <strong>startsWith()</strong> method with the string Coding Academy make the result true</li>
<li>Use <strong>endsWith()</strong> method with the string Coding Academy make the result true</li>
<li>Use <strong>match()</strong> method to find all the c’s in Coding Academy</li>
<li>Use <strong>match()</strong> to count the number all because&rsquo;s in the following sentence:<strong>&lsquo;You cannot end a sentence with because because because is a conjunction&rsquo;</strong></li>
<li>Use <strong>concat()</strong> and merge &lsquo;Coding&rsquo; and &lsquo;Academy&rsquo; to a single string, &lsquo;Coding Academy&rsquo;</li>
<li>Use <strong>repeat()</strong> method to print Coding Academy 5 times</li>
<li>Calculate the total annual income of the person by extract the numbers from the following text. &lsquo;He earns 5000 euro from salary per month, 10000 euro annual bonus, 15000 euro online courses per month.&rsquo;</li>
</ol>
<h3 id="booleans">Booleans</h3>
<p>Boolean value is either true or false. Any comparisons return a boolean value which is either true or false.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">isLightOn</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">isRaining</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">hungry</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">isMarried</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span></code></pre></div><h4 id="exercise-booleans">Exercise: Booleans</h4>
<p>Boolean value is either true or false.</p>
<ol>
<li>Write three JavaScript statement which provide truthy value.</li>
<li>Write three JavaScript statement which provide falsy value.</li>
<li>Use all the following comparison operators to compare the following values: &gt;, &lt; &gt;=, &lt;=, !=, !==,===.
Which are true or which are false ?
<ol>
<li>4 &gt; 3</li>
<li>4 &gt;= 3</li>
<li>4 &lt; 3</li>
<li>4 &lt;= 3</li>
<li>4 == 4</li>
<li>4 === 4</li>
<li>4 != 4</li>
<li>4 !== 4</li>
<li>4 != &lsquo;4&rsquo;</li>
<li>4 == &lsquo;4&rsquo;</li>
<li>4 === &lsquo;4&rsquo;</li>
</ol>
</li>
</ol>
<h3 id="undefined">Undefined</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">);</span> <span class="c1">//not defined, because it is not assigned to a value yet
</span></span></span></code></pre></div><h3 id="null">Null</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">empty</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">empty</span><span class="p">);</span> <span class="c1">// -&gt; null , means no value
</span></span></span></code></pre></div><h3 id="exercise---6--data-types">Exercise - 6 : Data types</h3>
<p>String, number, boolean, null, undefined and symbol(ES6) are JavaScript primitive data types.</p>
<ol>
<li>The JavaScript <em>typeof</em> operator uses to check different data types. Check the data type of each variables from question number 1.</li>
</ol>
<h2 id="operators">Operators</h2>
<h3 id="arithmetic-operators">Arithmetic Operators</h3>
<p>Arithmetic operators are mathematical operators:+, -, _, /, _</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numOne</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">numTwo</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">sum</span> <span class="o">=</span> <span class="nx">numOne</span> <span class="o">+</span> <span class="nx">numTwo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">diff</span> <span class="o">=</span> <span class="nx">numOne</span> <span class="o">-</span> <span class="nx">numTwo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">mult</span> <span class="o">=</span> <span class="nx">numOne</span> <span class="o">*</span> <span class="nx">numTwo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">div</span> <span class="o">=</span> <span class="nx">numOne</span> <span class="o">/</span> <span class="nx">numTwo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">remainder</span> <span class="o">=</span> <span class="nx">numOne</span> <span class="o">%</span> <span class="nx">numTwo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">sum</span><span class="p">,</span> <span class="nx">diff</span><span class="p">,</span> <span class="nx">mult</span><span class="p">,</span> <span class="nx">div</span><span class="p">,</span> <span class="nx">remainder</span><span class="p">);</span> <span class="c1">// -&gt;7,1,12,1.33,1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">PI</span> <span class="o">=</span> <span class="mf">3.14</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">radius</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="c1">// length in meter
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">gravity</span> <span class="o">=</span> <span class="mf">9.81</span><span class="p">;</span> <span class="c1">// in m/s2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">mass</span> <span class="o">=</span> <span class="mi">72</span><span class="p">;</span> <span class="c1">// in Kilogram
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">boilingPoint</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="c1">// temperature in oC, boiling point of water
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">bodyTemp</span> <span class="o">=</span> <span class="mi">37</span><span class="p">;</span> <span class="c1">// body temperature in oC
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Lets calculate area of a circle
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">areaOfCircle</span> <span class="o">=</span> <span class="nx">PI</span> <span class="o">*</span> <span class="nx">radius</span> <span class="o">*</span> <span class="nx">radius</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">areaOfCircle</span><span class="p">);</span> <span class="c1">// -&gt; 314 m
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Lets calculate weight of a substance
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">weight</span> <span class="o">=</span> <span class="nx">mass</span> <span class="o">*</span> <span class="nx">gravity</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">weight</span><span class="p">);</span> <span class="c1">// -&gt; 706.32 N(Newton)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// ConcatEnating string with numbers using string interpolation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm"> The boiling point of water is 100 oC.
</span></span></span><span class="line"><span class="cl"><span class="cm"> Human body temperature is 37 oC.
</span></span></span><span class="line"><span class="cl"><span class="cm"> The gravity of earth is 9.81 m/s2.
</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="sb">`The boiling point of water is </span><span class="si">${</span><span class="nx">boilingPoint</span><span class="si">}</span><span class="sb"> oC.\nHuman body temperature is </span><span class="si">${</span><span class="nx">body</span><span class="si">}</span><span class="sb"> oC.\nThe gravity of earth is </span><span class="si">${</span><span class="nx">gravity</span><span class="si">}</span><span class="sb"> m / s2.`</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span></code></pre></div><h3 id="exercises--arithmetic-operators">Exercises : Arithmetic Operators</h3>
<p>JavaScript arithmetic operators are addition(+), subtraction(-), multiplication(*), division(/), modulus(%), increment(++) and decrement(&ndash;).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">operandOne</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">operandTwo</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span></span></code></pre></div><p>Using the above operands apply different JavaScript arithmetic operators</p>
<h3 id="logical-operators">Logical Operators</h3>
<p>The following symbols are the common logical operators:
&amp;&amp;(ampersand) , ||(pipe) and !(negation).
&amp;&amp; gets true only if the two operands are true.
|| gets true either of the operand is true.
! negates true to false, false to true.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// &amp;&amp; ampersand example
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">check</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">&gt;</span> <span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="mi">10</span> <span class="o">&gt;</span> <span class="mi">5</span><span class="p">;</span> <span class="c1">// true and true -&gt; true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">check</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">&gt;</span> <span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="mi">10</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="c1">// true and false -&gt; false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">check</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="mi">10</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="c1">// false and false -&gt; false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// || pipe or, example
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">check</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">&gt;</span> <span class="mi">3</span> <span class="o">||</span> <span class="mi">10</span> <span class="o">&gt;</span> <span class="mi">5</span><span class="p">;</span> <span class="c1">// true and true -&gt; true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">check</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">&gt;</span> <span class="mi">3</span> <span class="o">||</span> <span class="mi">10</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="c1">// true and false -&gt; true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">check</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="o">||</span> <span class="mi">10</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="c1">// false and false -&gt; false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// ! Negation examples
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">check</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="p">;</span> <span class="c1">// -&gt; true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">check</span> <span class="o">=</span> <span class="o">!</span><span class="p">(</span><span class="mi">4</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// -&gt; false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">isLightOn</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span> <span class="c1">// -&gt; true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">isLightOff</span> <span class="o">=</span> <span class="o">!</span><span class="nx">isLightOn</span><span class="p">;</span> <span class="c1">// -&gt; false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">isMarried</span> <span class="o">=</span> <span class="o">!</span><span class="kc">false</span><span class="p">;</span> <span class="c1">// -&gt; true
</span></span></span></code></pre></div><h3 id="exercises-logical-operators">Exercises: Logical Operators</h3>
<p>Which are true or which are false ?</p>
<ol>
<li>4 &gt; 3 &amp;&amp; 10 &lt; 12</li>
<li>4 &gt; 3 &amp;&amp; 10 &gt; 12</li>
<li>4 &gt; 3 || 10 &lt; 12</li>
<li>4 &gt; 3 || 10 &gt; 12</li>
<li>!(4 &gt; 3)</li>
<li>!(4 &lt; 3)</li>
<li>!(false)</li>
<li>!(4 &gt; 3 &amp;&amp; 10 &lt; 12)</li>
<li>!(4 &gt; 3 &amp;&amp; 10 &gt; 12)</li>
<li>!(4 === &lsquo;4&rsquo;)</li>
</ol>
<h3 id="comparison-operators">Comparison Operators</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">&gt;=</span> <span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">&lt;=</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">!=</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">!==</span> <span class="s2">&#34;4&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">==</span> <span class="s2">&#34;4&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">===</span> <span class="s2">&#34;4&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">===</span> <span class="mi">4</span><span class="p">;</span>
</span></span></code></pre></div><h3 id="exercise-comparison-operators">Exercise: Comparison Operators</h3>
<p>Boolean value is either true or false. Any comparison return a boolean either true or false.
Use all the following comparison operators to compare the following values: &gt;, &lt; &gt;=, &lt;=, !=, !==,===.
Which are true or which are false ?</p>
<ol>
<li>4 &gt; 3</li>
<li>4 &gt;= 3</li>
<li>4 &lt; 3</li>
<li>4 &lt;= 3</li>
<li>4 == 4</li>
<li>4 === 4</li>
<li>4 != 4</li>
<li>4 !== 4</li>
<li>4 != &lsquo;4&rsquo;</li>
<li>4 == &lsquo;4&rsquo;</li>
<li>4 === &lsquo;4&rsquo;</li>
</ol>
<h2 id="conditionals">Conditionals</h2>
<h3 id="if">if</h3>
<p>We use if condition to check only on condition.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nx">condition</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// code goes here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">isRaining</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nx">isRaining</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Remember to take your rain coat.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="if-else">if else</h3>
<p>When we have more than one condition we use the if and else condition.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nx">condition</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// if the condition meets, this block of code runs
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// if condition doesn&#39;t meet, this block code runs
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">isRaining</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nx">isRaining</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;You need a rain coat.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;No need for a rain coat.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="if-else-if-else">if else if else</h3>
<p>Whenever we have multiple conditions.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// if else if else
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">weather</span> <span class="o">=</span> <span class="s2">&#34;sunny&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nx">weather</span> <span class="o">===</span> <span class="s2">&#34;rainy&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;You need a rain coat.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">weather</span> <span class="o">===</span> <span class="s2">&#34;cloudy&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;It might be cold, you need a jacket.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">weather</span> <span class="o">===</span> <span class="s2">&#34;sunny&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Go out freely.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;No need for rain coat.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="switch">switch</h3>
<p>Switch an alternative for if else if else</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">weather</span> <span class="o">=</span> <span class="s2">&#34;cloudy&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">switch</span> <span class="p">(</span><span class="nx">weather</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;rainy&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;You need a rain coat.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;cloudy&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;It might be cold, you need a jacket.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;sunny&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Go out freely.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">default</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34; No need for rain coat.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Switch More Examples
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">var</span> <span class="nx">dayUserInput</span> <span class="o">=</span> <span class="nx">prompt</span><span class="p">(</span><span class="s2">&#34;What day is it ?&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">day</span> <span class="o">=</span> <span class="nx">dayUserInput</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">switch</span> <span class="p">(</span><span class="nx">day</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;monday&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Today is Monday&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;tuesday&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Today is Tuesday&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;wednesday&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Today is Wednesday&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;thursday&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Today is Thursday&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;friday&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Today is Friday&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;saturday&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Today is Saturday&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">case</span> <span class="s2">&#34;sunday&#34;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Today is Sunday&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">default</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;It is not a week day.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="ternary-operators">Ternary Operators</h3>
<p>Another way to write conditionals is using ternary operators.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">isRaining</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">isRaining</span>
</span></span><span class="line"><span class="cl">  <span class="o">?</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;You need a rain coat.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="o">:</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;No need for a rain coat.&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="exercise-conditionals">Exercise: Conditionals</h3>
<ol>
<li>
<p>Get user input using prompt(“Enter your age:”). If user is 18 or older , give feedback:You are old enough to drive but if not 18 give feedback to wait for the years he supposed to wait for.
Output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Enter your age: <span class="m">30</span>
</span></span><span class="line"><span class="cl">You are old enough to drive.
</span></span></code></pre></div><p>Output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Enter your age:15
</span></span><span class="line"><span class="cl">You are left with <span class="m">3</span> years to drive.
</span></span></code></pre></div></li>
<li>
<p>Compare the values of myAge and yourAge using if … else. Based on the comparison log to console who is older (me or you). Use prompt(“Enter your age:”) to get the age as input.
Output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Enter your age: <span class="m">30</span>
</span></span><span class="line"><span class="cl">You are <span class="m">5</span> years older than me.
</span></span></code></pre></div></li>
<li>
<p>If a is greater than b return a is greater than b else a is less than b.
Output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"> <span class="nb">let</span> <span class="nv">a</span> <span class="o">=</span> <span class="m">4</span>
</span></span><span class="line"><span class="cl"> <span class="nb">let</span> <span class="nv">b</span> <span class="o">=</span> <span class="m">3</span>
</span></span><span class="line"><span class="cl"> <span class="m">4</span> is greater than <span class="m">3</span>
</span></span></code></pre></div></li>
<li>
<p>Write a code which give grade students according to theirs scores:</p>
<ul>
<li>80-100, A</li>
<li>70-89, B</li>
<li>60-69, C</li>
<li>50-59, D</li>
<li>0 -49, F</li>
</ul>
</li>
<li>
<p>Check if the season is Autumn, Winter, Spring or Summer.
If the user input is:</p>
<ul>
<li>September, October or November, the season is Autumn.</li>
<li>December, January or February, the season is Winter.</li>
<li>March, April or May, the season is Spring</li>
<li>June, July or August, the season is Summer</li>
</ul>
</li>
</ol>
<h2 id="loops">Loops</h2>
<p>In programming languages to carry out repetitive task we use different kinds of loop. The following examples are the commonly used loops.</p>
<h3 id="for-loop">For Loop</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// for loop structure
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">for</span><span class="p">(</span><span class="nx">initialization</span><span class="p">,</span> <span class="nx">condition</span><span class="p">,</span> <span class="nx">increment</span><span class="o">/</span><span class="nx">decrement</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// code goes here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="while-loop">While loop</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="p">(</span><span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">i</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="do-while-loop">Do while loop</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">i</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">while</span> <span class="p">(</span><span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="exercisesloops">Exercises:Loops</h3>
<ol>
<li>
<p>Iterate 0 to 10 using for loop, do the same using while and do while loop.</p>
</li>
<li>
<p>Iterate 10 to 0 using for loop, do the same using while and do while loop.</p>
</li>
<li>
<p>Write a loop that makes seven calls to console.log to output the following triangle:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl">    <span class="err">#</span>
</span></span><span class="line"><span class="cl">    <span class="err">##</span>
</span></span><span class="line"><span class="cl">    <span class="err">###</span>
</span></span><span class="line"><span class="cl">    <span class="err">####</span>
</span></span><span class="line"><span class="cl">    <span class="err">#####</span>
</span></span><span class="line"><span class="cl">    <span class="err">######</span>
</span></span><span class="line"><span class="cl">    <span class="err">#######</span>
</span></span></code></pre></div></li>
<li>
<p>Iterate the array, [&lsquo;HTML&rsquo;, &lsquo;CSS&rsquo;, &lsquo;JavaScript&rsquo;] using a for loop and print out the items.</p>
</li>
<li>
<p>Use for loop to iterate from 0 to 100 and print only even numbers</p>
</li>
<li>
<p>Use for loop to iterate from 0 to 100 and print only odd numbers</p>
</li>
<li>
<p>Use for loop to iterate from 0 to 100 and print and print the sum of all numbers.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">The</span> <span class="nx">sum</span> <span class="nx">all</span> <span class="nx">numbers</span> <span class="nx">is</span> <span class="mf">5050.</span>
</span></span></code></pre></div></li>
<li>
<p>Use for loop to iterate from 0 to 100 and print the sum of all evens and the sum of all odds.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">The</span> <span class="nx">sum</span> <span class="k">of</span> <span class="nx">all</span> <span class="nx">evens</span> <span class="nx">is</span> <span class="mf">2550.</span> <span class="nx">And</span> <span class="nx">the</span> <span class="nx">sum</span> <span class="k">of</span> <span class="nx">all</span> <span class="nx">odds</span> <span class="nx">is</span> <span class="mf">2500.</span>
</span></span></code></pre></div></li>
</ol>
<h2 id="arrays">Arrays</h2>
<p>In contrast to variables array can store <em>multiple values</em>. Each value in an array has an <em>index</em> and each index has <em>a reference in a memory address</em>. Each value can be accessed by using their <em>indexes</em>. The index of an array starts from <em>zero</em> and the last element is less by one from the length of the array.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mf">3.14</span><span class="p">,</span> <span class="mf">9.81</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mf">98.6</span><span class="p">,</span> <span class="mi">100</span><span class="p">];</span> <span class="c1">// set of numbers
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="c1">// =&gt; to know the size of the array, which is 6
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">)</span>        <span class="c1">// -&gt; [0, 3.14, 9.81, 37, 98.6, 100]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>     <span class="c1">//  -&gt; 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">[</span><span class="mi">5</span><span class="p">])</span>     <span class="c1">//  -&gt; 100
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastIndex</span> <span class="o">=</span> <span class="nx">numbers</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">[</span><span class="nx">lastIndex</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="mi">100</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">webTechs</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;HTML&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;CSS&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;JavaScript&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;React&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Redux&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Node&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;MongoDB&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span> <span class="c1">// List of web technologies
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">webTechs</span><span class="p">)</span>        <span class="c1">// all the array items
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">webTechs</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="c1">// =&gt; to know the size of the array, which is 7
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">webTechs</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>     <span class="c1">//  -&gt; HTML
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">webTechs</span><span class="p">[</span><span class="mi">6</span><span class="p">])</span>     <span class="c1">//  -&gt; MongoDB
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastIndex</span> <span class="o">=</span> <span class="nx">webTechs</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">webTechs</span><span class="p">[</span><span class="nx">lastIndex</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="nx">MongoDB</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">countries</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Albania&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Bolivia&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Canada&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Denmark&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Ethiopia&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Finland&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Germany&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Hungary&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Ireland&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Japan&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Kenya&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span> <span class="c1">// List of countries;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countries</span><span class="p">)</span>     <span class="c1">// -&gt; all countries in array
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countries</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>  <span class="c1">//  -&gt; Albania
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countries</span><span class="p">[</span><span class="mi">10</span><span class="p">])</span> <span class="c1">//  -&gt; Kenya
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastIndex</span> <span class="o">=</span> <span class="nx">countries</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countries</span><span class="p">[</span><span class="nx">lastIndex</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="c1">// Kenya
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">shoppingCart</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Milk&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Mango&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Tomato&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Potato&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Avocado&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Meat&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Eggs&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;Sugar&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span> <span class="c1">// List of food products
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">shoppingCart</span><span class="p">)</span>     <span class="c1">// -&gt; all shoppingCart in array
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">shoppingCart</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>  <span class="c1">//  -&gt; Milk
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">shoppingCart</span><span class="p">[</span><span class="mi">7</span><span class="p">])</span>  <span class="c1">//  -&gt; Sugar
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">lastIndex</span> <span class="o">=</span> <span class="nx">shoppingCart</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">shoppingCart</span><span class="p">[</span><span class="nx">lastIndex</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="c1">// Sugar
</span></span></span></code></pre></div><h3 id="exercise--arrays">Exercise : Arrays</h3>
<ol>
<li>Declare an <em>empty</em> array;</li>
<li>Declare an array with more than 5 number of items</li>
<li>Find the length of your array</li>
<li>Get the first item, the middle item and the last item of the array</li>
<li>Declare an array called <em>mixedDataTypes</em>,put different data types and in your array and the array size should be greater than 5</li>
<li>Declare an array variable name itCompanies and assign initial values Facebook, Google, Microsoft, Apple, IBM, Oracle and Amazon.</li>
<li>Print the array using <em>console.log()</em></li>
<li>Print the number of companies in the array</li>
<li>Print the first company, middle and last company</li>
<li>Print out each company</li>
<li>Change companies to uppercase and print them out</li>
<li>Print the array like as a sentence: Facebook, Google, Microsoft, Apple, IBM,Oracle and Amazon are big IT companies.</li>
<li>Check if a certain company exists in the itCompanies array. If it exist return the company else return a company is <em>not found</em>.</li>
<li>Filter out companies which have more than one &lsquo;o&rsquo; without the filter method</li>
<li>Sort the array using <em>sort()</em> method</li>
<li>Reverse the array without <em>reverse</em> method</li>
<li>Reverse the array using <em>reverse()</em> method</li>
<li>Slice out the first 3 companies from the array</li>
<li>Slice out the last 3 companies from the array</li>
<li>Slice out the middle IT company or companies from the array</li>
<li>Remove the first IT company from the array</li>
<li>Remove the middle IT company or companies from the array</li>
<li>Remove the last IT company from the array</li>
<li>Remove all IT companies</li>
</ol>
<h2 id="more-on-arrays">More on Arrays</h2>
<p>There are different methods to manipulate an array. These are some of the available methods to deal with arrays:<em>Array,length, concat, indexOf, slice, splice, join, toString, includes, lastIndexOf, isArray, fill, push, pop, shift, unshift</em>
Array:To create an array.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">arr</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">();</span> <span class="c1">// creates an an empty array
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">arr</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">eightEmptyValues</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">8</span><span class="p">);</span> <span class="c1">// it creates eight empty values
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">eightEmptyValues</span><span class="p">);</span> <span class="c1">// [empty x 8]
</span></span></span></code></pre></div><ul>
<li><em>fill</em>: Fill all the array elements with a static value</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">arr</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">();</span> <span class="c1">// creates an an empty array
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">arr</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">eightXvalues</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">8</span><span class="p">).</span><span class="nx">fill</span><span class="p">(</span><span class="s2">&#34;X&#34;</span><span class="p">);</span> <span class="c1">// it creates eight element values
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">eightXvalues</span><span class="p">);</span> <span class="c1">// [&#39;X&#39;, &#39;X&#39;,&#39;X&#39;,&#39;X&#39;,&#39;X&#39;,&#39;X&#39;,&#39;X&#39;,&#39;X&#39;]
</span></span></span></code></pre></div><ul>
<li><em>concat</em>: To concatenate two arrays.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">firstList</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">secondList</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">thirdList</span> <span class="o">=</span> <span class="nx">firstList</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">secondList</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">thirdList</span><span class="p">);</span> <span class="c1">// [1,2,3,4,5,6]
</span></span></span></code></pre></div><ul>
<li><em>length</em>: To know the size of the array</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span> <span class="c1">// -&gt; 5
</span></span></span></code></pre></div><ul>
<li><em>indexOf</em>: To check if an item exist in an array. If it exist it returns the index else it returns -1.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">5</span><span class="p">));</span> <span class="c1">// -&gt; 4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span> <span class="c1">// -&gt; -1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span> <span class="c1">// -&gt; 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">6</span><span class="p">));</span> <span class="c1">// -&gt; -1
</span></span></span></code></pre></div><ul>
<li><em>lastIndexOf</em> :Give the position of the last item in the array. If it exist it returns the index else it returns -1.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span> <span class="c1">// -&gt; 7
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span> <span class="c1">// -&gt; -1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span> <span class="c1">// -&gt; 6
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="mi">4</span><span class="p">));</span> <span class="c1">// -&gt; 3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="mi">6</span><span class="p">));</span> <span class="c1">// -&gt; -1
</span></span></span></code></pre></div><p><em>includes</em>: To check if an item exist in an array. If it exist it returns the true else it returns false.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="mi">5</span><span class="p">));</span> <span class="c1">// -&gt; true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span> <span class="c1">// -&gt; false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span> <span class="c1">// -&gt; true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="mi">6</span><span class="p">));</span> <span class="c1">// -&gt; false
</span></span></span></code></pre></div><ul>
<li><em>isArray</em>: To check if the data type is an array</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">numbers</span><span class="p">));</span> <span class="c1">// -&gt; true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">number</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">number</span><span class="p">));</span> <span class="c1">// -&gt; false
</span></span></span></code></pre></div><ul>
<li><em>toString</em>: Converts array to string</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span> <span class="c1">// 1,2,3,4,5
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Mathias&#34;</span><span class="p">,</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="s2">&#34;Brook&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">names</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span> <span class="c1">// Asabeneh,Mathias,Elias,Brook
</span></span></span></code></pre></div><p>join:To join the elements of the array, the argument passed in the join method will be joined in the array and return as a string.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">join</span><span class="p">());</span> <span class="c1">// 1,2,3,4,5
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Mathias&#34;</span><span class="p">,</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="s2">&#34;Brook&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">names</span><span class="p">.</span><span class="nx">join</span><span class="p">());</span> <span class="c1">// Asabeneh,Mathias,Elias,Brook
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">names</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;&#34;</span><span class="p">));</span> <span class="c1">//AsabenehMathiasEliasBrook
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">names</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34; &#34;</span><span class="p">));</span> <span class="c1">//Asabeneh Mathias Elias Brook
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">names</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;, &#34;</span><span class="p">));</span> <span class="c1">//Asabeneh, Mathias, Elias, Brook
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">names</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34; # &#34;</span><span class="p">));</span> <span class="c1">//Asabeneh # Mathias # Elias # Brook
</span></span></span></code></pre></div><p>Slice: To cut out a multiple items in range. It takes two parameters:starting and ending position. It doesn&rsquo;t include the ending position</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">slice</span><span class="p">()</span>        <span class="c1">// -&gt; it copies all  item
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>       <span class="c1">// -&gt; it copies all  item
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">numbers</span><span class="p">.</span><span class="nx">length</span><span class="p">))</span> <span class="c1">// it copies all  item
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>    <span class="c1">// -&gt; [2,3,4] // it doesn&#39;t include the ending position
</span></span></span></code></pre></div><p>Splice: It takes three parameters:Starting position, number of times to be removed and number items to be added.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">splice</span><span class="p">()</span>      <span class="c1">// -&gt; remove all items
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>  <span class="c1">// remove the first item
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span> <span class="c1">// -&gt; [1,2,6,7,8] //it removes two item and replace three items
</span></span></span></code></pre></div><ul>
<li><em>push</em>: adding item in the end</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">numbers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">6</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span> <span class="c1">// -&gt; [1,2,3,4,5,6]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">numbers</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span> <span class="c1">// -&gt; remove one item from the end
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span> <span class="c1">// -&gt; [1,2,3,4,5]
</span></span></span></code></pre></div><ul>
<li><em>pop</em>: Removing item in the end</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">numbers</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span> <span class="c1">// -&gt; remove one item from the end
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span> <span class="c1">// -&gt; [1,2,3,4]
</span></span></span></code></pre></div><ul>
<li><em>shift</em>: Removing item in the beginning</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">numbers</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span> <span class="c1">// -&gt; remove one item from the beginning
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span> <span class="c1">// -&gt; [2,3,4,5]
</span></span></span></code></pre></div><ul>
<li><em>unshift</em>: Adding item in the beginning</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">numbers</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="c1">// -&gt; remove one item from the beginning
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span> <span class="c1">// -&gt; [0,1,2,3,4,5]
</span></span></span></code></pre></div><hr>
<h3 id="exercise--10--array-methods">Exercise -10 : Array Methods</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">shoppingCart</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Milk&#34;</span><span class="p">,</span> <span class="s2">&#34;Coffee&#34;</span><span class="p">,</span> <span class="s2">&#34;Tea&#34;</span><span class="p">,</span> <span class="s2">&#34;Honey&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">todoList</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">task</span><span class="o">:</span> <span class="s2">&#34;Learn JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">time</span><span class="o">:</span> <span class="s2">&#34;4/3/2019 8:30&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">completed</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">task</span><span class="o">:</span> <span class="s2">&#34;Help some in need&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">time</span><span class="o">:</span> <span class="s2">&#34;4/3/2019 4:00&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">completed</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">task</span><span class="o">:</span> <span class="s2">&#34;Do some physical exercises&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">time</span><span class="o">:</span> <span class="s2">&#34;4/3/2019 6:00&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">completed</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><h2 id="functions">Functions</h2>
<p>A function is a block of code designed to perform a certain task.
A function is declared by a function key word followed by a name, followed by parentheses (). A parentheses can take a parameter. If a function take a parameter it will be called with argument. A function can also take a default parameter.
A function can be declared or created in couple of ways:</p>
<ul>
<li><em>Declaration function</em></li>
<li><em>Expression function</em></li>
<li><em>Anonymous function</em></li>
<li><em>Arrow function</em></li>
</ul>
<h3 id="function-declaration">Function Declaration</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">//function without parameter
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">functionName</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl"><span class="c1">// code goes here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">functionName</span><span class="p">()</span> <span class="c1">// calling function by its name and with parentheses
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//function without parameter
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">addTwoNumbers</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">var</span> <span class="nx">numOne</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kd">var</span> <span class="nx">numTwo</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kd">var</span> <span class="nx">sum</span> <span class="o">=</span> <span class="nx">numOne</span> <span class="o">+</span> <span class="nx">numTwo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">sum</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">addTwoNumbers</span><span class="p">();</span> <span class="c1">// function has to be called to be executed by it name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// function with one parameter
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">functionName</span><span class="p">(</span><span class="nx">parm1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="c1">//code goes her
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">functionName</span><span class="p">(</span><span class="nx">parm1</span><span class="p">);</span> <span class="c1">// during calling or invoking one argument needed
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">areaOfCircle</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">area</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span> <span class="o">*</span> <span class="nx">r</span> <span class="o">*</span> <span class="nx">r</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">area</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">areaOfCircle</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span> <span class="c1">// should be called with one argument
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">square</span><span class="p">(</span><span class="nx">number</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">number</span> <span class="o">*</span> <span class="nx">number</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">square</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// function with two parameters
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">functionName</span><span class="p">(</span><span class="nx">parm1</span><span class="p">,</span> <span class="nx">parm2</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="c1">//code goes her
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">functionName</span><span class="p">(</span><span class="nx">parm1</span><span class="p">,</span><span class="nx">parm2</span><span class="p">);</span> <span class="c1">// during calling or invoking two arguments needed
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Function without parameter doesn&#39;t take input, so lets make a parameter with parameter
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">sumTwoNumbers</span><span class="p">(</span><span class="nx">numOne</span><span class="p">,</span> <span class="nx">numTwo</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">var</span> <span class="nx">sum</span> <span class="o">=</span> <span class="nx">numOne</span> <span class="o">+</span> <span class="nx">numTwo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">sum</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">sumTwoNumbers</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">);</span> <span class="c1">// calling functions
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// If a function doesn&#39;t return it doesn&#39;t store data, so it should return
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">sumTwoNumbersAndReturn</span><span class="p">(</span><span class="nx">numOne</span><span class="p">,</span> <span class="nx">numTwo</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">var</span> <span class="nx">sum</span> <span class="o">=</span> <span class="nx">numOne</span> <span class="o">+</span> <span class="nx">numTwo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">sum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">sumTwoNumbersAndReturn</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">printFullName</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="sb">`</span><span class="si">${</span><span class="nx">firstName</span><span class="si">}</span><span class="sb"> </span><span class="si">${</span><span class="nx">lastName</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">printFullName</span><span class="p">(</span><span class="s1">&#39;Asabeneh&#39;</span><span class="p">,</span> <span class="s1">&#39;Yetayeh&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">printFullName</span><span class="p">(</span><span class="s1">&#39;Dean&#39;</span><span class="p">,</span> <span class="s1">&#39;Phan&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// function with multiple parameters
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">functionName</span><span class="p">(</span><span class="nx">parm1</span><span class="p">,</span> <span class="nx">parm2</span><span class="p">,</span> <span class="nx">parm3</span><span class="p">,...){</span>
</span></span><span class="line"><span class="cl">  <span class="c1">//code goes ther
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">functionName</span><span class="p">(</span><span class="nx">parm1</span><span class="p">,</span><span class="nx">parm2</span><span class="p">,</span><span class="nx">parm3</span><span class="p">,...)</span> <span class="c1">// during calling or invoking three arguments needed
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// this function takes array as a parameter and sum up the numbers in the array
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">sumArrayValues</span><span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">var</span> <span class="nx">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">sum</span> <span class="o">=</span> <span class="nx">sum</span> <span class="o">+</span> <span class="nx">numbers</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">sum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">sumArrayValues</span><span class="p">(</span><span class="nx">numbers</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">areaOfCircle</span> <span class="o">=</span> <span class="p">(</span><span class="nx">radius</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="kd">let</span> <span class="nx">area</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span> <span class="o">*</span> <span class="nx">radius</span> <span class="o">*</span> <span class="nx">radius</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="nx">area</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">areaOfCircle</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span></span></code></pre></div><h3 id="function-expression">Function Expression</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">//Declaration function
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">square</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">n</span> <span class="o">*</span> <span class="nx">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">square</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span> <span class="c1">// -&gt; 4
</span></span></span><span class="line"><span class="cl"><span class="c1">// Function expression
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">square</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">n</span> <span class="o">*</span> <span class="nx">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">square</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span> <span class="c1">// -&gt; 4
</span></span></span></code></pre></div><h3 id="anonymous-function">Anonymous Function</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Self invoking functions
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">n</span> <span class="o">*</span> <span class="nx">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">})(</span><span class="mi">2</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">x</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">n</span> <span class="o">*</span> <span class="nx">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">})(</span><span class="mi">2</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 4
</span></span></span></code></pre></div><h3 id="arrow-function">Arrow Function</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">square</span> <span class="o">=</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">n</span> <span class="o">*</span> <span class="nx">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">square</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span> <span class="c1">// -&gt; 4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// if we have only one line, it can be written as follows
</span></span></span><span class="line"><span class="cl"><span class="c1">// Explicit return
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">square</span> <span class="o">=</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">n</span> <span class="o">*</span> <span class="nx">n</span><span class="p">;</span> <span class="c1">// -&gt; 4
</span></span></span></code></pre></div><h3 id="arrow-function-vs-declaration-function">Arrow Function vs Declaration Function</h3>
<p>Arrow function and regular functions are not exactly the same.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"></code></pre></div><h3 id="exercise---10--functions">Exercise - 10 : Functions</h3>
<ol>
<li>
<p>Declare a function <em>fullName</em> and it print out your full name.</p>
</li>
<li>
<p>Declare a function <em>fullName</em> and now it takes firstName, lastName as a parameter and it returns your full - name.</p>
</li>
<li>
<p>Declare a function <em>addNumbers</em> and it takes two two parameters and it returns sum.</p>
</li>
<li>
<p>An area of a rectangle is calculated as follows: <em>area = length x width</em>. Write a function which calculates <em>areaOfRectangle</em>.</p>
</li>
<li>
<p>A perimeter of a rectangle is calculated as follows: <em>perimeter= 2x(length + width)</em>. Write a function which calculates <em>perimeterOfRectangle</em>.</p>
</li>
<li>
<p>A volume of a rectangular prism is calculated as follows: <em>volume = length x width x height</em>. Write a function which calculates <em>volumeOfRectPrism</em>.</p>
</li>
<li>
<p>Area of a circle is calculated as follows: <em>area = π x r x r</em>. Write a function which calculates <em>areaOfCircle</em></p>
</li>
<li>
<p>Circumference of a circle is calculated as follows: <em>circumference = 2πr</em>. Write a function which calculates <em>circumOfCircle</em></p>
</li>
<li>
<p>Density of a substance is calculated as follows:<em>density= mass/volume</em>. Write a function which calculates <em>density</em>.</p>
</li>
<li>
<p>Speed is calculated by dividing the total distance covered by a moving object divided by the total amount of time taken. Write a function which calculates a speed of a moving object, <em>speed</em>.</p>
</li>
<li>
<p>Weight of a substance is calculated as follows: <em>weight = mass x gravity</em>. Write a function which calculates <em>weight</em>.</p>
</li>
<li>
<p>Temperature in oC can be converted to oF using this formula: <em>oF = (oC x 9/5) + 32</em>. Write a function which convert oC to oF <em>convertCelciusToFahrenheit</em>.</p>
</li>
<li>
<p>Body mass index(BMI) is calculated as follows: <em>bmi = weight in Kg / (height x height) in m2</em>. Write a function which calculates <em>bmi</em>. BMI is used to broadly define different weight groups in adults 20 years old or older.Check if a person is <em>underweight, normal, overweight</em> or <em>obese</em> based the information given below.</p>
<ul>
<li>The same groups apply to both men and women.</li>
<li><em>Underweight</em>: BMI is less than 18.5</li>
<li><em>Normal weight</em>: BMI is 18.5 to 24.9</li>
<li><em>Overweight</em>: BMI is 25 to 29.9</li>
<li><em>Obese</em>: BMI is 30 or more</li>
</ul>
</li>
<li>
<p>Write a function called <em>checkSeason</em>, it takes a month parameter and returns the season:Autumn, Winter, Spring or Summer.</p>
</li>
<li>
<p>Math.max returns its largest argument. Write a function findMax that takes three arguments and returns their maximum with out using Math.max method.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">findMax</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">findMax</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="mi">0</span><span class="p">;</span>
</span></span></code></pre></div></li>
<li>
<p>Linear equation is calculated as follows: <em>ax + b = c</em>. Write a function which calculates value of a linear equation, <em>solveLinEquation</em>.</p>
</li>
<li>
<p>Quadratic equation is calculated as follows: <em>ax2 + bx + c = 0</em>. Write a function which calculates value or values of a quadratic equation, <em>solveQuadEquation</em>.</p>
</li>
<li>
<p>Declare a function name <em>printArray</em>. It takes array as a parameter and it prints out each value of the array.</p>
</li>
<li>
<p>Declare a function name <em>swapValues</em>. This function swaps value of x to y.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">swapValues</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span> <span class="c1">// x =&gt; 4, y=&gt;3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">swapValues</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span> <span class="c1">// x = 5, y = 4
</span></span></span></code></pre></div></li>
<li>
<p>Declare a function name <em>reverseArray</em>. It takes array as a parameter and it returns the reverse of the array (don&rsquo;t use method).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">reverseArray</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]));</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">reverseArray</span><span class="p">([</span><span class="s2">&#34;A&#34;</span><span class="p">,</span> <span class="s2">&#34;B&#34;</span><span class="p">,</span> <span class="s2">&#34;C&#34;</span><span class="p">]));</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="s2">&#34;C&#34;</span><span class="p">,</span> <span class="s2">&#34;B&#34;</span><span class="p">,</span> <span class="s2">&#34;A&#34;</span><span class="p">];</span>
</span></span></code></pre></div></li>
<li>
<p>Declare a function name <em>capitalizeArray</em>. It takes array as a parameter and it returns the - capitalizedarray.</p>
</li>
<li>
<p>Declare a function name <em>addItem</em>. It takes an item parameter and it returns an array after adding the item</p>
</li>
<li>
<p>Declare a function name <em>removeItem</em>. It takes an index parameter and it returns an array after removing an item</p>
</li>
<li>
<p>Declare a function name <em>sumOfNumbers</em>. It takes a number parameter and it adds all the numbers in that range.</p>
</li>
<li>
<p>Declare a function name <em>sumOfOdds</em>. It takes a number parameter and it adds all the odd numbers in that - range.</p>
</li>
<li>
<p>Declare a function name <em>sumOfEven</em>. It takes a number parameter and it adds all the even numbers in that - range.</p>
</li>
<li>
<p>Declare a function name evensAndOdds . It takes a positive integer as parameter and it counts number of evens and odds in the number.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">evensAndOdds<span class="o">(</span>100<span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">The number of odds are 50.
</span></span><span class="line"><span class="cl">The number of evens are 51.
</span></span></code></pre></div></li>
<li>
<p>Write a function which takes any number of arguments and return the sum of the arguments</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">sum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// -&gt; 6
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">sum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span> <span class="c1">// -&gt; 10
</span></span></span></code></pre></div></li>
<li>
<p>Writ a function which generates a <em>randomUserIp</em>.</p>
</li>
<li>
<p>Write a function which generates a <em>randomMacAddress</em></p>
</li>
<li>
<p>Declare a function name <em>randomHexaNumberGenerator</em>. When this function is called it generates a random hexadecimal number. The function return the hexadecimal number.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">console.log<span class="o">(</span>randomHexaNumberGenerator<span class="o">())</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;#ee33df&#39;</span>
</span></span></code></pre></div></li>
<li>
<p>Declare a function name <em>userIdGenerator</em>. When this function is called it generates seven character id. The function return the id.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">console.log<span class="o">(</span>userIdGenerator<span class="o">())</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">41XTDbE
</span></span></code></pre></div></li>
<li>
<p>Modify question number n . Declare a function name <em>userIdGeneratedByUser</em>. It doesn’t take any parameter but it takes two inputs using prompt(). One of the input is the number of characters and the second input is the number of ids which are supposed to be generated.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">userIdGeneratedByUser<span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;kcsy2
</span></span></span><span class="line"><span class="cl"><span class="s1">SMFYb
</span></span></span><span class="line"><span class="cl"><span class="s1">bWmeq
</span></span></span><span class="line"><span class="cl"><span class="s1">ZXOYh
</span></span></span><span class="line"><span class="cl"><span class="s1">2Rgxf
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">userIdGeneratedByUser<span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;1GCSgPLMaBAVQZ26
</span></span></span><span class="line"><span class="cl"><span class="s1">YD7eFwNQKNs7qXaT
</span></span></span><span class="line"><span class="cl"><span class="s1">ycArC5yrRupyG00S
</span></span></span><span class="line"><span class="cl"><span class="s1">UbGxOFI7UXSWAyKN
</span></span></span><span class="line"><span class="cl"><span class="s1">dIV0SSUTgAdKwStr
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;</span>
</span></span></code></pre></div></li>
<li>
<p>Write a function name <em>rgbColorGenerator</em> and it generates rgb colors.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">rgbColorGenerator<span class="o">()</span>
</span></span><span class="line"><span class="cl">rgb<span class="o">(</span>125,244,255<span class="o">)</span>
</span></span></code></pre></div></li>
<li>
<p>Write a function <strong><em>arrayOfHexaColors</em></strong> which return any number of hexadecimal colors in an array.</p>
</li>
<li>
<p>Write a function <strong><em>arrayOfRgbColors</em></strong> which return any number of RGB colors in an array.</p>
</li>
<li>
<p>Write a function <strong><em>convertHexaToRgb</em></strong> which converts hexa color to rgb and it returns an rgb color.</p>
</li>
<li>
<p>Write a function <strong><em>convertRgbToHexa</em></strong> which converts rgb to hexa color and it returns an hexa color.</p>
</li>
<li>
<p>Write a function <strong><em>generateColors</em></strong> which can generate any number of hexa or rgb colors.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">generateColors</span><span class="p">(</span><span class="s2">&#34;hexa&#34;</span><span class="p">,</span> <span class="mi">3</span><span class="p">)[(</span><span class="s2">&#34;#a3e12f&#34;</span><span class="p">,</span> <span class="s2">&#34;#03ed55&#34;</span><span class="p">,</span> <span class="s2">&#34;#eb3d2b&#34;</span><span class="p">)];</span>
</span></span><span class="line"><span class="cl"><span class="nx">generateColors</span><span class="p">(</span><span class="s2">&#34;hexa&#34;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="s2">&#34;#b334ef&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">generateColors</span><span class="p">(</span><span class="s2">&#34;rgb&#34;</span><span class="p">,</span> <span class="mi">3</span><span class="p">)[</span>
</span></span><span class="line"><span class="cl">  <span class="p">(</span><span class="s2">&#34;rgb(5, 55, 175&#34;</span><span class="p">,</span> <span class="s2">&#34;rgb(50, 105, 100&#34;</span><span class="p">,</span> <span class="s2">&#34;rgb(15, 26, 80&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">generateColors</span><span class="p">(</span><span class="s2">&#34;rgb&#34;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="s2">&#34;rgb(33,79, 176)&#34;</span><span class="p">);</span>
</span></span></code></pre></div></li>
<li>
<p>Call your function <em>shuffleArray</em>, it takes an array as a parameter and it returns a shuffled array</p>
</li>
<li>
<p>Call your function <em>factorial</em>, it takes a whole number as a parameter and it return a factorial of the number</p>
</li>
<li>
<p>Call your function <em>isEmpty</em>, it takes a parameter and it checks if it is empty or not</p>
</li>
<li>
<p>Call your function <em>sum</em>, it takes any number of arguments and it returns the sum.</p>
</li>
<li>
<p>Write a function called <em>sumOfArrayItems</em>, it takes an array parameter and return the sum of all the items. Check if all the array items are number types. If not give return reasonable feedback.</p>
</li>
<li>
<p>Write a function called <em>average</em>, it takes an array parameter and returns the average of the items. Check if all the array items are number types. If not give return reasonable feedback.</p>
</li>
<li>
<p>Write a function called <em>modifyArray</em> takes array as parameter and modifies the fifth item of the array and return the array. If the array length is less than five it return &lsquo;item not found&rsquo;.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">modifyArray</span><span class="p">([</span><span class="s1">&#39;Avocado&#39;</span><span class="p">,</span> <span class="s1">&#39;Tomato&#39;</span><span class="p">,</span> <span class="s1">&#39;Potato&#39;</span><span class="p">,</span><span class="s1">&#39;Mango&#39;</span><span class="p">,</span> <span class="s1">&#39;Lemon&#39;</span><span class="p">,</span><span class="s1">&#39;Carrot&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="c1">// →[&#39;Avocado&#39;, &#39;Tomato&#39;, &#39;Potato&#39;,&#39;Mango&#39;, &#39;LEMON&#39;, &#39;Carrot&#39;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">modifyArray</span><span class="p">([</span><span class="s1">&#39;Google&#39;</span><span class="p">,</span> <span class="s1">&#39;Facebook&#39;</span><span class="p">,</span><span class="s1">&#39;Apple&#39;</span><span class="p">,</span> <span class="s1">&#39;Amazon&#39;</span><span class="p">,</span><span class="s1">&#39;Microsoft&#39;</span><span class="p">,</span>  <span class="s1">&#39;IBM&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="c1">// →[&#39;Google&#39;, &#39;Facebook&#39;,&#39;Apple&#39;, &#39;Amazon&#39;,&#39;MICROSOFT&#39;,  &#39;IBM&#39;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">modifyArray</span><span class="p">([</span><span class="s1">&#39;Google&#39;</span><span class="p">,</span> <span class="s1">&#39;Facebook&#39;</span><span class="p">,</span><span class="s1">&#39;Apple&#39;</span><span class="p">,</span> <span class="s1">&#39;Amazon&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="c1">// →&#39;Not Found&#39;
</span></span></span></code></pre></div></li>
<li>
<p>Write a function called <em>isPrime</em>, which checks if a number is prime number.</p>
</li>
<li>
<p>Write a functions which checks if all items are unique in the array.</p>
</li>
<li>
<p>Write a function which checks if all the items of the array are the same data type.</p>
</li>
<li>
<p>JavaScript variable name does not support special characters or symbols except $ or _. Write a function <strong>*isValidVariable</strong> which check if a variable is valid or invalid variable.</p>
</li>
<li>
<p>Write a function which returns array of seven random numbers in a range of 0-9. All the numbers must be unique.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">sevenRandomNumbers</span><span class="p">()[(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">)];</span>
</span></span></code></pre></div></li>
</ol>
<h2 id="object">Object</h2>
<p>Everything can be an object and objects do have properties and properties have values.
Creating an object literal. To create an object literal, we use two curly brackets.
An empty object</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{};</span>
</span></span></code></pre></div><p>Now, the person object has firstName, lastName, age, location, skills and getFullName properties. The getFullName is function inside the person object and we call it method. The <em>this</em> key word refers to the object itself.Example of object:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">firstName</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">lastName</span><span class="o">:</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">age</span><span class="o">:</span> <span class="mi">100</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">location</span><span class="o">:</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;React&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Node&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;MongoDB&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Python&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;D3.js&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getFullName</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="sb">`</span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="si">}${</span><span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">rectangle</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">length</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">width</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getArea</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">length</span> <span class="o">*</span> <span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getPerimeter</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>Getting values from an object:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">firstName</span><span class="o">:</span><span class="s1">&#39;Asabeneh&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">lastName</span><span class="o">:</span><span class="s1">&#39;Yetayeh&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">location</span><span class="o">:</span><span class="s1">&#39;Helsinki&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span><span class="p">[</span><span class="s1">&#39;HTML&#39;</span><span class="p">,</span> <span class="s1">&#39;CSS&#39;</span><span class="p">,</span> <span class="s1">&#39;JavaScript&#39;</span><span class="p">,</span> <span class="s1">&#39;React&#39;</span><span class="p">,</span><span class="s1">&#39;Node&#39;</span><span class="p">,</span><span class="s1">&#39;MongoDB&#39;</span><span class="p">,</span> <span class="s1">&#39;Python&#39;</span><span class="p">,</span> <span class="s1">&#39;D3.js&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">getFullName</span><span class="o">:</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="sb">`</span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="si">}${</span><span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="si">}</span><span class="sb">`</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">firstName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">lastName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">getFullName</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// value can be accessed
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">[</span><span class="s1">&#39;age&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">[</span><span class="s1">&#39;location&#39;</span><span class="p">]);</span>
</span></span></code></pre></div><p>Setting a new keys in an object</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">firstName</span><span class="o">:</span><span class="s1">&#39;Asabeneh&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">lastName</span><span class="o">:</span><span class="s1">&#39;Yetayeh&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">location</span><span class="o">:</span><span class="s1">&#39;Helsinki&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span><span class="p">[</span><span class="s1">&#39;HTML&#39;</span><span class="p">,</span> <span class="s1">&#39;CSS&#39;</span><span class="p">,</span> <span class="s1">&#39;JavaScript&#39;</span><span class="p">,</span> <span class="s1">&#39;React&#39;</span><span class="p">,</span><span class="s1">&#39;Node&#39;</span><span class="p">,</span><span class="s1">&#39;MongoDB&#39;</span><span class="p">,</span> <span class="s1">&#39;Python&#39;</span><span class="p">,</span> <span class="s1">&#39;D3.js&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">getFullName</span><span class="o">:</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="sb">`</span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="si">}${</span><span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="si">}</span><span class="sb">`</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">person</span><span class="p">.</span><span class="nx">nationality</span> <span class="o">=</span> <span class="s1">&#39;Ethiopian&#39;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">person</span><span class="p">.</span><span class="nx">live</span> <span class="o">=</span> <span class="s1">&#39;Finland&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">)</span>
</span></span></code></pre></div><h3 id="object-methods">Object Methods</h3>
<p><em>Object.assign</em>: To copy an object without modifying the original object</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">age</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">country</span><span class="o">:</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JS&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nx">address</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">street</span><span class="o">:</span> <span class="s2">&#34;Heitamienkatu 16&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">pobox</span><span class="o">:</span> <span class="mi">2002</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">city</span><span class="o">:</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getPersonInfo</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="sb">`I am </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="si">}</span><span class="sb"> and I live in </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">country</span><span class="si">}</span><span class="sb">. I am </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="si">}</span><span class="sb">.`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Object methods: Object.assign, Object.keys, Object.values, Object.entries
</span></span></span><span class="line"><span class="cl"><span class="c1">//hasOwnProperty
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">copyPerson</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">({},</span> <span class="nx">person</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">copyPerson</span><span class="p">);</span>
</span></span></code></pre></div><p><em>Object.keys</em>: To get keys of an objet as an array</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">keys</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">copyPerson</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">keys</span><span class="p">);</span> <span class="c1">//[&#39;name&#39;, &#39;age&#39;, &#39;country&#39;, &#39;skills&#39;, &#39;address&#39;, &#39;getPersonInfo&#39;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">address</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">copyPerson</span><span class="p">.</span><span class="nx">address</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">address</span><span class="p">);</span> <span class="c1">//[&#39;street&#39;, &#39;pobox&#39;, &#39;city&#39;]
</span></span></span></code></pre></div><p><em>Object.values</em>:To get values of an object as an array</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">values</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">values</span><span class="p">(</span><span class="nx">copyPerson</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">values</span><span class="p">);</span>
</span></span></code></pre></div><p><em>Object.entries</em>:To get the keys and values in an array</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">entries</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">entries</span><span class="p">(</span><span class="nx">copyPerson</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">entries</span><span class="p">);</span>
</span></span></code></pre></div><p><em>hasOwnProperty</em>: To check if a specific key or property exist in an object</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">copyPerson</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;name&#34;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">copyPerson</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;score&#34;</span><span class="p">));</span>
</span></span></code></pre></div><h3 id="date-object">Date Object</h3>
<p>In JavaScript current time and date is created using JavaScript Date Object.
Some of the methods to extract date object values:<em>getFullYear(), getMonths(), getDate(), getDay(), getHours(), getMinutes</em></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">now</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">year</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();</span> <span class="c1">// return year
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">month</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// return month(0 - 11)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">date</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span> <span class="c1">// return date (1 - 31)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">hours</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getHours</span><span class="p">();</span> <span class="c1">// return number (0 - 23)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">minutes</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">();</span> <span class="c1">// return number (0 -59)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="si">${</span><span class="nx">date</span><span class="si">}</span><span class="sb">/</span><span class="si">${</span><span class="nx">month</span><span class="si">}</span><span class="sb">/</span><span class="si">${</span><span class="nx">year</span><span class="si">}</span><span class="sb"> </span><span class="si">${</span><span class="nx">hours</span><span class="si">}</span><span class="sb">:</span><span class="si">${</span><span class="nx">minutes</span><span class="si">}</span><span class="sb">`</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="exercises-date-object">Exercises: Date Object</h4>
<ol>
<li>
<p>Use the new Date() object to get <em>month, date, year, hour</em> and <em>minute</em>.</p>
</li>
<li>
<p>Write a function name <em>displayDateTime</em> which display time in this format: 10/03/2019 04:08</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">displayDateTime<span class="o">()</span>
</span></span><span class="line"><span class="cl">10/03/2019 04:08
</span></span></code></pre></div></li>
</ol>
<h3 id="exercisesobjects">Exercises:Objects</h3>
<ol>
<li>
<p>Create an empty object called dog</p>
</li>
<li>
<p>Print the the dog object on the console</p>
</li>
<li>
<p>Add name, legs, color, age and bark properties for the dog object. The bark property is a method which return <em>woof woof</em></p>
</li>
<li>
<p>Get name, legs, color, age and bark value from the dog object</p>
</li>
<li>
<p>Set new properties the dog object: breed, getDogInfo</p>
</li>
<li>
<p>Create an object literal called <em>personAccount</em>. It has <em>firstName, lastName, incomes, expenses</em> properties and it has <em>totalIncome, totalExpense, accountInfo,addIncome, addExpense</em> and <em>accountBalance</em> methods. Incomes is a set of incomes and its description and the same for expenses.</p>
</li>
<li>
<p>Count logged in users,count users having greater than equal to 50 points from the following object.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Alex</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;alex@alex.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">30</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Asab</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;asab@asab.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="s2">&#34;Redux&#34;</span><span class="p">,</span> <span class="s2">&#34;Node.js&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">25</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">50</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Brook</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;daniel@daniel.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="s2">&#34;Redux&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">30</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">50</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Daniel</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;daniel@alex.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;Python&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">40</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">John</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;john@john.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="s2">&#34;Redux&#34;</span><span class="p">,</span> <span class="s2">&#34;Node.js&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">point</span><span class="o">:</span> <span class="mi">50</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Thomas</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;thomas@thomas.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">40</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div></li>
<li>
<p>Set your name in the users object without modifying the original users object</p>
</li>
<li>
<p>Get all keys or properties of users object</p>
</li>
<li>
<p>Get all the values of users object</p>
</li>
<li>
<p>** Develop a small JavaScript library.</p>
</li>
</ol>
<h2 id="json">JSON</h2>
<p>JSON stands for JavaScript Object Notation. The JSON syntax is derived from JavaScript object notation syntax, but the JSON format is text or string only. JSON is a light weight data format for storing and transporting. JSON is mostly used when data is sent from a server to a client. JSON is an easier-to-use alternative to XML.</p>
<p><strong>Example:</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;users&#34;</span><span class="o">:</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;firstName&#34;</span><span class="o">:</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;lastName&#34;</span><span class="o">:</span><span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;age&#34;</span><span class="o">:</span><span class="mi">250</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;email&#34;</span><span class="o">:</span><span class="s2">&#34;asab@asb.com&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;firstName&#34;</span><span class="o">:</span><span class="s2">&#34;Alex&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;lastName&#34;</span><span class="o">:</span><span class="s2">&#34;James&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;age&#34;</span><span class="o">:</span><span class="mi">25</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;email&#34;</span><span class="o">:</span><span class="s2">&#34;alex@alex.com&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;firstName&#34;</span><span class="o">:</span><span class="s2">&#34;Lidiya&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;lastName&#34;</span><span class="o">:</span><span class="s2">&#34;Tekle&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;age&#34;</span><span class="o">:</span><span class="mi">28</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;email&#34;</span><span class="o">:</span><span class="s2">&#34;lidiya@lidiya.com&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>The above JSON example is not much different for a normal object. Then, what is the difference ? The difference is the key of a JSON object should be with double quotes or it should be a string. JavaScript Object and JSON are very similar that we can change JSON to Object and Object to JSON.</p>
<p>Let us see the above example in more detail, it starts with a curly bracket. Inside the curly bracket, there is &ldquo;users&rdquo; key which has a value array. Inside the array we have different objects and each objects has keys, each keys has to have double quotes. For instance, we use &ldquo;firstNaMe&rdquo; instead of just firstName, however in object we use keys without double quotes. This is the major difference between an object and a JSON. Let&rsquo;s see more examples about JSON.</p>
<p><strong>Example:</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Alex&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span><span class="o">:</span> <span class="s2">&#34;alex@alex.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span><span class="o">:</span> <span class="mi">30</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Asab&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span><span class="o">:</span> <span class="s2">&#34;asab@asab.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Redux&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;MongoDB&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Express&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Node&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="mi">25</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span><span class="o">:</span> <span class="mi">50</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Brook&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span><span class="o">:</span> <span class="s2">&#34;daniel@daniel.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Redux&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="mi">30</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span><span class="o">:</span> <span class="mi">50</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Daniel&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span><span class="o">:</span> <span class="s2">&#34;daniel@alex.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Python&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span><span class="o">:</span> <span class="mi">40</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;John&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span><span class="o">:</span> <span class="s2">&#34;john@john.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Redux&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Node.js&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span><span class="o">:</span> <span class="mi">50</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Thomas&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span><span class="o">:</span> <span class="s2">&#34;thomas@thomas.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span><span class="o">:</span> <span class="mi">40</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Paul&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span><span class="o">:</span> <span class="s2">&#34;paul@paul.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;MongoDB&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Express&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Node&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span><span class="o">:</span> <span class="mi">40</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="converting-json-to-javascript-object">Converting JSON to JavaScript Object</h3>
<p>Mostly we fetch JSON data from HTTP response or from a file, but we can store the JSON as a string and we can change to Object for sake of demonstration. In JavaScript the keyword <em>JSON</em> has <em>parse()</em> and <em>stringify()</em> methods. When we want to change the JSON to an object we parse the JSON using <em>JSON.parse()</em>. When we want to change the object to JSON we use <em>JSON.stringify()</em>.</p>
<h4 id="jsonparse">JSON.parse()</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">json</span><span class="p">[,</span> <span class="nx">reviver</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="c1">// json or text , the data
</span></span></span><span class="line"><span class="cl"><span class="c1">// reviver is an optional callback function
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">usersText</span> <span class="o">=</span> <span class="sb">`{
</span></span></span><span class="line"><span class="cl"><span class="sb">&#34;users&#34;:[
</span></span></span><span class="line"><span class="cl"><span class="sb">  {
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;firstName&#34;:&#34;Asabeneh&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;lastName&#34;:&#34;Yetayeh&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;age&#34;:250,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;email&#34;:&#34;asab@asb.com&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">  },
</span></span></span><span class="line"><span class="cl"><span class="sb">  {
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;firstName&#34;:&#34;Alex&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;lastName&#34;:&#34;James&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;age&#34;:25,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;email&#34;:&#34;alex@alex.com&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">  },
</span></span></span><span class="line"><span class="cl"><span class="sb">  {
</span></span></span><span class="line"><span class="cl"><span class="sb">  &#34;firstName&#34;:&#34;Lidiya&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">  &#34;lastName&#34;:&#34;Tekle&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">  &#34;age&#34;:28,
</span></span></span><span class="line"><span class="cl"><span class="sb">  &#34;email&#34;:&#34;lidiya@lidiya.com&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">  }
</span></span></span><span class="line"><span class="cl"><span class="sb">]
</span></span></span><span class="line"><span class="cl"><span class="sb">}`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">usersObj</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">usersText</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">usersObj</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="using-a-reviver-function-with-jsonparse">Using a reviver function with JSON.parse()</h3>
<p>To use the reviver function as a formatter, we put the keys we want to format first name and last name value. Let us say, we are interested to format the firstName and lastName of the JSON data .</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">usersText</span> <span class="o">=</span> <span class="sb">`{
</span></span></span><span class="line"><span class="cl"><span class="sb">&#34;users&#34;:[
</span></span></span><span class="line"><span class="cl"><span class="sb">  {
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;firstName&#34;:&#34;Asabeneh&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;lastName&#34;:&#34;Yetayeh&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;age&#34;:250,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;email&#34;:&#34;asab@asb.com&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">  },
</span></span></span><span class="line"><span class="cl"><span class="sb">  {
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;firstName&#34;:&#34;Alex&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;lastName&#34;:&#34;James&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;age&#34;:25,
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;email&#34;:&#34;alex@alex.com&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">  },
</span></span></span><span class="line"><span class="cl"><span class="sb">  {
</span></span></span><span class="line"><span class="cl"><span class="sb">  &#34;firstName&#34;:&#34;Lidiya&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">  &#34;lastName&#34;:&#34;Tekle&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">  &#34;age&#34;:28,
</span></span></span><span class="line"><span class="cl"><span class="sb">  &#34;email&#34;:&#34;lidiya@lidiya.com&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">  }
</span></span></span><span class="line"><span class="cl"><span class="sb">]
</span></span></span><span class="line"><span class="cl"><span class="sb">}`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">usersObj</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">usersText</span><span class="p">,</span> <span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">newValue</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">    <span class="k">typeof</span> <span class="nx">value</span> <span class="o">==</span> <span class="s2">&#34;string&#34;</span> <span class="o">&amp;&amp;</span> <span class="nx">key</span> <span class="o">!=</span> <span class="s2">&#34;email&#34;</span> <span class="o">?</span> <span class="nx">value</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">:</span> <span class="nx">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">newValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">usersObj</span><span class="p">);</span>
</span></span></code></pre></div><p>The <em>JSON.parse()</em> is very handy to use. You do not have to pass optional parameter, you can just use it with the required parameter and you will achieve quite a lot.</p>
<h3 id="converting-object-to-json">Converting Object to JSON</h3>
<p>When we want to change the object to JSON we use <em>JSON.stringify()</em>. The stringify method takes one required parameter and two optional parameters. The replacer is used as filter and the space is an indentations. If we do not want to filter out any of the keys from the object we can just pass undefined.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">replacer</span><span class="p">,</span> <span class="nx">space</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="c1">// json or text , the data
</span></span></span><span class="line"><span class="cl"><span class="c1">// reviver is an optional callback function
</span></span></span></code></pre></div><p>Let us convert the following object to a string. First let use keep all the keys and also let us have 4 space indentation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Alex</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;alex@alex.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">30</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Asab</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;asab@asab.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;Redux&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;MongoDB&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;Express&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;React&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;Node&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">25</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">50</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Brook</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;daniel@daniel.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="s2">&#34;Redux&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">30</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">50</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Daniel</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;daniel@alex.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;Python&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">40</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">John</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;john@john.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="s2">&#34;Redux&#34;</span><span class="p">,</span> <span class="s2">&#34;Node.js&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">50</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Thomas</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;thomas@thomas.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">40</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Paul</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;paul@paul.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;MongoDB&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;Express&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;React&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;Node&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">points</span><span class="o">:</span> <span class="mi">40</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">txt</span><span class="p">);</span> <span class="c1">// text means JSON- because json is a string form of an object.
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Alex&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span>: <span class="s2">&#34;alex@alex.com&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span>: 20,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span>: false,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span>: <span class="m">30</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Asab&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span>: <span class="s2">&#34;asab@asab.com&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Redux&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;MongoDB&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Express&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Node&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span>: 25,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span>: false,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span>: <span class="m">50</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Brook&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span>: <span class="s2">&#34;daniel@daniel.com&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Redux&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span>: 30,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span>: true,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span>: <span class="m">50</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Daniel&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span>: <span class="s2">&#34;daniel@alex.com&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Python&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span>: 20,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span>: false,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span>: <span class="m">40</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;John&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span>: <span class="s2">&#34;john@john.com&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Redux&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Node.js&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span>: 20,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span>: true,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span>: <span class="m">50</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Thomas&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span>: <span class="s2">&#34;thomas@thomas.com&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span>: 20,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span>: false,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span>: <span class="m">40</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Paul&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span>: <span class="s2">&#34;paul@paul.com&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;skills&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTML&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CSS&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;JavaScript&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;MongoDB&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Express&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;React&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Node&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span>: 20,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;isLoggedIn&#34;</span>: false,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;points&#34;</span>: <span class="m">40</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="using-a-filter-array-with-jsonstringify">Using a Filter Array with JSON.stringify</h3>
<p>Now, lets use the replacer as a filter. The user object has long list of keys but we are interested only in few of them. We put the keys we want to keep in array as show in the example and use it the place of the replacer.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">user</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">firstName</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">lastName</span><span class="o">:</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">country</span><span class="o">:</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">city</span><span class="o">:</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">email</span><span class="o">:</span> <span class="s2">&#34;alex@alex.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="s2">&#34;Pyhton&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nx">age</span><span class="o">:</span> <span class="mi">250</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">isLoggedIn</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">points</span><span class="o">:</span> <span class="mi">30</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="nx">user</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">[</span><span class="s2">&#34;firstName&#34;</span><span class="p">,</span> <span class="s2">&#34;lastName&#34;</span><span class="p">,</span> <span class="s2">&#34;country&#34;</span><span class="p">,</span> <span class="s2">&#34;city&#34;</span><span class="p">,</span> <span class="s2">&#34;age&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="mi">4</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">txt</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;firstName&#34;</span>: <span class="s2">&#34;Asabeneh&#34;</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;lastName&#34;</span>: <span class="s2">&#34;Yetayeh&#34;</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;country&#34;</span>: <span class="s2">&#34;Finland&#34;</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;city&#34;</span>: <span class="s2">&#34;Helsinki&#34;</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;age&#34;</span>: <span class="m">250</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="exercises">Exercises</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">skills</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JS&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="s2">&#34;Node&#34;</span><span class="p">,</span> <span class="s2">&#34;Python&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">age</span> <span class="o">=</span> <span class="mi">250</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">isMarried</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">student</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">firstName</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">lastName</span><span class="o">:</span> <span class="s2">&#34;Yetayehe&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">age</span><span class="o">:</span> <span class="mi">250</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">isMarried</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JS&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="s2">&#34;Node&#34;</span><span class="p">,</span> <span class="s2">&#34;Python&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="sb">`{
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;Alex&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;email&#34;: &#34;alex@alex.com&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;skills&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;HTML&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;CSS&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;JavaScript&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">        ],
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;age&#34;: 20,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;isLoggedIn&#34;: false,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;points&#34;: 30
</span></span></span><span class="line"><span class="cl"><span class="sb">    },
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;Asab&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;email&#34;: &#34;asab@asab.com&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;skills&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;HTML&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;CSS&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;JavaScript&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;Redux&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;MongoDB&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;Express&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;React&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;Node&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">        ],
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;age&#34;: 25,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;isLoggedIn&#34;: false,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;points&#34;: 50
</span></span></span><span class="line"><span class="cl"><span class="sb">    },
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;Brook&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;email&#34;: &#34;daniel@daniel.com&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;skills&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;HTML&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;CSS&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;JavaScript&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;React&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;Redux&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">        ],
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;age&#34;: 30,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;isLoggedIn&#34;: true,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;points&#34;: 50
</span></span></span><span class="line"><span class="cl"><span class="sb">    },
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;Daniel&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;email&#34;: &#34;daniel@alex.com&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;skills&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;HTML&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;CSS&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;JavaScript&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;Python&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">        ],
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;age&#34;: 20,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;isLoggedIn&#34;: false,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;points&#34;: 40
</span></span></span><span class="line"><span class="cl"><span class="sb">    },
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;John&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;email&#34;: &#34;john@john.com&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;skills&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;HTML&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;CSS&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;JavaScript&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;React&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;Redux&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;Node.js&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">        ],
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;age&#34;: 20,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;isLoggedIn&#34;: true,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;points&#34;: 50
</span></span></span><span class="line"><span class="cl"><span class="sb">    },
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;Thomas&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;email&#34;: &#34;thomas@thomas.com&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;skills&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;HTML&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;CSS&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;JavaScript&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;React&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">        ],
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;age&#34;: 20,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;isLoggedIn&#34;: false,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;points&#34;: 40
</span></span></span><span class="line"><span class="cl"><span class="sb">    },
</span></span></span><span class="line"><span class="cl"><span class="sb">    &#34;Paul&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;email&#34;: &#34;paul@paul.com&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;skills&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;HTML&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;CSS&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;JavaScript&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;MongoDB&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;Express&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;React&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sb">            &#34;Node&#34;
</span></span></span><span class="line"><span class="cl"><span class="sb">        ],
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;age&#34;: 20,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;isLoggedIn&#34;: false,
</span></span></span><span class="line"><span class="cl"><span class="sb">        &#34;points&#34;: 40
</span></span></span><span class="line"><span class="cl"><span class="sb">    }
</span></span></span><span class="line"><span class="cl"><span class="sb">}
</span></span></span><span class="line"><span class="cl"><span class="sb">`</span><span class="p">;</span>
</span></span></code></pre></div><h3 id="exercises-level-1">Exercises Level 1</h3>
<ol>
<li>Change skills array to JSON using JSON.stringify()</li>
<li>Stringify the age variable</li>
<li>Stringify the isMarried variable</li>
<li>Stringify the student object</li>
</ol>
<h3 id="exercises-level-2">Exercises Level 2</h3>
<ol>
<li>Stringify the students object with only firstName, lastName and skills properties</li>
</ol>
<h2 id="higher-order-function">Higher Order Function</h2>
<p>Higher order functions are functions which take other function as a parameter or return a function as a value. The function passed as a parameter is called callback.</p>
<h3 id="callback">Callback</h3>
<p>A callback is a function which can be passed as parameter to other function. See the example below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// a callback function, the function could be any name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">callback</span> <span class="o">=</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">n</span> <span class="o">**</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="err">​</span>
</span></span><span class="line"><span class="cl"><span class="c1">// function take other function as a callback
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">cube</span><span class="p">(</span><span class="nx">callback</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="o">*</span> <span class="nx">n</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="err">​</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">cube</span><span class="p">(</span><span class="nx">callback</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>
</span></span></code></pre></div><h3 id="returning-function">Returning function</h3>
<p>Higher order functions return function as a value
​</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Higher order function returning an other function
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">higherOrder</span> <span class="o">=</span> <span class="nx">n</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">doSomething</span> <span class="o">=</span> <span class="nx">m</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">doWhatEver</span> <span class="o">=</span> <span class="nx">t</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">n</span> <span class="o">+</span> <span class="mi">3</span> <span class="o">*</span> <span class="nx">m</span> <span class="o">+</span> <span class="nx">t</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">doWhatEver</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="err">​</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">doSomething</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">higherOrder</span><span class="p">(</span><span class="mi">2</span><span class="p">)(</span><span class="mi">3</span><span class="p">)(</span><span class="mi">10</span><span class="p">))</span>
</span></span></code></pre></div><p>Let us see were we use call back functions.For instance the <em>forEach</em> method uses call back.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">​</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">sumArray</span> <span class="o">=</span> <span class="nx">arr</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">sum</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">callBack</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">sum</span> <span class="o">+=</span> <span class="nx">element</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">numbers</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">sum</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">sumArray</span><span class="p">(</span><span class="nx">numbers</span><span class="p">))</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="m">15</span>
</span></span></code></pre></div><p>The above example can be simplified as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">​</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">sumArray</span> <span class="o">=</span> <span class="nx">arr</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">sum</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">  <span class="nx">numbers</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">sum</span> <span class="o">+=</span> <span class="nx">element</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">sum</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">sumArray</span><span class="p">(</span><span class="nx">numbers</span><span class="p">))</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="m">15</span>
</span></span></code></pre></div><h3 id="setting-time">setting time</h3>
<p>In JavaScript we can execute some activity on certain interval of time or we can schedule(wait) for sometime to execute some activities.</p>
<ul>
<li>setInterval</li>
<li>setTimeout</li>
</ul>
<h4 id="setinterval">setInterval</h4>
<p>In JavaScript, we use setInterval higher order function to do some activity continuously with in some interval of time. The setInterval global method take a callback function and a duration as a parameter. The duration is in milliseconds and the callback will be always called in that interval of time.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// syntax
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">callBack</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// code goes here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">setInterval</span><span class="p">(</span><span class="nx">callback</span><span class="p">,</span> <span class="nx">duration</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">sayHello</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Hello&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">setInterval</span><span class="p">(</span><span class="nx">sayHello</span><span class="p">,</span> <span class="mi">2000</span><span class="p">);</span> <span class="c1">// it prints hello in every 2 seconds
</span></span></span></code></pre></div><h4 id="settimeout">setTimeout</h4>
<p>In JavaScript, we use setTimeout higher order function to execute some action at some time in the future. The setTimeout global method take a callback function and a duration as a parameter. The duration is in milliseconds and the callback wait for that amount of time.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// syntax
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">callback</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// code goes here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">callback</span><span class="p">,</span> <span class="nx">duration</span><span class="p">);</span> <span class="c1">// duration in milliseconds
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">sayHello</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Hello&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">sayHello</span><span class="p">,</span> <span class="mi">2000</span><span class="p">);</span> <span class="c1">// it prints hello after it waits for 2 seconds.
</span></span></span></code></pre></div><h3 id="exercises-level-3">Exercises Level 3</h3>
<ol>
<li>Parse the <em>txt</em> JSON to object.</li>
<li>Find the the user who has many skills from the variable stored in <em>txt</em>.</li>
</ol>
<h2 id="functional-programming">Functional Programming</h2>
<ul>
<li><em>forEach</em>: Iterate an array elements and use for array. It takes a callback function with elements and index parameter.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">arr</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="nx">element</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="c1">// The above code can be written using arrow function
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">arr</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">element</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="nx">element</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="c1">// The above code can be written using arrow function and explicit return
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">arr</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">element</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="nx">element</span><span class="p">));</span>
</span></span></code></pre></div><ul>
<li><em>map</em>: Iterate an array elements and modify the array elements. It takes a callback function with elements and index parameter and return the modified array.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">modifiedArray</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">element</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="cm">/*Arrow function and explicit return
</span></span></span><span class="line"><span class="cl"><span class="cm">const modifiedArray = arr.map((element,index) =&gt; element);
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="c1">//Example
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbersSquare</span> <span class="o">=</span> <span class="nx">numbers</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">num</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">num</span> <span class="o">*</span> <span class="nx">num</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbersSquare</span><span class="p">);</span> <span class="c1">// [1,4,9,16,25]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Mathias&#34;</span><span class="p">,</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="s2">&#34;Brook&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">namesToUpperCase</span> <span class="o">=</span> <span class="nx">names</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">name</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">name</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">namesToUpperCase</span><span class="p">);</span> <span class="c1">//[&#39;ASABENEH&#39;, &#39;MATHIAS&#39;, &#39;ELIAS&#39;, &#39;BROOK&#39;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">countries</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Albania&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Bolivia&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Canada&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Denmark&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Ethiopia&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Germany&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Hungary&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Ireland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Japan&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Kenya&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">countriesToUpperCase</span> <span class="o">=</span> <span class="nx">countries</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">country</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">country</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countriesToUpperCase</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="c1">// [&#39;ALBANIA&#39;, &#39;BOLIVIA&#39;, &#39;CANADA&#39;, &#39;DENMARK&#39;, &#39;ETHIOPIA&#39;, &#39;FINLAND&#39;, &#39;GERMANY&#39;, &#39;HUNGARY&#39;, &#39;IRELAND&#39;, &#39;JAPAN&#39;, &#39;KENYA&#39;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">// Arrow function
</span></span></span><span class="line"><span class="cl"><span class="cm">const countriesToUpperCase = countries.map((country) =&gt; {
</span></span></span><span class="line"><span class="cl"><span class="cm">  return country.toUpperCase();
</span></span></span><span class="line"><span class="cl"><span class="cm">})
</span></span></span><span class="line"><span class="cl"><span class="cm">//Explicit return arrow function
</span></span></span><span class="line"><span class="cl"><span class="cm">const countriesToUpperCase = countries.map(country =&gt; country.toUpperCase());
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span></code></pre></div><ul>
<li><em>Filter</em>: Filter out items which full fill filtering conditions</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Filter countries containing land
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">countriesContainingLand</span> <span class="o">=</span> <span class="nx">countries</span><span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">country</span><span class="p">)</span> <span class="p">=&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">country</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;land&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countriesContainingLand</span><span class="p">);</span> <span class="c1">//[&#39;Finland&#39;, &#39;Ireland&#39;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">countriesEndByia</span> <span class="o">=</span> <span class="nx">countries</span><span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">country</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">country</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;ia&#34;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countriesEndByia</span><span class="p">);</span> <span class="c1">//[&#39;Albania&#39;, &#39;Bolivia&#39;,&#39;Ethiopia&#39;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">countriesHaveFiveLetters</span> <span class="o">=</span> <span class="nx">countries</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="p">(</span><span class="nx">country</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">country</span><span class="p">.</span><span class="nx">length</span> <span class="o">===</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countriesHaveFiveLetters</span><span class="p">);</span> <span class="c1">//  [&#39;Japan&#39;, &#39;Kenya&#39;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">scores</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="nx">score</span><span class="o">:</span> <span class="mi">95</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Mathias&#34;</span><span class="p">,</span> <span class="nx">score</span><span class="o">:</span> <span class="mi">80</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="nx">score</span><span class="o">:</span> <span class="mi">50</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Martha&#34;</span><span class="p">,</span> <span class="nx">score</span><span class="o">:</span> <span class="mi">85</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;John&#34;</span><span class="p">,</span> <span class="nx">score</span><span class="o">:</span> <span class="mi">100</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">scoresGreaterEight</span> <span class="o">=</span> <span class="nx">scores</span><span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">score</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">score</span><span class="p">.</span><span class="nx">score</span> <span class="o">&gt;</span> <span class="mi">80</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">scoresGreaterEight</span><span class="p">);</span> <span class="c1">//[{name: &#39;Asabeneh&#39;, score: 95}, {name: &#39;Martha&#39;, score: 85},{name: &#39;John&#39;, score: 100}]
</span></span></span></code></pre></div><ul>
<li><em>reduce</em>: Reduce takes a callback function. The call back function takes accumulator and current value as a parameter and returns a single value:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">sum</span> <span class="o">=</span> <span class="nx">numbers</span><span class="p">.</span><span class="nx">reduce</span><span class="p">((</span><span class="nx">accum</span><span class="p">,</span> <span class="nx">curr</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">accum</span> <span class="o">+</span> <span class="nx">curr</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">sum</span><span class="p">);</span> <span class="c1">// 15
</span></span></span></code></pre></div><ul>
<li><em>every</em>: Check if all the elements are similar in one aspect. It returns boolean</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Mathias&#34;</span><span class="p">,</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="s2">&#34;Brook&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">bools</span> <span class="o">=</span> <span class="p">[</span><span class="kc">true</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="kc">true</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">bools</span><span class="p">.</span><span class="nx">every</span><span class="p">((</span><span class="nx">b</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">b</span> <span class="o">===</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span> <span class="c1">//true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">checkType</span> <span class="o">=</span> <span class="nx">names</span><span class="p">.</span><span class="nx">every</span><span class="p">((</span><span class="nx">name</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="k">typeof</span> <span class="nx">name</span> <span class="o">===</span> <span class="s2">&#34;string&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">checkDataTypes</span><span class="p">);</span> <span class="c1">// true;
</span></span></span></code></pre></div><ul>
<li><em>some</em>: Check if some of the elements are similar in one aspect. It returns boolean</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Mathias&#34;</span><span class="p">,</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="s2">&#34;Brook&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">bools</span> <span class="o">=</span> <span class="p">[</span><span class="kc">true</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="kc">true</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">bools</span><span class="p">.</span><span class="nx">some</span><span class="p">((</span><span class="nx">b</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">b</span> <span class="o">===</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span> <span class="c1">//true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">checkType</span> <span class="o">=</span> <span class="nx">names</span><span class="p">.</span><span class="nx">some</span><span class="p">((</span><span class="nx">name</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="k">typeof</span> <span class="nx">name</span> <span class="o">===</span> <span class="s2">&#34;number&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">checkDataTypes</span><span class="p">);</span> <span class="c1">// false
</span></span></span></code></pre></div><ul>
<li><em>find</em>: Return the first element which satisfies the condition</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Mathias&#34;</span><span class="p">,</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="s2">&#34;Brook&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">ages</span> <span class="o">=</span> <span class="p">[</span><span class="mi">24</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">35</span><span class="p">,</span> <span class="mi">18</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">names</span><span class="p">.</span><span class="nx">find</span><span class="p">((</span><span class="nx">name</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">name</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">7</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span> <span class="c1">// Asabeneh
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">age</span> <span class="o">=</span> <span class="nx">ages</span><span class="p">.</span><span class="nx">find</span><span class="p">((</span><span class="nx">age</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">age</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">age</span><span class="p">);</span> <span class="c1">// 18
</span></span></span></code></pre></div><ul>
<li><em>findIndex</em>: Return the position of the first element which satisfies the condition</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Mathias&#34;</span><span class="p">,</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="s2">&#34;Brook&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">ages</span> <span class="o">=</span> <span class="p">[</span><span class="mi">24</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">35</span><span class="p">,</span> <span class="mi">18</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">names</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">((</span><span class="nx">name</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">name</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">7</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span> <span class="c1">// 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">age</span> <span class="o">=</span> <span class="nx">ages</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">((</span><span class="nx">age</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">age</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">age</span><span class="p">);</span> <span class="c1">// 5
</span></span></span></code></pre></div><ul>
<li>
<p><em>sort</em>: The sort methods arranges the array elements either ascending or descending order. By default, the <strong><em>sort()</em></strong> method sorts values as strings.This works well for string array items but not for numbers. If number values are sorted as strings and it give us wrong result. Sort method modify the original array. It is recommended to copy the original document before you start sorting.</p>
</li>
<li>
<p><em>Sorting string values</em></p>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">products</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Milk&#34;</span><span class="p">,</span> <span class="s2">&#34;Coffee&#34;</span><span class="p">,</span> <span class="s2">&#34;Sugar&#34;</span><span class="p">,</span> <span class="s2">&#34;Honey&#34;</span><span class="p">,</span> <span class="s2">&#34;Apple&#34;</span><span class="p">,</span> <span class="s2">&#34;Carrot&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">products</span><span class="p">.</span><span class="nx">sort</span><span class="p">());</span> <span class="c1">// [&#39;Apple&#39;, &#39;Carrot&#39;, &#39;Coffee&#39;, &#39;Honey&#39;, &#39;Milk&#39;, &#39;Sugar&#39;]
</span></span></span><span class="line"><span class="cl"><span class="c1">//Now the original products array  is also sorted
</span></span></span></code></pre></div><ul>
<li><em>Sorting Numeric values</em></li>
</ul>
<p>As you can see in the example below, 100 came first after sorted in ascending order. Sort converts items to string , since &lsquo;100&rsquo; and other numbers compared, 1 which the beginning of the string &lsquo;100&rsquo; became the smallest. To avoid this, we use a compare call back function inside the sort method, which return a negative, zero or positive.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mf">9.81</span><span class="p">,</span> <span class="mf">3.14</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">37</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Using sort method to sort number items provide a wrong result. see below
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">.</span><span class="nx">sort</span><span class="p">());</span> <span class="c1">//[100, 3.14, 37, 9.81]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">numbers</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span> <span class="c1">// [3.14, 9.81, 37, 100]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">numbers</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span> <span class="c1">//[100, 37, 9.81, 3.14]
</span></span></span></code></pre></div><ul>
<li><em>Sorting Object Arrays</em></li>
</ul>
<p>When ever we sort objects in an array. We use the object key to compare. Lets see the example below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">objArr</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">key</span> <span class="o">&lt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">key</span> <span class="o">&gt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// or
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">objArr</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="s2">&#34;key&#34;</span><span class="p">]</span> <span class="o">&lt;</span> <span class="nx">b</span><span class="p">[</span><span class="s2">&#34;key&#34;</span><span class="p">])</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="s2">&#34;key&#34;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="nx">b</span><span class="p">[</span><span class="s2">&#34;key&#34;</span><span class="p">])</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="nx">age</span><span class="o">:</span> <span class="mi">150</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Brook&#34;</span><span class="p">,</span> <span class="nx">age</span><span class="o">:</span> <span class="mi">50</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Eyo&#34;</span><span class="p">,</span> <span class="nx">age</span><span class="o">:</span> <span class="mi">100</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="nx">age</span><span class="o">:</span> <span class="mi">22</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">users</span><span class="p">.</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">age</span> <span class="o">&lt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">age</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">age</span> <span class="o">&gt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">age</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">users</span><span class="p">);</span> <span class="c1">// sorted ascending
</span></span></span><span class="line"><span class="cl"><span class="c1">//[{…}, {…}, {…}, {…}]
</span></span></span></code></pre></div><h3 id="exercises-1">Exercises</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">countries</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Estonia&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Sweden&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Denmark&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Norway&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;IceLand&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Mathias&#34;</span><span class="p">,</span> <span class="s2">&#34;Elias&#34;</span><span class="p">,</span> <span class="s2">&#34;Brook&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">];</span>
</span></span></code></pre></div><ol>
<li>Explain the difference between <strong><em>forEach, map, filter, and reduce</em></strong>.</li>
<li>Define a call function before you them in forEach, map, filter or reduce.</li>
<li>Use <strong><em>forEach</em></strong> to console.log each country in the countries array.</li>
<li>Use <strong><em>forEach</em></strong> to console.log each name in the names array.</li>
<li>Use <strong><em>forEach</em></strong> to console.log each number in the numbers array.</li>
<li>Use <strong><em>map</em></strong> to create a new array by changing each country to uppercase in the countries array;</li>
<li>Use <strong><em>map</em></strong> to create a new array by changing each number to square in the numbers array</li>
<li>Use <strong><em>map</em></strong> to change to each name to uppercase in the names array</li>
<li>Use <strong><em>filter</em></strong> to filter out countries containing <strong><em>land</em></strong>.</li>
<li>Use <strong><em>filter</em></strong> to filter out countries having six character.</li>
<li>Use <strong><em>filter</em></strong> to filter out countries containing six letters and more in the country array.</li>
<li>Use <strong><em>filter</em></strong> to filter out country start with &lsquo;E&rsquo;;</li>
<li>Chain two or more array iterators(eg. arr.map(callback).filter(callback).reduce(callback))</li>
<li>Declare a function called getStringLists which takes an array as a parameter and then returns an array only with string items.</li>
<li>Use <strong><em>reduce</em></strong> to sum all the numbers in the numbers array.</li>
<li>Use <strong><em>reduce</em></strong> to concatenate all the countries and to produce this sentence: <strong><em>Estonia, Finland, Sweden, Denmark, Norway, and IceLand are north European countries</em></strong></li>
<li>Explain the difference between <strong><em>some</em></strong> and <strong><em>every</em></strong></li>
<li>Use <strong><em>some</em></strong> to check if some names&rsquo; length greater than seven in names array</li>
<li>Use <strong><em>every</em></strong> to check if all the countries contain the word land</li>
<li>Explain the difference between <strong><em>find</em></strong> and <strong><em>findIndex</em></strong>.</li>
<li>Use <strong><em>find</em></strong> to find the first country containing only six letters in the countries array</li>
<li>Use <strong><em>findIndex</em></strong> to find the position of the first country containing only six letters in the countries array</li>
<li>Use <strong><em>findIndex</em></strong> to find the position of <strong><em>Norway</em></strong> if it doesn&rsquo;t exist in the array you will get -1.</li>
<li>Use <strong><em>findIndex</em></strong> to find the position of <strong><em>Russia</em></strong> if it doesn&rsquo;t exist in the array you will get -1.</li>
<li>Declare a function called <strong><em>categorizeCountries</em></strong> which returns an array of countries which have some common pattern(you find the countries array in this repository as countries.js(eg &rsquo;land&rsquo;, &lsquo;ia&rsquo;, &lsquo;island&rsquo;,&lsquo;stan&rsquo;)).</li>
<li>Create a function which return an array of objects, which is the letter and the number of times the letter use to start with a name of a country.</li>
<li>Declare a <strong><em>getFirstTenCountries</em></strong> function and return an array of ten countries. Use different functional programming to work on the countries.js array</li>
<li>Declare a <strong><em>getLastTenCountries</em></strong> function which which returns the last ten countries in the countries array.</li>
<li>Find out which <em>letter</em> is used many <em>times</em> as initial for a country name from the countries array (eg. Finland, Fiji, France etc)</li>
<li>Use the countries information, in the data folder. Sort countries by name, by capital, by population</li>
<li>Sort out the ten most spoken languages by location.</li>
<li>Sort out the ten most populated countries.</li>
</ol>
<h2 id="destructuring-and-spread">Destructuring and Spread</h2>
<p>Destructuring is a way to unpack arrays, and objects and assigning to a distinct variable.</p>
<h3 id="destructing-arrays">Destructing Arrays</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="p">[</span><span class="nx">numOne</span><span class="p">,</span> <span class="nx">numTwo</span><span class="p">,</span> <span class="nx">numThree</span><span class="p">]</span> <span class="o">=</span> <span class="nx">numbers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numOne</span><span class="p">,</span> <span class="nx">numTwo</span><span class="p">,</span> <span class="nx">numThree</span><span class="p">)</span> <span class="c1">// 1,2,3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Asabeneh&#39;</span><span class="p">,</span> <span class="s1">&#39;Brook&#39;</span><span class="p">,</span> <span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;John&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="p">[</span><span class="nx">firstPerson</span><span class="p">,</span> <span class="nx">secondPerson</span><span class="p">,</span> <span class="nx">ThirdPerson</span><span class="p">,</span> <span class="nx">fourth</span> <span class="nx">Person</span><span class="p">]</span> <span class="o">=</span> <span class="nx">names</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">secondPerson</span><span class="p">,</span><span class="nx">thirdPerson</span><span class="p">,</span> <span class="nx">fourthPerson</span><span class="p">)</span> <span class="c1">//Asabeneh, Brook, David, John
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kr">const</span> <span class="nx">scientificConstants</span> <span class="o">=</span> <span class="p">[</span><span class="mf">2.72</span><span class="p">,</span> <span class="mf">3.14</span><span class="p">,</span> <span class="mf">9.81</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">100</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="p">[</span><span class="nx">e</span><span class="p">,</span> <span class="nx">pi</span><span class="p">,</span> <span class="nx">gravity</span><span class="p">,</span> <span class="nx">bodyTemp</span><span class="p">,</span> <span class="nx">boilingTemp</span><span class="p">]</span> <span class="o">=</span> <span class="nx">scientificConstants</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">pi</span><span class="p">,</span><span class="nx">gravity</span><span class="p">,</span> <span class="nx">bodyTemp</span><span class="p">,</span> <span class="nx">boilingTemp</span><span class="p">)</span> <span class="c1">//2.72, 3.14, 9.81, 37, 100
</span></span></span></code></pre></div><p>If we like to skip on of the values in the array we use additional comma. The comma helps to omit the value at that index</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="p">[</span><span class="nx">numOne</span><span class="p">,</span> <span class="p">,</span> <span class="p">,</span> <span class="nx">numThree</span><span class="p">]</span> <span class="o">=</span> <span class="nx">numbers</span><span class="p">;</span> <span class="c1">//2 is omitted
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numOne</span><span class="p">,,</span> <span class="nx">numThree</span><span class="p">)</span> <span class="c1">// 1,2,3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Asabeneh&#39;</span><span class="p">,</span> <span class="s1">&#39;Brook&#39;</span><span class="p">,</span> <span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;John&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="p">[,</span> <span class="nx">secondPerson</span><span class="p">,</span> <span class="p">,</span> <span class="nx">fourth</span> <span class="nx">Person</span><span class="p">]</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span> <span class="c1">// first and third person is omitted
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">secondPerson</span><span class="p">,</span> <span class="nx">fourthPerson</span><span class="p">)</span> <span class="c1">//Brook, John
</span></span></span></code></pre></div><p>We can use default value in case the value of array for that index is undefined:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="kc">undefined</span><span class="p">,</span> <span class="s2">&#34;Brook&#34;</span><span class="p">,</span> <span class="s2">&#34;David&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="nx">firstPerson</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">secondPerson</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">thirdPerson</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">fourthPerson</span> <span class="o">=</span> <span class="s2">&#34;John&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span> <span class="o">=</span> <span class="nx">names</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstPerson</span><span class="p">,</span> <span class="nx">secondPerson</span><span class="p">,</span> <span class="nx">thirdPerson</span><span class="p">,</span> <span class="nx">fourthPerson</span><span class="p">);</span> <span class="c1">// Asabeneh Brook David John
</span></span></span></code></pre></div><h4 id="destructuring-object">Destructuring Object</h4>
<p>When we destructure the name of the variable we use to destructure should be exactly the same us the key or property of the object. See example below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">rectangle</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">width</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">height</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">area</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="p">{</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">area</span><span class="p">,</span> <span class="nx">perimeter</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">rectangle</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">width</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">area</span><span class="p">,</span> <span class="nx">perimeter</span><span class="p">);</span> <span class="c1">//20 10 200 undefined
</span></span></span></code></pre></div><h4 id="renaming-during-structuring">Renaming during structuring</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">rectangle</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">width</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">height</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">area</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="p">{</span> <span class="nx">width</span><span class="o">:</span> <span class="nx">w</span><span class="p">,</span> <span class="nx">heigh</span><span class="o">:</span> <span class="nx">h</span><span class="p">,</span> <span class="nx">area</span><span class="o">:</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">perimeter</span><span class="o">:</span> <span class="nx">p</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">rectangle</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="nx">h</span><span class="p">,</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">p</span><span class="p">);</span> <span class="c1">//20 10 200 undefined
</span></span></span></code></pre></div><p>If the key is not found in the object the variable will be assigned to undefined. In case, the key is not in the object we can give a default value during declaration. See the example.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">rectangle</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">width</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">height</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">area</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="p">{</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">heigh</span><span class="p">,</span> <span class="nx">area</span><span class="p">,</span> <span class="nx">perimeter</span> <span class="o">=</span> <span class="mi">60</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">rectangle</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">width</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">area</span><span class="p">,</span> <span class="nx">perimeter</span><span class="p">);</span> <span class="c1">//20 10 200 60
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//Lets modify the object:width to 30 and perimeter to 80
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">rectangle</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">width</span><span class="o">:</span> <span class="mi">30</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">height</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">area</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">perimeter</span><span class="o">:</span> <span class="mi">80</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="p">{</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">heigh</span><span class="p">,</span> <span class="nx">area</span><span class="p">,</span> <span class="nx">perimeter</span> <span class="o">=</span> <span class="mi">60</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">rectangle</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">width</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span> <span class="nx">area</span><span class="p">,</span> <span class="nx">perimeter</span><span class="p">);</span> <span class="c1">//20 10 200 80
</span></span></span></code></pre></div><p>Destructuring keys as a function parameters. Lets create a function which take a rectangle object and it return a perimeter of a rectangle.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Without destructuring
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">rect</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">width</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">height</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">calculatePerimeter</span> <span class="o">=</span> <span class="p">(</span><span class="nx">rectangle</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="nx">rectangle</span><span class="p">.</span><span class="nx">width</span> <span class="o">+</span> <span class="nx">rectangle</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">calculatePerimeter</span><span class="p">(</span><span class="nx">rect</span><span class="p">));</span> <span class="c1">// 60
</span></span></span><span class="line"><span class="cl"><span class="c1">//with destructuring
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">calculatePerimeter</span> <span class="o">=</span> <span class="p">({</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">height</span> <span class="p">})</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="nx">width</span> <span class="o">+</span> <span class="nx">height</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">calculatePerimeter</span><span class="p">(</span><span class="nx">rect</span><span class="p">));</span> <span class="c1">// 60
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//Another Example
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">firstName</span><span class="o">:</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">lastName</span><span class="o">:</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">age</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">country</span><span class="o">:</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">job</span><span class="o">:</span> <span class="s2">&#34;Instructor and Developer&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">skills</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;HTML&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;CSS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;JavaScript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;React&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Redux&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Node&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;MongoDB&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Python&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;D3.js&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nx">languages</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;Amharic&#34;</span><span class="p">,</span> <span class="s2">&#34;English&#34;</span><span class="p">,</span> <span class="s2">&#34;Suomi(Finnish)&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Lets create a function which give information about the person object without destructuring
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">getPersonInfo</span> <span class="o">=</span> <span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">skills</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">skills</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">formattedSkills</span> <span class="o">=</span> <span class="nx">skills</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;, &#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">languages</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">languages</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">formattedLanguages</span> <span class="o">=</span> <span class="nx">languages</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;, &#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="sb">`</span><span class="si">${</span><span class="nx">obj</span><span class="p">.</span><span class="nx">firstName</span><span class="si">}</span><span class="sb"> </span><span class="si">${</span><span class="nx">obj</span><span class="p">.</span><span class="nx">lastName</span><span class="si">}</span><span class="sb"> lives in </span><span class="si">${</span><span class="nx">obj</span><span class="p">.</span><span class="nx">country</span><span class="si">}</span><span class="sb">. He is  </span><span class="si">${</span>
</span></span><span class="line"><span class="cl">    <span class="nx">obj</span><span class="p">.</span><span class="nx">age</span>
</span></span><span class="line"><span class="cl">  <span class="si">}</span><span class="sb"> years old. He is an </span><span class="si">${</span><span class="nx">obj</span><span class="p">.</span><span class="nx">job</span><span class="si">}</span><span class="sb">. He teaches </span><span class="si">${</span><span class="nx">formattedSkills</span><span class="si">}</span><span class="sb"> and </span><span class="si">${</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="p">[</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="si">}</span><span class="sb">. He speaks </span><span class="si">${</span><span class="nx">formattedLanguages</span><span class="si">}</span><span class="sb"> and a little bit of </span><span class="si">${</span><span class="nx">languages</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="sb">.`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">getPersonInfo</span><span class="p">(</span><span class="nx">person</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Lets create a function which give information about the person object with destructuring
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">getPersonInfo</span> <span class="o">=</span> <span class="p">({</span>
</span></span><span class="line"><span class="cl">  <span class="nx">firstName</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">lastName</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">age</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">country</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">job</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">skills</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">languages</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">formattedSkills</span> <span class="o">=</span> <span class="nx">skills</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;, &#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">formattedLanguages</span> <span class="o">=</span> <span class="nx">languages</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;, &#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="sb">`</span><span class="si">${</span><span class="nx">firstName</span><span class="si">}</span><span class="sb"> </span><span class="si">${</span><span class="nx">lastName</span><span class="si">}</span><span class="sb"> lives in </span><span class="si">${</span><span class="nx">country</span><span class="si">}</span><span class="sb">. He is </span><span class="si">${</span><span class="nx">age</span><span class="si">}</span><span class="sb"> years old. He is an </span><span class="si">${</span><span class="nx">job</span><span class="si">}</span><span class="sb">. He teaches </span><span class="si">${</span><span class="nx">formattedSkills</span><span class="si">}</span><span class="sb"> and </span><span class="si">${</span>
</span></span><span class="line"><span class="cl">    <span class="nx">skills</span><span class="p">[</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="si">}</span><span class="sb">. He speaks </span><span class="si">${</span><span class="nx">formattedLanguages</span><span class="si">}</span><span class="sb"> and a little bit of </span><span class="si">${</span><span class="nx">languages</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="sb">.`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">getPersonInfo</span><span class="p">(</span><span class="nx">person</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">Asabeneh Yetayeh lives in Finland. He is  200 years old. He is an Instructor and Developer. He teaches HTML, CSS, JavaScript, React, Redux, Node, MongoDB, Python and D3.js. He speaks Amharic, English and a little bit of Suomi(Finnish)
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span></code></pre></div><h3 id="spread-or-rest-operator">Spread or Rest Operator</h3>
<h4 id="exercise-destructuring">Exercise: Destructuring</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">constants</span> <span class="o">=</span> <span class="p">[</span><span class="mf">2.72</span><span class="p">,</span> <span class="mf">3.14</span><span class="p">,</span> <span class="mf">9.81</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">100</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">countries</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Estonia&#34;</span><span class="p">,</span> <span class="s2">&#34;Sweden&#34;</span><span class="p">,</span> <span class="s2">&#34;Denmark&#34;</span><span class="p">,</span> <span class="s2">&#34;Norway&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">rectangle</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">width</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">height</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">area</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">perimeter</span><span class="o">:</span> <span class="mi">60</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><ol>
<li>Assign the elements of constants array to e, pi, gravity, humanBodyTemp, waterBoilingTemp.</li>
<li>Assign the elements of countries array to fin, est, sw, den, nor</li>
<li>Destructure the rectangle object by its properties or keys.</li>
</ol>
<h2 id="map-and-set">Map and Set</h2>
<h2 id="set">Set</h2>
<p>Set is a collection of unique elements. Lets see how to create a set</p>
<h3 id="creating-a-set">Creating a set</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">companies</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">();</span>
</span></span></code></pre></div><h3 id="adding-an-element-to-a-set">Adding an element to a set</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span> <span class="c1">// 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Google&#34;</span><span class="p">);</span> <span class="c1">// add element to the set
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Facebook&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Amazon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Oracle&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Microsoft&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span> <span class="c1">// 5 elements in the set
</span></span></span></code></pre></div><h3 id="deleting-an-element-a-set">Deleting an element a set</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s2">&#34;Google&#34;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span> <span class="c1">// 4 elements left in the set
</span></span></span></code></pre></div><h3 id="checking-an-element-in-the-set">Checking an element in the set</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&#34;Google&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&#34;Facebook&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span></code></pre></div><h3 id="clearing-the-set">Clearing the set</h3>
<p>It removes all the elements</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">companies</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>
</span></span></code></pre></div><p>See the example below to learn how to use set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">languages</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Finnish&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;French&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Spanish&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;French&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">langSet</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">languages</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">langSet</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">langSet</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">counts</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">count</span> <span class="o">=</span> <span class="p">{};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="nx">l</span> <span class="k">of</span> <span class="nx">langSet</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">filteredLang</span> <span class="o">=</span> <span class="nx">languages</span><span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">lng</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">lng</span> <span class="o">===</span> <span class="nx">l</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">filteredLang</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">counts</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span> <span class="nx">lang</span><span class="o">:</span> <span class="nx">l</span><span class="p">,</span> <span class="nx">count</span><span class="o">:</span> <span class="nx">filteredLang</span><span class="p">.</span><span class="nx">length</span> <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">counts</span><span class="p">);</span>
</span></span></code></pre></div><h2 id="set-1">Set</h2>
<p>Set is a collection a collection of elements. Set can only contains unique elements.
Lets see how to create a set</p>
<h3 id="creating-an-empty-set">Creating an empty set</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">companies</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">{}</span>
</span></span></code></pre></div><h3 id="creating-set-from-array">Creating set from array</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">languages</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Finnish&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;French&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Spanish&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;French&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">setOfLangauges</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">languages</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">setOfLangauges</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Set<span class="o">(</span>4<span class="o">)</span> <span class="o">{</span><span class="s2">&#34;English&#34;</span>, <span class="s2">&#34;Finnish&#34;</span>, <span class="s2">&#34;French&#34;</span>, <span class="s2">&#34;Spanish&#34;</span><span class="o">}</span>
</span></span></code></pre></div><p>Set is an iterable object and we can iterate through each elements.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">languages</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Finnish&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;French&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Spanish&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;French&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">setOfLangauges</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">languages</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="nx">language</span> <span class="k">of</span> <span class="nx">setOfLangauges</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">language</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">  English
</span></span><span class="line"><span class="cl">  Finnish
</span></span><span class="line"><span class="cl">  French
</span></span><span class="line"><span class="cl">  Spanish
</span></span></code></pre></div><h3 id="adding-an-element-to-a-set-1">Adding an element to a set</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">companies</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">();</span> <span class="c1">// creating an empty set
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span> <span class="c1">// 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Google&#34;</span><span class="p">);</span> <span class="c1">// add element to the set
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Facebook&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Amazon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Oracle&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">companies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;Microsoft&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span> <span class="c1">// 5 elements in the set
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Set<span class="o">(</span>5<span class="o">)</span> <span class="o">{</span><span class="s2">&#34;Google&#34;</span>, <span class="s2">&#34;Facebook&#34;</span>, <span class="s2">&#34;Amazon&#34;</span>, <span class="s2">&#34;Oracle&#34;</span>, <span class="s2">&#34;Microsoft&#34;</span><span class="o">}</span>
</span></span></code></pre></div><p>We can also use loop to add element to a set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">companies</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Google&#34;</span><span class="p">,</span> <span class="s2">&#34;Facebook&#34;</span><span class="p">,</span> <span class="s2">&#34;Amazon&#34;</span><span class="p">,</span> <span class="s2">&#34;Oracle&#34;</span><span class="p">,</span> <span class="s2">&#34;Microsoft&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">setOfCompanies</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="nx">company</span> <span class="k">of</span> <span class="nx">companies</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">setOfCompanies</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">company</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Set<span class="o">(</span>5<span class="o">)</span> <span class="o">{</span><span class="s2">&#34;Google&#34;</span>, <span class="s2">&#34;Facebook&#34;</span>, <span class="s2">&#34;Amazon&#34;</span>, <span class="s2">&#34;Oracle&#34;</span>, <span class="s2">&#34;Microsoft&#34;</span><span class="o">}</span>
</span></span></code></pre></div><h3 id="deleting-an-element-a-set-1">Deleting an element a set</h3>
<p>We can delete an element from a set using a delete method.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s2">&#34;Google&#34;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span> <span class="c1">// 4 elements left in the set
</span></span></span></code></pre></div><h3 id="checking-an-element-in-the-set-1">Checking an element in the set</h3>
<p>The has method can help to know if a certain element exists in a set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&#34;Apple&#34;</span><span class="p">));</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&#34;Facebook&#34;</span><span class="p">));</span> <span class="c1">// true
</span></span></span></code></pre></div><h3 id="clearing-the-set-1">Clearing the set</h3>
<p>It removes all the elements from a set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">companies</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">companies</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">{}</span>
</span></span></code></pre></div><p>See the example below to learn how to use set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">languages</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Finnish&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;French&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Spanish&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;English&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;French&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">langSet</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">languages</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">langSet</span><span class="p">);</span> <span class="c1">// Set(4) {&#34;English&#34;, &#34;Finnish&#34;, &#34;French&#34;, &#34;Spanish&#34;}
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">langSet</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span> <span class="c1">// 4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">counts</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">count</span> <span class="o">=</span> <span class="p">{};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="nx">l</span> <span class="k">of</span> <span class="nx">langSet</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">filteredLang</span> <span class="o">=</span> <span class="nx">languages</span><span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">lng</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">lng</span> <span class="o">===</span> <span class="nx">l</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">filteredLang</span><span class="p">);</span> <span class="c1">// [&#34;English&#34;, &#34;English&#34;, &#34;English&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">counts</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span> <span class="nx">lang</span><span class="o">:</span> <span class="nx">l</span><span class="p">,</span> <span class="nx">count</span><span class="o">:</span> <span class="nx">filteredLang</span><span class="p">.</span><span class="nx">length</span> <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">counts</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">lang</span><span class="o">:</span> <span class="s2">&#34;English&#34;</span><span class="p">,</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">3</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">lang</span><span class="o">:</span> <span class="s2">&#34;Finnish&#34;</span><span class="p">,</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">lang</span><span class="o">:</span> <span class="s2">&#34;French&#34;</span><span class="p">,</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">2</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">lang</span><span class="o">:</span> <span class="s2">&#34;Spanish&#34;</span><span class="p">,</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><p>Other use case of set. For instance to count unique item in an array.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">setOfNumbers</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">setOfNumbers</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Set<span class="o">(</span>5<span class="o">)</span> <span class="o">{</span>5, 3, 2, 9, 4<span class="o">}</span>
</span></span></code></pre></div><h3 id="union-of-sets">Union of sets</h3>
<p>To find a union to two sets can be achieved using spread operator. Lets find the union of set A and set B (A U B)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">c</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">a</span><span class="p">,</span> <span class="p">...</span><span class="nx">b</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">A</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">B</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">C</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">C</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Set<span class="o">(</span>6<span class="o">)</span> <span class="o">{</span>1, 2, 3, 4, 5,6<span class="o">}</span>
</span></span></code></pre></div><h3 id="intersection-of-sets">Intersection of sets</h3>
<p>To find an intersection of two sets can be achieved using filter. Lets find the union of set A and set B (A ∩ B)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">A</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">B</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">num</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">B</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">num</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">C</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">C</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Set<span class="o">(</span>3<span class="o">)</span> <span class="o">{</span>3, 4, 5<span class="o">}</span>
</span></span></code></pre></div><h3 id="difference-of-sets">Difference of sets</h3>
<p>To find an the difference between two sets can be achieved using filter. Lets find the different of set A and set B (A \ B)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">A</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">B</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">num</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="o">!</span><span class="nx">B</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">num</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">C</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">C</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Set<span class="o">(</span>2<span class="o">)</span> <span class="o">{</span>1, 2<span class="o">}</span>
</span></span></code></pre></div><h2 id="map">Map</h2>
<h3 id="creating-an-empty-map">Creating an empty Map</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Map</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">map</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Map<span class="o">(</span>0<span class="o">)</span> <span class="o">{}</span>
</span></span></code></pre></div><h3 id="creating-an-map-from-array">Creating an Map from array</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">countries</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">[</span><span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="p">[</span><span class="s2">&#34;Sweden&#34;</span><span class="p">,</span> <span class="s2">&#34;Stockholm&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="p">[</span><span class="s2">&#34;Norway&#34;</span><span class="p">,</span> <span class="s2">&#34;Oslo&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Map</span><span class="p">(</span><span class="nx">countries</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">map</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">map</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Map<span class="o">(</span>3<span class="o">)</span> <span class="o">{</span><span class="s2">&#34;Finland&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Helsinki&#34;</span>, <span class="s2">&#34;Sweden&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Stockholm&#34;</span>, <span class="s2">&#34;Norway&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Oslo&#34;</span><span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="m">3</span>
</span></span></code></pre></div><h3 id="adding-values-to-the-map">Adding values to the Map</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">countriesMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Map</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countriesMap</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span> <span class="c1">// 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">countriesMap</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">countriesMap</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&#34;Sweden&#34;</span><span class="p">,</span> <span class="s2">&#34;Stockholm&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">countriesMap</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&#34;Norway&#34;</span><span class="p">,</span> <span class="s2">&#34;Oslo&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countriesMap</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countriesMap</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Map<span class="o">(</span>3<span class="o">)</span> <span class="o">{</span><span class="s2">&#34;Finland&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Helsinki&#34;</span>, <span class="s2">&#34;Sweden&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Stockholm&#34;</span>, <span class="s2">&#34;Norway&#34;</span> <span class="o">=</span>&gt; <span class="s2">&#34;Oslo&#34;</span><span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="m">3</span>
</span></span></code></pre></div><h3 id="getting-a-value-from-map">Getting a value from Map</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countriesMap</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&#34;Finland&#34;</span><span class="p">));</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Helsinki
</span></span></code></pre></div><h3 id="checking-key-in-map">Checking key in Map</h3>
<p>Check if a key exist in a map using <em>has</em> method. It returns <em>true</em> or <em>false</em>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countriesMap</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&#34;Finland&#34;</span><span class="p">));</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nb">true</span>
</span></span></code></pre></div><p>Getting all values from map using loop</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="nx">country</span> <span class="k">of</span> <span class="nx">countriesMap</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">country</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">(</span>2<span class="o">)</span> <span class="o">[</span><span class="s2">&#34;Finland&#34;</span>, <span class="s2">&#34;Helsinki&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">(</span>2<span class="o">)</span> <span class="o">[</span><span class="s2">&#34;Sweden&#34;</span>, <span class="s2">&#34;Stockholm&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">(</span>2<span class="o">)</span> <span class="o">[</span><span class="s2">&#34;Norway&#34;</span>, <span class="s2">&#34;Oslo&#34;</span><span class="o">]</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="k">for</span> <span class="o">(</span>const <span class="o">[</span>country, city<span class="o">]</span> of countriesMap<span class="o">){</span>
</span></span><span class="line"><span class="cl">console.log<span class="o">(</span>country, city<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Finland Helsinki
</span></span><span class="line"><span class="cl">Sweden Stockholm
</span></span><span class="line"><span class="cl">Norway Oslo
</span></span></code></pre></div><h3 id="exercises-set-and-map">Exercises: Set and Map</h3>
<h3 id="exerciseslevel-1">Exercises:Level 1</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">b</span> <span class="o">=</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">countries</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Finland&#39;</span><span class="p">,</span> <span class="s1">&#39;Sweden&#39;</span><span class="p">,</span> <span class="s1">&#39;Norway&#39;</span><span class="p">]</span>
</span></span></code></pre></div><ol>
<li>create an empty set</li>
<li>Create a set containing 0 to 10 using loop</li>
<li>Remove an element from a set</li>
<li>Clear a set</li>
<li>Create a set of 5 string elements from array</li>
<li>Create a map of countries and number of characters of a country</li>
</ol>
<h3 id="exerciseslevel-2">Exercises:Level 2</h3>
<ol>
<li>Find a union b</li>
<li>Find a intersection b</li>
<li>Find a with b</li>
</ol>
<h3 id="exerciseslevel-3">Exercises:Level 3</h3>
<ol>
<li>
<p>How many languages are there in the countries object file.</p>
</li>
<li>
<p>*** Use the countries data to find the 10 most spoken languages:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Your output should look like this
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">mostSpokenLanguages</span><span class="p">(</span><span class="nx">countries</span><span class="p">,</span> <span class="mi">10</span><span class="p">))[</span>
</span></span><span class="line"><span class="cl">  <span class="p">({</span> <span class="nx">English</span><span class="o">:</span> <span class="mi">91</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">French</span><span class="o">:</span> <span class="mi">45</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">Arabic</span><span class="o">:</span> <span class="mi">25</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">Spanish</span><span class="o">:</span> <span class="mi">24</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">Russian</span><span class="o">:</span> <span class="mi">9</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">Portuguese</span><span class="o">:</span> <span class="mi">9</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">Dutch</span><span class="o">:</span> <span class="mi">8</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">German</span><span class="o">:</span> <span class="mi">7</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">Chinese</span><span class="o">:</span> <span class="mi">5</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">Swahili</span><span class="o">:</span> <span class="mi">4</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">Serbian</span><span class="o">:</span> <span class="mi">4</span> <span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Your output should look like this
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">mostSpokenLanguages</span><span class="p">(</span><span class="nx">countries</span><span class="p">,</span> <span class="mi">3</span><span class="p">));</span>
</span></span></code></pre></div></li>
</ol>
<p>[
{&lsquo;English&rsquo;:91},
{&lsquo;French&rsquo;:45},
{&lsquo;Arabic&rsquo;:25}
]````</p>
<h2 id="document-object-model-dom">Document Object Model (DOM)</h2>
<p>HTML document is structured as a JavaScript Object. Every HTML element has a different properties which can help to manipulate it. It is possible to get, create, append or remove HTML elements using JavaScript. Check the examples below. Selecting HTML element using JavaScript is similar to select CSS. To select an HTML element, we use tag name, id, class name. To create an HTML element we use tag name.</p>
<h3 id="getting-element">Getting Element</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Document Object Model/title&gt;
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">     <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">class</span><span class="o">=</span><span class="s">&#39;title&#39;</span> <span class="na">id</span><span class="o">=</span><span class="s">&#39;first-title&#39;</span><span class="p">&gt;</span>First Title<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">     <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">class</span><span class="o">=</span><span class="s">&#39;title&#39;</span> <span class="na">id</span><span class="o">=</span><span class="s">&#39;second-title&#39;</span><span class="p">&gt;</span>Second Title<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">     <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">class</span><span class="o">=</span><span class="s">&#39;title&#39;</span> <span class="na">id</span><span class="o">=</span><span class="s">&#39;third-title&#39;</span><span class="p">&gt;</span>Third Title<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">     <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></div><h4 id="getting-elements-by-tag-name">Getting elements by tag name</h4>
<p><strong><em>getElementsByTagName()</em></strong> method returns an HTMLCollection object. An HTMLCollection is an array like list of HTML elements. The length property provides the size of the collection.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">allTitles</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&#34;h1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">allTitles</span><span class="p">);</span> <span class="c1">//HTMCollections
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">allTitles</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span> <span class="c1">// 4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">allTitles</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">allTitles</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span> <span class="c1">// prints each elements in the HTMLCollection
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><h4 id="getting-elements-by-class-name">Getting elements by class name</h4>
<p><strong><em>getElementsByClassName()</em></strong> method returns an HTMLCollection object. An HTMLCollection is an array like list of HTML elements. The length property provides the size of the collection. It is possible to loop through all the HTMLCollection elements. See the example below</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">allTitles</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="s2">&#34;title&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">allTitles</span><span class="p">);</span> <span class="c1">//HTMCollections
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">allTitles</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span> <span class="c1">// 4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">allTitles</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">allTitles</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span> <span class="c1">// prints each elements in the HTMLCollection
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><h4 id="getting-an-element-by-id">Getting an element by id</h4>
<p><strong><em>getElementsById()</em></strong> targets a single HTML element. We pass the id without # as an argument.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstTitle</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;first-title&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstTitle</span><span class="p">);</span> <span class="c1">// &lt;h1&gt;First Title&lt;/h1&gt;
</span></span></span></code></pre></div><h4 id="getting-elements-by-using-queryselector-using-tag-class-and-id">Getting elements by using querySelector using tag, class and id:</h4>
<p><strong><em>querySelector</em></strong>: can be used to select HTML element by its tag name, id or class. If the tag name is used it selects only the first element.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstTitle</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelect</span><span class="p">(</span><span class="s2">&#34;h1&#34;</span><span class="p">);</span> <span class="c1">// select the first available h2 element
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">firstTitle</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&#34;#first-title&#34;</span><span class="p">);</span> <span class="c1">// select id with first-title
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">firstTitle</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&#34;.title&#34;</span><span class="p">);</span> <span class="c1">// select the first available h2 element with class title
</span></span></span></code></pre></div><p><strong><em>querySelectorAll</em></strong>: can be used to select html element by its tag name or class. It return a nodeList which is an array like object which support array methods. We can use <strong><em>for loop</em></strong> or <strong><em>forEach</em></strong> to loop through each nodeList elements.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">allTitles</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelectAll</span><span class="p">(</span><span class="s2">&#34;h1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">allTitles</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span> <span class="c1">// 4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">allTitles</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">allTitles</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">allTitles</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">title</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">title</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">allTitles</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&#34;.title&#34;</span><span class="p">);</span> <span class="c1">// the same goes for selecting using class
</span></span></span></code></pre></div><h3 id="adding-attribute">Adding attribute</h3>
<p>An attribute is added in the opening tag of HTML which gives additional information about the element. Common HTML attributes: id, class, src, style, href,disabled, title, alt. Lets add id and class for the fourth title.</p>
<h4 id="adding-attribute-using-setattribute">Adding attribute using setAttribute</h4>
<p>The <strong><em>setAttribute()</em></strong> method set any html attribute. It takes two parameters the type of the attribute and the name of the attribute.
Let&rsquo;s add class and id attribute for the fourth title.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">titles</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&#34;h1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">titles</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&#34;class&#34;</span><span class="p">,</span> <span class="s2">&#34;title&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">titles</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&#34;id&#34;</span><span class="p">,</span> <span class="s2">&#34;fourth-title&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="adding-attribute-without-setattribute">Adding attribute without setAttribute</h4>
<p>Some attributes are DOM object property and they can be set directly. For instance id and class</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">//another way to setting an attribute
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">titles</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">className</span> <span class="o">=</span> <span class="s2">&#34;title&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">titles</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">id</span> <span class="o">=</span> <span class="s2">&#34;fourth-title&#34;</span><span class="p">;</span>
</span></span></code></pre></div><h4 id="adding-class-using-classlist">Adding class using classList</h4>
<p>The class list method is a good method to append additional class. It doesn&rsquo;t override the original class if a class exists</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">//another way to setting an attribute: append the class, doesn&#39;t over ride
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">titles</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&#34;title&#34;</span><span class="p">,</span> <span class="s2">&#34;header-title&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="adding-text-content">Adding Text content</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">titles</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&#34;h1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">titles</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">textContent</span> <span class="o">=</span> <span class="s2">&#34;Fourth Title&#34;</span><span class="p">;</span>
</span></span></code></pre></div><h3 id="adding-style">Adding style</h3>
<p>Lets add some style to our titles. If the element has even index we give it green color else red.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">titles</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&#34;h1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">titles</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">title</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">title</span><span class="p">.</span><span class="nx">fontSize</span> <span class="o">=</span> <span class="s2">&#34;24px&#34;</span><span class="p">;</span> <span class="c1">// all titles will have 24px font size
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">title</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">color</span> <span class="o">=</span> <span class="s2">&#34;green&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">title</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">color</span> <span class="o">=</span> <span class="s2">&#34;red&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><h3 id="creating-an-element">Creating an Element</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">title</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;h1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstTitle</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;first-title&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="creating-elements">Creating elements</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">firstTitle</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;first-title&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">title</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">title</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;h1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">title</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="s2">&#34;title&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">title</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">fontSize</span> <span class="o">=</span> <span class="s2">&#34;24px&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="appending-to-a-parent-element">Appending to a parent element</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// creating multiple elements and appending to parent element
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">title</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">title</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;h1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">title</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="s2">&#34;title&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">title</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">fontSize</span> <span class="o">=</span> <span class="s2">&#34;24px&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">title</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="event-listeners">Event Listeners</h3>
<p>Common HTML events:onclick, onchange, onmouseover, onmouseout, onkeydown, onkeyup, onload.
We can add event listener method to any DOM object. Use use <strong><em>addEventListener()</em></strong> method to listen different event types on HTML elements.
The following is an example of click type event.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">button</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&#34;button&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">button</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&#34;click&#34;</span><span class="p">,</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><h3 id="getting-value-from-an-input-element">Getting value from an input element</h3>
<p>We usually fill forms and forms accept data. Form fields are created using input HTML element.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text&#34;</span> <span class="na">placeholder</span><span class="o">=</span><span class="s">&#34;Mass in Kilogram&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text&#34;</span> <span class="na">placeholder</span><span class="o">=</span><span class="s">&#34;Height in meters&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">button</span><span class="p">&gt;</span>Calculate BMI<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">mass</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&#34;#mass&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">height</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&#34;#height&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">button</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&#34;button&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">bmi</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">button</span><span class="p">.</span><span class="nx">addEventListen</span><span class="p">(</span><span class="s2">&#34;click&#34;</span><span class="p">,</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">bmi</span> <span class="o">=</span> <span class="nx">mass</span><span class="p">.</span><span class="nx">value</span> <span class="o">*</span> <span class="nx">height</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">bmi</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="exercisesdocument-object-model">Exercises:Document Object Model</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="c">&lt;!-- index.html --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>JavaScript for Everyone:DOM<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>First Paragraph<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Second Paragraph<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Third Paragraph<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></div><ol>
<li>Create an index.html file and put four p elements as above: Get the first paragraph by using <strong><em>document.querySelector(tagname)</em></strong> and tag name</li>
<li>Get get each of the the paragraph using <strong><em>document.querySelector(&rsquo;#id&rsquo;)</em></strong> and by their id</li>
<li>Get all the p as nodeList using <strong><em>document.querySelectorAll(tagname)</em></strong> and by their tag name</li>
<li>Loop through the nodeList and get the text content of each paragraph</li>
<li>Set a text content to paragraph the fourth paragraph,<strong><em>Fourth Paragraph</em></strong></li>
<li>Set id and class attribute for all the paragraphs using different attribute setting methods</li>
<li>Change stye of each paragraph using JavaScript(eg. color, background, border, font-size, font-family)</li>
<li>Select all paragraphs and loop through each elements and give the first and third paragraph a color of color, and the second and the fourth paragraph a red color</li>
<li>Remove all the paragraph and create them using JavaScript</li>
<li>Set text content, id and class to each paragraph</li>
<li>Create a div container on HTML document and create 100 numbers dynamically and append to the container div. Put each number in 150px by 150px box. If the number is even the background will be lightgreen else lightblue.</li>
<li>Use the rgb color generator function or hexaColor generator to create 10 divs with random background colors</li>
<li>Use the countries.js to visualize all the countries on the HTML document. You need one wrapper div and box for each countries. In the box display, the letter the country starts with, the name of the country and the number of characters for the country name.</li>
</ol>
<h4 id="dom-mini-projects">DOM: Mini Projects</h4>
<ol>
<li>BMI calculator</li>
<li>Hexadecimal or RGB color Generator</li>
<li>World Countries List</li>
</ol>
<h2 id="classes">Classes</h2>
<p>JavaScript is an object oriented programming language. Everything in JavScript is an object, with its properties and methods. We create class to create an object. A Class is like an object constructor, or a &ldquo;blueprint&rdquo; for creating objects. We instantiate a class to create an object. The class defines attributes and the behavior of the object, while the object, on the other hand, represents the class.</p>
<p>Once we create a class we can create object from it whenever we want. Creating an object from a class is called class instantiation.</p>
<p>In the object section, we saw how to create an object literal. Object literal is a singleton. If we want to get a similar object , we have to write it. However, class allows to create many objects. This helps to reduce amount of code and repetition of code.</p>
<h3 id="defining-a-classes">Defining a classes</h3>
<p>To define a class in JavaScript we need the keyword <em>class</em> , the name of a class in <strong>CamelCase</strong> and block code(two curly brackets). Let us create a class name Person.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">// syntax
</span></span><span class="line"><span class="cl">class ClassName <span class="o">{</span>
</span></span><span class="line"><span class="cl">    //  code goes here
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p><strong>Example:</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// code goes here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>We have created an Person class but it does not have any thing inside.</p>
<h3 id="class-instantiation">Class Instantiation</h3>
<p>Instantiation class means creating an object from a class. We need the keyword <em>new</em> and we call the name of the class after the word new.</p>
<p>Let us create a dog object from our Person class.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// code goes here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Person <span class="o">{}</span>
</span></span></code></pre></div><p>As you can see, we have created a person object. Since the class did not have any properties yet the object is also empty.</p>
<p>Let use the class constructor to pass different properties for the class.</p>
<h3 id="class-constructor">Class Constructor</h3>
<p>The constructor is a builtin function which allows as to create a blueprint for our object. The constructor function starts with a keyword constructor followed by a parenthesis. Inside the parenthesis we pass the properties of the object as parameter. We use the <em>this</em> keyword to attach the constructor parameters with the class.</p>
<p>The following Person class constructor has firstName and lastName property. These properties are attached to the Person class using <em>this</em> keyword. <em>This</em> refers to the class itself.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">);</span> <span class="c1">// Check the output from here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Person <span class="o">{</span>firstName: undefined, lastName<span class="o">}</span>
</span></span></code></pre></div><p>All the keys of the object are undefined. When ever we instantiate we should pass the value of the properties. Let us pass value at this time when we instantiate the class.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Person <span class="o">{</span>firstName: <span class="s2">&#34;Asabeneh&#34;</span>, lastName: <span class="s2">&#34;Yetayeh&#34;</span><span class="o">}</span>
</span></span></code></pre></div><p>As we have stated at the very beginning that once we create a class we can create many object using the class. Now, let us create many person objects using the Person class.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">);</span> <span class="c1">// Check the output from here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Lidiya&#34;</span><span class="p">,</span> <span class="s2">&#34;Tekle&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person3</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Abraham&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person3</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Person <span class="o">{</span>firstName: <span class="s2">&#34;Asabeneh&#34;</span>, lastName: <span class="s2">&#34;Yetayeh&#34;</span><span class="o">}</span>
</span></span><span class="line"><span class="cl">Person <span class="o">{</span>firstName: <span class="s2">&#34;Lidiya&#34;</span>, lastName: <span class="s2">&#34;Tekle&#34;</span><span class="o">}</span>
</span></span><span class="line"><span class="cl">Person <span class="o">{</span>firstName: <span class="s2">&#34;Abraham&#34;</span>, lastName: <span class="s2">&#34;Yetayeh&#34;</span><span class="o">}</span>
</span></span></code></pre></div><p>Using the class Person we created three persons object. As you can see our class did not many properties let us add more properties to the class.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">);</span> <span class="c1">// Check the output from here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">country</span> <span class="o">=</span> <span class="nx">country</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">city</span> <span class="o">=</span> <span class="nx">city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Person <span class="o">{</span>firstName: <span class="s2">&#34;Asabeneh&#34;</span>, lastName: <span class="s2">&#34;Yetayeh&#34;</span>, age: 250, country: <span class="s2">&#34;Finland&#34;</span>, city: <span class="s2">&#34;Helsinki&#34;</span><span class="o">}</span>
</span></span></code></pre></div><h3 id="default-values-with-constructor">Default values with constructor</h3>
<p>The constructor function properties may have a default value like other regular functions.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="nx">firstName</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">lastName</span> <span class="o">=</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span> <span class="o">=</span> <span class="mi">250</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">country</span> <span class="o">=</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">city</span> <span class="o">=</span> <span class="s2">&#34;Helsinki&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">country</span> <span class="o">=</span> <span class="nx">country</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">city</span> <span class="o">=</span> <span class="nx">city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">();</span> <span class="c1">// it will take the default values
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Lidiya&#34;</span><span class="p">,</span> <span class="s2">&#34;Tekle&#34;</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Espoo&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Person <span class="o">{</span>firstName: <span class="s2">&#34;Asabeneh&#34;</span>, lastName: <span class="s2">&#34;Yetayeh&#34;</span>, age: 250, country: <span class="s2">&#34;Finland&#34;</span>, city: <span class="s2">&#34;Helsinki&#34;</span><span class="o">}</span>
</span></span><span class="line"><span class="cl">Person <span class="o">{</span>firstName: <span class="s2">&#34;Lidiya&#34;</span>, lastName: <span class="s2">&#34;Tekle&#34;</span>, age: 28, country: <span class="s2">&#34;Finland&#34;</span>, city: <span class="s2">&#34;Espoo&#34;</span><span class="o">}</span>
</span></span></code></pre></div><h3 id="class-methods">Class methods</h3>
<p>The constructor inside a class is a builtin function which allow us to create a blueprint for the object. In a class we can create class methods. Methods are JavaScript functions inside the class. Let us create some class methods.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">country</span> <span class="o">=</span> <span class="nx">country</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">city</span> <span class="o">=</span> <span class="nx">city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getFullName</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">+</span> <span class="s2">&#34; &#34;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">fullName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Lidiya&#34;</span><span class="p">,</span> <span class="s2">&#34;Tekle&#34;</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Espoo&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">getFullName</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">getFullName</span><span class="p">());</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Asabeneh Yetayeh
</span></span><span class="line"><span class="cl">test.js:19 Lidiya Tekle
</span></span></code></pre></div><h3 id="properties-with-initial-value">Properties with initial value</h3>
<p>When we create a class for some properties we may have an initial value. For instance if you are playing a game, you starting score will be zero. So, we may have a starting score or score which is zero. In other way, we may have an initial skill and we will acquire some skill after some time.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">country</span> <span class="o">=</span> <span class="nx">country</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">city</span> <span class="o">=</span> <span class="nx">city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">skills</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getFullName</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">+</span> <span class="s2">&#34; &#34;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">fullName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Lidiya&#34;</span><span class="p">,</span> <span class="s2">&#34;Tekle&#34;</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Espoo&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">score</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">score</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">skills</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">skills</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="o">[]</span>
</span></span><span class="line"><span class="cl"><span class="o">[]</span>
</span></span></code></pre></div><p>A method could be regular method or a getter or a setter. Let us see, getter and setter.</p>
<h3 id="getter">getter</h3>
<p>The get method allow us to access value from the object. We write a get method using keyword <em>get</em> followed by a function. Instead of accessing properties directly from the object we use getter to get the value. See the example bellow</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">country</span> <span class="o">=</span> <span class="nx">country</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">city</span> <span class="o">=</span> <span class="nx">city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">skills</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getFullName</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">+</span> <span class="s2">&#34; &#34;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">fullName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">get</span> <span class="nx">getscore</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">score</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">get</span> <span class="nx">getSkills</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Lidiya&#34;</span><span class="p">,</span> <span class="s2">&#34;Tekle&#34;</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Espoo&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">getScore</span><span class="p">);</span> <span class="c1">// We do not need parenthesis to call a getter method
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">getScore</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">getSkills</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">getSkills</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="o">[]</span>
</span></span><span class="line"><span class="cl"><span class="o">[]</span>
</span></span></code></pre></div><h3 id="setter">setter</h3>
<p>The setter method allow us to modify the value of certain properties. We write a setter method using keyword <em>set</em> followed by a function. See the example bellow.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">country</span> <span class="o">=</span> <span class="nx">country</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">city</span> <span class="o">=</span> <span class="nx">city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">skills</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getFullName</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">+</span> <span class="s2">&#34; &#34;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">fullName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">get</span> <span class="nx">getScore</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">score</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">get</span> <span class="nx">getSkills</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">set</span> <span class="nx">setScore</span><span class="p">(</span><span class="nx">score</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">score</span> <span class="o">+=</span> <span class="nx">score</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">set</span> <span class="nx">setSkill</span><span class="p">(</span><span class="nx">skill</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">skill</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Lidiya&#34;</span><span class="p">,</span> <span class="s2">&#34;Tekle&#34;</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Espoo&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">person1</span><span class="p">.</span><span class="nx">setScore</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person1</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;HTML&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person1</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;CSS&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person1</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">person2</span><span class="p">.</span><span class="nx">setScore</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person2</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;Planning&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person2</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;Managing&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person2</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;Organizing&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">score</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">score</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">skills</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">skills</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;HTML&#34;</span>, <span class="s2">&#34;CSS&#34;</span>, <span class="s2">&#34;JavaScript&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;Planning&#34;</span>, <span class="s2">&#34;Managing&#34;</span>, <span class="s2">&#34;Organizing&#34;</span><span class="o">]</span>
</span></span></code></pre></div><p>Do not be puzzled by the difference between regular method and a getter. If you know how to make a regular method you are good. Let us add regular method called getPersonInfo in the Person class.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">country</span> <span class="o">=</span> <span class="nx">country</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">city</span> <span class="o">=</span> <span class="nx">city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">skills</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getFullName</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">+</span> <span class="s2">&#34; &#34;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">fullName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">get</span> <span class="nx">getScore</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">score</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">get</span> <span class="nx">getSkills</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">set</span> <span class="nx">setScore</span><span class="p">(</span><span class="nx">score</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">score</span> <span class="o">+=</span> <span class="nx">score</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">set</span> <span class="nx">setSkill</span><span class="p">(</span><span class="nx">skill</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">skill</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getPersonInfo</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">getFullName</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">skills</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;, &#34;</span><span class="p">)</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">        <span class="sb">` and </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">formattedSkills</span> <span class="o">=</span> <span class="nx">skills</span> <span class="o">?</span> <span class="sb">`He knows </span><span class="si">${</span><span class="nx">skills</span><span class="si">}</span><span class="sb">`</span> <span class="o">:</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">info</span> <span class="o">=</span> <span class="sb">`</span><span class="si">${</span><span class="nx">fullName</span><span class="si">}</span><span class="sb"> is </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="si">}</span><span class="sb">. He lives </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">city</span><span class="si">}</span><span class="sb">, </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">country</span><span class="si">}</span><span class="sb">. </span><span class="si">${</span><span class="nx">formattedSkills</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">info</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;Lidiya&#34;</span><span class="p">,</span> <span class="s2">&#34;Tekle&#34;</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Espoo&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">person3</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&#34;John&#34;</span><span class="p">,</span> <span class="s2">&#34;Doe&#34;</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="s2">&#34;Mars&#34;</span><span class="p">,</span> <span class="s2">&#34;Mars city&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">person1</span><span class="p">.</span><span class="nx">setScore</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person1</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;HTML&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person1</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;CSS&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person1</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">person2</span><span class="p">.</span><span class="nx">setScore</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person2</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;Planning&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person2</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;Managing&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">person2</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;Organizing&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">getScore</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">getScore</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">getSkills</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">getSkills</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person3</span><span class="p">.</span><span class="nx">getSkills</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person1</span><span class="p">.</span><span class="nx">getPersonInfo</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">getPersonInfo</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person3</span><span class="p">.</span><span class="nx">getPersonInfo</span><span class="p">());</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;HTML&#34;</span>, <span class="s2">&#34;CSS&#34;</span>, <span class="s2">&#34;JavaScript&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;Planning&#34;</span>, <span class="s2">&#34;Managing&#34;</span>, <span class="s2">&#34;Organizing&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">[]</span>
</span></span><span class="line"><span class="cl">Asabeneh Yetayeh is 250. He lives Helsinki, Finland. He knows HTML, CSS and JavaScript
</span></span><span class="line"><span class="cl">Lidiya Tekle is 28. He lives Espoo, Finland. He knows Planning, Managing and Organizing
</span></span><span class="line"><span class="cl">John Doe is 50. He lives Mars city, Mars.
</span></span></code></pre></div><h3 id="static-method">Static method</h3>
<p>The static keyword defines a static method for a class. Static methods are not called on instances of the class. Instead, they are called on the class itself. These are often utility functions, such as functions to create or clone objects. An example of static method is <em>Date.now()</em>. The <em>now</em> method is called directly from the class.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">country</span> <span class="o">=</span> <span class="nx">country</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">city</span> <span class="o">=</span> <span class="nx">city</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">skills</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getFullName</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">+</span> <span class="s2">&#34; &#34;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">fullName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">get</span> <span class="nx">getScore</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">score</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">get</span> <span class="nx">getSkills</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">set</span> <span class="nx">setScore</span><span class="p">(</span><span class="nx">score</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">score</span> <span class="o">+=</span> <span class="nx">score</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">set</span> <span class="nx">setSkill</span><span class="p">(</span><span class="nx">skill</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">skill</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getPersonInfo</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">getFullName</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">skills</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;, &#34;</span><span class="p">)</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">        <span class="sb">` and </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">formattedSkills</span> <span class="o">=</span> <span class="nx">skills</span> <span class="o">?</span> <span class="sb">`He knows </span><span class="si">${</span><span class="nx">skills</span><span class="si">}</span><span class="sb">`</span> <span class="o">:</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">info</span> <span class="o">=</span> <span class="sb">`</span><span class="si">${</span><span class="nx">fullName</span><span class="si">}</span><span class="sb"> is </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="si">}</span><span class="sb">. He lives </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">city</span><span class="si">}</span><span class="sb">, </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">country</span><span class="si">}</span><span class="sb">. </span><span class="si">${</span><span class="nx">formattedSkills</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">info</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="kr">static</span> <span class="nx">favoriteSkill</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">skills</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JS&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="s2">&#34;Python&#34;</span><span class="p">,</span> <span class="s2">&#34;Node&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">index</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="nx">skills</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">skills</span><span class="p">[</span><span class="nx">index</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="kr">static</span> <span class="nx">showDateTime</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">now</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">year</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">month</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">date</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">hours</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getHours</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">minutes</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">hours</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">hours</span> <span class="o">=</span> <span class="s2">&#34;0&#34;</span> <span class="o">+</span> <span class="nx">hours</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">minutes</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">minutes</span> <span class="o">=</span> <span class="s2">&#34;0&#34;</span> <span class="o">+</span> <span class="nx">minutes</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">dateMonthYear</span> <span class="o">=</span> <span class="nx">date</span> <span class="o">+</span> <span class="s2">&#34;.&#34;</span> <span class="o">+</span> <span class="nx">month</span> <span class="o">+</span> <span class="s2">&#34;.&#34;</span> <span class="o">+</span> <span class="nx">year</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">time</span> <span class="o">=</span> <span class="nx">hours</span> <span class="o">+</span> <span class="s2">&#34;:&#34;</span> <span class="o">+</span> <span class="nx">minutes</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">fullTime</span> <span class="o">=</span> <span class="nx">dateMonthYear</span> <span class="o">+</span> <span class="s2">&#34; &#34;</span> <span class="o">+</span> <span class="nx">time</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">fullTime</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">Person</span><span class="p">.</span><span class="nx">favoriteSkill</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">Person</span><span class="p">.</span><span class="nx">showDateTime</span><span class="p">());</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Node
</span></span><span class="line"><span class="cl">15.1.2020 23:56
</span></span></code></pre></div><p>The static methods are methods which can be used as utility functions.</p>
<h2 id="inheritance">Inheritance</h2>
<p>Using inheritance we can access all the properties and the methods of the parent class. This reduces repetition of code. If you remember, we have a Person parent class and we will create children from it. Our children class could be student, teach etc.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// syntax
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">class</span> <span class="nx">ChildClassName</span> <span class="kr">extends</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="c1">// code goes here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>Let us create a Student child class from Person parent class.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Student</span> <span class="kr">extends</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">saySomething</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;I am a child of the person class&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">s1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Student</span><span class="p">(</span><span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span> <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="mi">250</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">saySomething</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">getFullName</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">getPersonInfo</span><span class="p">());</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Student <span class="o">{</span>firstName: <span class="s2">&#34;Asabeneh&#34;</span>, lastName: <span class="s2">&#34;Yetayeh&#34;</span>, age: <span class="s2">&#34;Finland&#34;</span>, country: 250, city: <span class="s2">&#34;Helsinki&#34;</span>, …<span class="o">}</span>
</span></span><span class="line"><span class="cl">I am a child of the person class
</span></span><span class="line"><span class="cl">Asabeneh Yetayeh
</span></span><span class="line"><span class="cl">Student <span class="o">{</span>firstName: <span class="s2">&#34;Asabeneh&#34;</span>, lastName: <span class="s2">&#34;Yetayeh&#34;</span>, age: <span class="s2">&#34;Finland&#34;</span>, country: 250, city: <span class="s2">&#34;Helsinki&#34;</span>, …<span class="o">}</span>
</span></span><span class="line"><span class="cl">Asabeneh Yetayeh is Finland. He lives Helsinki, 250.
</span></span></code></pre></div><h3 id="overriding-methods">Overriding methods</h3>
<p>As you can see, we manage to access all the methods in the Person Class and we used it in the Student child class. We can customize the parent methods, we can add additional properties to a child class. If we want to customize, the methods and if we want to add extra properties, we need to use the constructor function the child class too. In side the constructor function we call the super() function to access all the properties from the parent class. The Person class didn&rsquo;t have gender but now let us give gender property for the child class, Student. If the same method name used in the child class, the parent method will be overridden.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">class</span> <span class="nx">Student</span> <span class="kr">extends</span> <span class="nx">Person</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">,</span> <span class="nx">gender</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">super</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">country</span><span class="p">,</span> <span class="nx">city</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">gender</span> <span class="o">=</span> <span class="nx">gender</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nx">saySomething</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;I am a child of the person class&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nx">getPersonInfo</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">fullName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">getFullName</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">skills</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;, &#34;</span><span class="p">)</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">        <span class="sb">` and </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">formattedSkills</span> <span class="o">=</span> <span class="nx">skills</span> <span class="o">?</span> <span class="sb">`He knows </span><span class="si">${</span><span class="nx">skills</span><span class="si">}</span><span class="sb">`</span> <span class="o">:</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">pronoun</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">gender</span> <span class="o">==</span> <span class="s2">&#34;Male&#34;</span> <span class="o">?</span> <span class="s2">&#34;He&#34;</span> <span class="o">:</span> <span class="s2">&#34;She&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">info</span> <span class="o">=</span> <span class="sb">`</span><span class="si">${</span><span class="nx">fullName</span><span class="si">}</span><span class="sb"> is </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="si">}</span><span class="sb">. </span><span class="si">${</span><span class="nx">pronoun</span><span class="si">}</span><span class="sb"> lives in </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">city</span><span class="si">}</span><span class="sb">, </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">country</span><span class="si">}</span><span class="sb">. </span><span class="si">${</span><span class="nx">formattedSkills</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">info</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">s1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Student</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Asabeneh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Yetayeh&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mi">250</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Finland&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Helsinki&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Male&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">s2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Student</span><span class="p">(</span><span class="s2">&#34;Lidiya&#34;</span><span class="p">,</span> <span class="s2">&#34;Tekle&#34;</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="s2">&#34;Finland&#34;</span><span class="p">,</span> <span class="s2">&#34;Helsinki&#34;</span><span class="p">,</span> <span class="s2">&#34;Female&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">s1</span><span class="p">.</span><span class="nx">setScore</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">s1</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;HTML&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">s1</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;CSS&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">s1</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">s2</span><span class="p">.</span><span class="nx">setScore</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">s2</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;Planning&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">s2</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;Managing&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">s2</span><span class="p">.</span><span class="nx">setSkill</span> <span class="o">=</span> <span class="s2">&#34;Organizing&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">saySomething</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">getFullName</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s1</span><span class="p">.</span><span class="nx">getPersonInfo</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s2</span><span class="p">.</span><span class="nx">saySomething</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s2</span><span class="p">.</span><span class="nx">getFullName</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">s2</span><span class="p">.</span><span class="nx">getPersonInfo</span><span class="p">());</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Student <span class="o">{</span>firstName: <span class="s2">&#34;Asabeneh&#34;</span>, lastName: <span class="s2">&#34;Yetayeh&#34;</span>, age: 250, country: <span class="s2">&#34;Finland&#34;</span>, city: <span class="s2">&#34;Helsinki&#34;</span>, …<span class="o">}</span>
</span></span><span class="line"><span class="cl">Student <span class="o">{</span>firstName: <span class="s2">&#34;Lidiya&#34;</span>, lastName: <span class="s2">&#34;Tekle&#34;</span>, age: 28, country: <span class="s2">&#34;Finland&#34;</span>, city: <span class="s2">&#34;Helsinki&#34;</span>, …<span class="o">}</span>
</span></span><span class="line"><span class="cl">I am a child of the person class
</span></span><span class="line"><span class="cl">Asabeneh Yetayeh
</span></span><span class="line"><span class="cl">Student <span class="o">{</span>firstName: <span class="s2">&#34;Asabeneh&#34;</span>, lastName: <span class="s2">&#34;Yetayeh&#34;</span>, age: 250, country: <span class="s2">&#34;Finland&#34;</span>, city: <span class="s2">&#34;Helsinki&#34;</span>, …<span class="o">}</span>
</span></span><span class="line"><span class="cl">Asabeneh Yetayeh is 250. He lives in Helsinki, Finland. He knows HTML, CSS and JavaScript
</span></span><span class="line"><span class="cl">I am a child of the person class
</span></span><span class="line"><span class="cl">Lidiya Tekle
</span></span><span class="line"><span class="cl">Student <span class="o">{</span>firstName: <span class="s2">&#34;Lidiya&#34;</span>, lastName: <span class="s2">&#34;Tekle&#34;</span>, age: 28, country: <span class="s2">&#34;Finland&#34;</span>, city: <span class="s2">&#34;Helsinki&#34;</span>, …<span class="o">}</span>
</span></span><span class="line"><span class="cl">Lidiya Tekle is 28. She lives in Helsinki, Finland. He knows Planning, Managing and Organizing
</span></span></code></pre></div><p>Now, the getPersonInfo method has been overridden and it identifies if the person is male or female.</p>
<h2 id="exercises-2">Exercises</h2>
<h3 id="exercises-level-1-1">Exercises Level 1</h3>
<ol>
<li>Create an Animal class. The class will have name, age, color, legs properties and create different methods</li>
<li>Create a Dog and Cat child class from the Animal Class.</li>
</ol>
<h3 id="exercises-level-2-1">Exercises Level 2</h3>
<ol>
<li>Override the method you create in Animal class</li>
</ol>
<h3 id="exercises-level-3-1">Exercises Level 3</h3>
<ol>
<li>Let&rsquo;s try to develop a program which calculate measure of central tendency of a sample(mean, median, mode) and measure of variability(range, variance, standard deviation). In addition to those measures find the min, max, count, percentile, and frequency distribution of the sample. You can create a class called Statistics and create all the functions which do statistical calculations as method for the Statistics class. Check the output below.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JS" data-lang="JS"><span class="line"><span class="cl"><span class="nx">ages</span> <span class="o">=</span> <span class="p">[</span><span class="mi">31</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">38</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">26</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Count:&#39;</span><span class="p">,</span> <span class="nx">statistics</span><span class="p">.</span><span class="nx">count</span><span class="p">())</span> <span class="c1">// 25
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Sum: &#39;</span><span class="p">,</span> <span class="nx">statistics</span><span class="p">.</span><span class="nx">sum</span><span class="p">())</span> <span class="c1">// 744
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Min: &#39;</span><span class="p">,</span> <span class="nx">statistics</span><span class="p">.</span><span class="nx">min</span><span class="p">())</span> <span class="c1">// 24
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Max: &#39;</span><span class="p">,</span> <span class="nx">statistics</span><span class="p">.</span><span class="nx">max</span><span class="p">())</span> <span class="c1">// 38
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Range: &#39;</span><span class="p">,</span> <span class="nx">statistics</span><span class="p">.</span><span class="nx">range</span><span class="p">()</span> <span class="c1">// 14
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Mean: &#39;</span><span class="p">,</span> <span class="nx">statistics</span><span class="p">.</span><span class="nx">mean</span><span class="p">())</span> <span class="c1">// 30
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Median: &#39;</span><span class="p">,</span><span class="nx">statistics</span><span class="p">.</span><span class="nx">median</span><span class="p">())</span> <span class="c1">// 29
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Mode: &#39;</span><span class="p">,</span> <span class="nx">statistics</span><span class="p">.</span><span class="nx">mode</span><span class="p">())</span> <span class="c1">// {&#39;mode&#39;: 26, &#39;count&#39;: 5}
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Variance: &#39;</span><span class="p">,</span><span class="nx">statistics</span><span class="p">.</span><span class="kd">var</span><span class="p">())</span> <span class="c1">// 17.5
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Standard Deviation: &#39;</span><span class="p">,</span> <span class="nx">statistics</span><span class="p">.</span><span class="nx">std</span><span class="p">())</span> <span class="c1">// 4.2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Variance: &#39;</span><span class="p">,</span><span class="nx">statistics</span><span class="p">.</span><span class="kd">var</span><span class="p">())</span> <span class="c1">// 17.5
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Frequency Distribution: &#39;</span><span class="p">,</span><span class="nx">statistics</span><span class="p">.</span><span class="nx">freqDist</span><span class="p">())</span> <span class="c1">// [(20.0, 26), (16.0, 27), (12.0, 32), (8.0, 37), (8.0, 34), (8.0, 33), (8.0, 31), (8.0, 24), (4.0, 38), (4.0, 29), (4.0, 25)]
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">// you output should look like this
</span></span><span class="line"><span class="cl">console.log<span class="o">(</span>statistics.describe<span class="o">())</span>
</span></span><span class="line"><span class="cl">Count: <span class="m">25</span>
</span></span><span class="line"><span class="cl">Sum:  <span class="m">744</span>
</span></span><span class="line"><span class="cl">Min:  <span class="m">24</span>
</span></span><span class="line"><span class="cl">Max:  <span class="m">38</span>
</span></span><span class="line"><span class="cl">Range:  <span class="m">14</span>
</span></span><span class="line"><span class="cl">Mean:  <span class="m">30</span>
</span></span><span class="line"><span class="cl">Median:  <span class="m">29</span>
</span></span><span class="line"><span class="cl">Mode:  <span class="o">(</span>26, 5<span class="o">)</span>
</span></span><span class="line"><span class="cl">Variance:  17.5
</span></span><span class="line"><span class="cl">Standard Deviation:  4.2
</span></span><span class="line"><span class="cl">Frequency Distribution: <span class="o">[(</span>20.0, 26<span class="o">)</span>, <span class="o">(</span>16.0, 27<span class="o">)</span>, <span class="o">(</span>12.0, 32<span class="o">)</span>, <span class="o">(</span>8.0, 37<span class="o">)</span>, <span class="o">(</span>8.0, 34<span class="o">)</span>, <span class="o">(</span>8.0, 33<span class="o">)</span>, <span class="o">(</span>8.0, 31<span class="o">)</span>, <span class="o">(</span>8.0, 24<span class="o">)</span>, <span class="o">(</span>4.0, 38<span class="o">)</span>, <span class="o">(</span>4.0, 29<span class="o">)</span>, <span class="o">(</span>4.0, 25<span class="o">)]</span>
</span></span></code></pre></div><ol>
<li>Create a class called PersonAccount. It has firstname, lastname, incomes, expenses properties and it has totalIncome, totalExpense, accountInfo,addIncome, addExpense and accountBalance methods. Incomes is a set of incomes and its description and expenses is also a set of expenses and its description.</li>
</ol>
<h2 id="regular-expressions">Regular Expressions</h2>
<p>A regular expression or RegEx is a small programming language that helps to find pattern in data. A RegEx can be used to check if some pattern exists in a different data types. To use RegEx in JavaScript either we use RegEx constructor or we can declare a RegEx pattern using two forward slashes followed by a flag. We can create a pattern in two ways.</p>
<p>To declare a string we use a single quote, double quote a backtick to declare a regular expression we use two forward slashes and an optional flag. The flag could be g, i, m, s, u or y.</p>
<h3 id="regex-parameters">RegEx parameters</h3>
<p>A regular expression takes two parameters. One required search pattern and an optional flag.</p>
<h4 id="pattern">Pattern</h4>
<p>A pattern could be a text or any form of pattern which some sort of similarity. For instance the word spam in an email could be a pattern we are interested to look for in an email or a phone number format number might be our interest to look for.</p>
<h4 id="flags">Flags</h4>
<p>Flags are optional parameters in a regular expression which determine the type of searching. Let see some of the flags:</p>
<ul>
<li>g:is a global flag which means looking for a pattern in whole text</li>
<li>i: case insensitive flag(it searches for both lowercase and uppercase)</li>
<li>m: multiline</li>
</ul>
<h3 id="creating-a-pattern-with-regex-constructor">Creating a pattern with RegEx Constructor</h3>
<p>Declaring regular expression without global flag and case insensitive flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// without flag
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">let</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="s2">&#34;love&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">regEx</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">RegEx</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span></code></pre></div><p>Declaring regular expression with global flag and case insensitive flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="s2">&#34;love&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">flag</span> <span class="o">=</span> <span class="s2">&#34;gi&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">regEx</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">RegEx</span><span class="p">(</span><span class="nx">pattern</span><span class="p">,</span> <span class="nx">flag</span><span class="p">);</span>
</span></span></code></pre></div><p>Declaring a regex pattern using RegEx object. Writing the pattern and the flag inside the RegEx constructor</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">regEx</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">RegEx</span><span class="p">(</span><span class="s2">&#34;love&#34;</span><span class="p">,</span> <span class="s2">&#34;gi&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="creating-a-pattern-without-regex-constructor">Creating a pattern without RegEx Constructor</h3>
<p>Declaring regular expression with global flag and case insensitive flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">regEx</span> <span class="o">=</span> <span class="sr">/love/gi</span><span class="p">;</span>
</span></span></code></pre></div><p>The above regular expression is the same as the one which we created with RegEx constructor</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">regEx</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">RegEx</span><span class="p">(</span><span class="s2">&#34;love&#34;</span><span class="p">,</span> <span class="s2">&#34;gi&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="regexp-object-methods">RegExp Object Methods</h3>
<p>Let see some of RegEx methods</p>
<h4 id="testing-for-a-match">Testing for a match</h4>
<p><em>test()</em>:Tests for a match in a string. It returns true or false.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">str</span> <span class="o">=</span> <span class="s2">&#34;I love JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/love/</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">pattern</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">str</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nb">true</span>
</span></span></code></pre></div><h4 id="array-containing-all-of-the-match">Array containing all of the match</h4>
<p><em>match()</em>:Returns an array containing all of the matches, including capturing groups, or null if no match is found.
If we do not use a global flag, match() returns an array containing the pattern, index, input and group.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">str</span> <span class="o">=</span> <span class="s2">&#34;I love JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/love/</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">str</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;love&#34;</span>, index: 2, input: <span class="s2">&#34;I love JavaScript&#34;</span>, groups: undefined<span class="o">]</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">str</span> <span class="o">=</span> <span class="s2">&#34;I love JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/love/g</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">str</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;love&#34;</span><span class="o">]</span>
</span></span></code></pre></div><p><em>search()</em>: Tests for a match in a string. It returns the index of the match, or -1 if the search fails.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">str</span> <span class="o">=</span> <span class="s2">&#34;I love JavaScript&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/love/g</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">str</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="m">2</span>
</span></span></code></pre></div><h4 id="replacing-a-substring">Replacing a substring</h4>
<p><em>replace()</em>: Executes a search for a match in a string, and replaces the matched substring with a replacement substring.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Python is the most beautiful language that a human begin has ever created.\
</span></span></span><span class="line"><span class="cl"><span class="s2">I recommend python for a first programming language&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">matchReplaced</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/Python|python/</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matchReplaced</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">JavaScript is the most beautiful language that a human begin has ever created.I recommend python <span class="k">for</span> a first programming language
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Python is the most beautiful language that a human begin has ever created.\
</span></span></span><span class="line"><span class="cl"><span class="s2">I recommend python for a first programming language&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">matchReplaced</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/Python|python/g</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matchReplaced</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">JavaScript is the most beautiful language that a human begin has ever created.I recommend JavaScript <span class="k">for</span> a first programming language
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Python is the most beautiful language that a human begin has ever created.\
</span></span></span><span class="line"><span class="cl"><span class="s2">I recommend python for a first programming language&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">matchReplaced</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/Python/gi</span><span class="p">,</span> <span class="s2">&#34;JavaScript&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matchReplaced</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">JavaScript is the most beautiful language that a human begin has ever created.I recommend JavaScript <span class="k">for</span> a first programming language
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;%I a%m te%%a%%che%r% a%n%d %% I l%o%ve te%ach%ing.\
</span></span></span><span class="line"><span class="cl"><span class="s2">T%he%re i%s n%o%th%ing as m%ore r%ewarding a%s e%duc%at%i%ng a%n%d e%m%p%ow%er%ing \
</span></span></span><span class="line"><span class="cl"><span class="s2">p%e%o%ple.\
</span></span></span><span class="line"><span class="cl"><span class="s2">I fo%und te%a%ching m%ore i%n%t%er%%es%ting t%h%an any other %jobs.\
</span></span></span><span class="line"><span class="cl"><span class="s2">D%o%es thi%s m%ot%iv%a%te %y%o%u to b%e a t%e%a%cher.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/%/g</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">I am teacher and  I love teaching.There is nothing as more rewarding as educating and empowering people.I found teaching more interesting than any other jobs.Does this motivate you to be a teacher.
</span></span></code></pre></div><ul>
<li>[]: A set of characters
<ul>
<li>[a-c] means, a or b or c</li>
<li>[a-z] means, any letter a to z</li>
<li>[A-Z] means, any character A to Z</li>
<li>[0-3] means, 0 or 1 or 2 or 3</li>
<li>[0-9] means any number 0 to 9</li>
<li>[A-Za-z0-9] any character which is a to z, A to Z, 0 to 9</li>
</ul>
</li>
<li>\: uses to escape special characters
<ul>
<li>\d mean:match where the string contains digits (numbers from 0-9)</li>
<li>\D mean: match where the string does not contain digits</li>
</ul>
</li>
<li>. : any character except new line character(\n)</li>
<li>^: starts with
<ul>
<li>r&rsquo;^substring&rsquo; eg r&rsquo;^love&rsquo;, a sentence which starts with a word love</li>
<li>r&rsquo;[^abc] mean not a, not b, not c.</li>
</ul>
</li>
<li>$: ends with
<ul>
<li>r&rsquo;substring$&rsquo; eg r&rsquo;love$&rsquo;, sentence ends with a word love</li>
</ul>
</li>
<li>*: zero or more times
<ul>
<li>r&rsquo;[a]*&rsquo; means a optional or it can be occur many times.</li>
</ul>
</li>
<li>+: one or more times
<ul>
<li>r&rsquo;[a]+&rsquo; mean at least once or more times</li>
</ul>
</li>
<li>?: zero or one times
<ul>
<li>r&rsquo;[a]?&rsquo; mean zero times or once</li>
</ul>
</li>
<li>{3}: Exactly 3 characters</li>
<li>{3,}: At least 3 character</li>
<li>{3,8}: 3 to 8 characters</li>
<li>|: Either or
<ul>
<li>r&rsquo;apple|banana&rsquo; mean either of an apple or a banana</li>
</ul>
</li>
<li>(): Capture and group</li>
</ul>
<p><img loading="lazy" src="/../assets/images/1/regex.png" alt="Regular Expression cheat sheet"  />
</p>
<p>Let&rsquo;s use example to clarify the above meta characters</p>
<h3 id="square-bracket">Square Bracket</h3>
<p>Let&rsquo;s use square bracket to include lower and upper case</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="s2">&#34;[Aa]pple&#34;</span><span class="p">;</span> <span class="c1">// this square bracket mean either A or a
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Apple and banana are fruits. An old cliche says an apple a day a doctor way has been replaced by a banana a day keeps the doctor far far away. &#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;Apple&#34;</span>, index: 0, input: <span class="s2">&#34;Apple and banana are fruits. An old cliche says an…by a banana a day keeps the doctor far far away. &#34;</span>, groups: undefined<span class="o">]</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/[Aa]pple/g</span><span class="p">;</span> <span class="c1">// this square bracket mean either A or a
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Apple and banana are fruits. An old cliche says an apple a day a doctor way has been replaced by a banana a day keeps the doctor far far away. &#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;Apple&#34;</span>, <span class="s2">&#34;apple&#34;</span><span class="o">]</span>
</span></span></code></pre></div><p>If we want to look for the banana, we write the pattern as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/[Aa]pple|[Bb]anana/g</span><span class="p">;</span> <span class="c1">// this square bracket mean either A or a
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Apple and banana are fruits. An old cliche says an apple a day a doctor way has been replaced by a banana a day keeps the doctor far far away. Banana is easy to eat too.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;Apple&#34;</span>, <span class="s2">&#34;banana&#34;</span>, <span class="s2">&#34;apple&#34;</span>, <span class="s2">&#34;banana&#34;</span>, <span class="s2">&#34;Banana&#34;</span><span class="o">]</span>
</span></span></code></pre></div><p>Using the square bracket and or operator , we manage to extract Apple, apple, Banana and banana.</p>
<h3 id="escape-character-in-regex">Escape character(\) in RegEx</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/\d/g</span><span class="p">;</span> <span class="c1">// d is a special character which means digits
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;This regular expression example was made in January 12,  2020.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#34;1&#34;, &#34;2&#34;, &#34;2&#34;, &#34;0&#34;, &#34;2&#34;, &#34;0&#34;], this is not what we want
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/\d+/g</span><span class="p">;</span> <span class="c1">// d is a special character which means digits
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;This regular expression example was made in January 12,  2020.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#34;12&#34;, &#34;2020&#34;], this is not what we want
</span></span></span></code></pre></div><h3 id="one-or-more-times">One or more times(+)</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/\d+/g</span><span class="p">;</span> <span class="c1">// d is a special character which means digits
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;This regular expression example was made in January 12,  2020.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#34;12&#34;, &#34;2020&#34;], this is not what we want
</span></span></span></code></pre></div><h3 id="period">Period(.)</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/[a]./g</span><span class="p">;</span> <span class="c1">// this square bracket means a and . means any character except new line
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;Apple and banana are fruits&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#34;an&#34;, &#34;an&#34;, &#34;an&#34;, &#34;a &#34;, &#34;ar&#34;]
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/[a].+/g</span><span class="p">;</span> <span class="c1">// . any character, + any character one or more times
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;Apple and banana are fruits&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#39;and banana are fruits&#39;]
</span></span></span></code></pre></div><h3 id="zero-or-more-times">Zero or more times(*)</h3>
<p>Zero or many times. The pattern could may not occur or it can occur many times.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/[a].*/g</span><span class="p">;</span> <span class="c1">//. any character, + any character one or more times
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;Apple and banana are fruits&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#39;and banana are fruits&#39;]
</span></span></span></code></pre></div><h3 id="zero-or-one-times">Zero or one times(?)</h3>
<p>Zero or one times. The pattern could may not occur or it may occur once.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;I am not sure if there is a convention how to write the word e-mail.\
</span></span></span><span class="line"><span class="cl"><span class="s2">Some people write it email others may write it as Email or E-mail.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/[Ee]-?mail/g</span><span class="p">;</span> <span class="c1">// ? means optional
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#34;e-mail&#34;, &#34;email&#34;, &#34;Email&#34;, &#34;E-mail&#34;]
</span></span></span></code></pre></div><h3 id="quantifier-in-regex">Quantifier in RegEx</h3>
<p>We can specify the length of the substring we look for in a text, using a curly bracket. Lets imagine, we are interested in substring that their length are 4 characters</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;This regular expression example was made in December 6,  2019.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/\d{4}/g</span><span class="p">;</span> <span class="c1">// exactly four times
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#39;2019&#39;]
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;This regular expression example was made in December 6,  2019.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/\d{1,4}/g</span><span class="p">;</span> <span class="c1">// 1 to 4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#39;6&#39;, &#39;2019&#39;]
</span></span></span></code></pre></div><h3 id="cart-">Cart ^</h3>
<ul>
<li>Starts with</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;This regular expression example was made in December 6,  2019.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/^This/</span><span class="p">;</span> <span class="c1">// ^ means starts with
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#39;This&#39;]
</span></span></span></code></pre></div><ul>
<li>Negation</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">txt</span> <span class="o">=</span> <span class="s2">&#34;This regular expression example was made in December 6,  2019.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/[^A-Za-z,. ]+/g</span><span class="p">;</span> <span class="c1">// ^ in set character means negation, not A to Z, not a to z, no space, no coma no period
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span> <span class="c1">// [&#34;6&#34;, &#34;2019&#34;]
</span></span></span></code></pre></div><h3 id="exact-match">Exact match</h3>
<p>It should have ^ starting and $ which is an end.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/^[A-Z][a-z]{3,12}$/</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">pattern</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">name</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span> <span class="c1">// true
</span></span></span></code></pre></div><h2 id="-exercises">💻 Exercises</h2>
<h3 id="exercises-level-1-2">Exercises: Level 1</h3>
<ol>
<li>Calculate the total annual income of the person from the following text. ‘He earns 4000 euro from salary per month, 10000 euro annual bonus, 5500 euro online courses per month.’</li>
<li>The position of some particles on the horizontal x-axis -12, -4, -3 and -1 in the negative direction, 0 at origin, 4 and 8 in the positive direction. Extract these numbers and find the distance between the two furthest particles.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">points</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;-1&#34;</span><span class="p">,</span> <span class="s2">&#34;2&#34;</span><span class="p">,</span> <span class="s2">&#34;-4&#34;</span><span class="p">,</span> <span class="s2">&#34;-3&#34;</span><span class="p">,</span> <span class="s2">&#34;-1&#34;</span><span class="p">,</span> <span class="s2">&#34;0&#34;</span><span class="p">,</span> <span class="s2">&#34;4&#34;</span><span class="p">,</span> <span class="s2">&#34;8&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">sortedPoints</span> <span class="o">=</span> <span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="nx">distance</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
</span></span></code></pre></div><ol>
<li>
<p>Write a pattern which identify if a string is a valid JavaScript variable</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">is_valid_variable<span class="o">(</span><span class="s1">&#39;first_name&#39;</span><span class="o">)</span> <span class="c1"># True</span>
</span></span><span class="line"><span class="cl">is_valid_variable<span class="o">(</span><span class="s1">&#39;first-name&#39;</span><span class="o">)</span> <span class="c1"># False</span>
</span></span><span class="line"><span class="cl">is_valid_variable<span class="o">(</span><span class="s1">&#39;1first_name&#39;</span><span class="o">)</span> <span class="c1"># False</span>
</span></span><span class="line"><span class="cl">is_valid_variable<span class="o">(</span><span class="s1">&#39;firstname&#39;</span><span class="o">)</span> <span class="c1"># True</span>
</span></span></code></pre></div></li>
</ol>
<h3 id="exercises-level-2-2">Exercises: Level 2</h3>
<ol>
<li>
<p>Write a function called <em>tenMostFrequentWords</em> which get the ten most frequent word from a string?</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">paragraph</span> <span class="o">=</span> <span class="sb">`I love teaching. If you do not love teaching what else can you love. I love Python if you do not love something which can give you all the capabilities to develop an application what else can you love.`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">tenMostFrequentWords</span><span class="p">(</span><span class="nx">paragraph</span><span class="p">));</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    <span class="o">[</span>
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;love&#39;</span>, count:6<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;you&#39;</span>, count:5<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;can&#39;</span>, count:3<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;what&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;teaching&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;not&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;else&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;do&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;I&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;which&#39;</span>, count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;to&#39;</span>, count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;the&#39;</span>, count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;something&#39;</span>, count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;if&#39;</span>, count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;give&#39;</span>, count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;develop&#39;</span>,count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;capabilities&#39;</span>,count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;application&#39;</span>, count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;an&#39;</span>,count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;all&#39;</span>,count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;Python&#39;</span>,count:1<span class="o">}</span>,
</span></span><span class="line"><span class="cl">    <span class="o">{</span>word:<span class="s1">&#39;If&#39;</span>,count:1<span class="o">}]</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">tenMostFrequentWords</span><span class="p">(</span><span class="nx">paragraph</span><span class="p">,</span> <span class="mi">10</span><span class="p">));</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">[{</span>word:<span class="s1">&#39;love&#39;</span>, count:6<span class="o">}</span>,
</span></span><span class="line"><span class="cl"><span class="o">{</span>word:<span class="s1">&#39;you&#39;</span>, count:5<span class="o">}</span>,
</span></span><span class="line"><span class="cl"><span class="o">{</span>word:<span class="s1">&#39;can&#39;</span>, count:3<span class="o">}</span>,
</span></span><span class="line"><span class="cl"><span class="o">{</span>word:<span class="s1">&#39;what&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl"><span class="o">{</span>word:<span class="s1">&#39;teaching&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl"><span class="o">{</span>word:<span class="s1">&#39;not&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl"><span class="o">{</span>word:<span class="s1">&#39;else&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl"><span class="o">{</span>word:<span class="s1">&#39;do&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl"><span class="o">{</span>word:<span class="s1">&#39;I&#39;</span>, count:2<span class="o">}</span>,
</span></span><span class="line"><span class="cl"><span class="o">{</span>word:<span class="s1">&#39;which&#39;</span>, count:1<span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">]</span>
</span></span></code></pre></div></li>
</ol>
<h3 id="exercises-level-3-2">Exercises: Level 3</h3>
<ol>
<li>Writ a function which cleans text. Clean the following text. After cleaning, count three most frequent words in the string.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">sentence</span> <span class="o">=</span> <span class="sb">`%I $am@% a %tea@cher%, &amp;and&amp; I lo%#ve %tea@ching%;. There $is nothing; &amp;as&amp; mo@re rewarding as educa@ting &amp;and&amp; @emp%o@wering peo@ple. ;I found tea@ching m%o@re interesting tha@n any other %jo@bs. %Do@es thi%s mo@tivate yo@u to be a tea@cher!?`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">cleanText</span><span class="p">(</span><span class="nx">sentence</span><span class="p">));</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"> I am a teacher and I love teaching There is nothing as more rewarding as educating and empowering people I found teaching more interesting than any other <span class="nb">jobs</span> Does this motivate you to be a teacher
</span></span><span class="line"><span class="cl"> <span class="sb">```</span>
</span></span><span class="line"><span class="cl">1. Write a <span class="k">function</span> which find the most frequent words. After cleaning, count three most frequent words in the string.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> <span class="sb">```</span>js
</span></span><span class="line"><span class="cl"> console.log<span class="o">(</span>mostFrequentWords<span class="o">(</span>cleanedText<span class="o">))</span>
</span></span><span class="line"><span class="cl"> <span class="o">[{</span>word:<span class="s1">&#39;I&#39;</span>, count:3<span class="o">}</span>, <span class="o">{</span>word:<span class="s1">&#39;teaching&#39;</span>, count:2<span class="o">}</span>, <span class="o">{</span>word:<span class="s1">&#39;teacher&#39;</span>, count:2<span class="o">}]</span>
</span></span><span class="line"><span class="cl"> <span class="sb">```</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Promises and Callbacks</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">From the following code blocks you will notice, the difference between callback and promises:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="sb">```</span>js
</span></span><span class="line"><span class="cl">   //Callback
</span></span><span class="line"><span class="cl"> const <span class="nv">doSomething</span> <span class="o">=</span> <span class="nv">callback</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span></span><span class="line"><span class="cl"> setTimeout<span class="o">(()</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span></span><span class="line"><span class="cl">   const <span class="nv">skills</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;HTML&#39;</span>, <span class="s1">&#39;CSS&#39;</span>, <span class="s1">&#39;JS&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">   callback<span class="o">(</span><span class="s1">&#39;It didnt go well&#39;</span>, skills<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="o">}</span>, 2000<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">doSomething<span class="o">((</span>err, result<span class="o">)</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="o">(</span>err<span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">   <span class="k">return</span> console.log<span class="o">(</span>err<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="o">}</span>
</span></span><span class="line"><span class="cl"> <span class="k">return</span> console.log<span class="o">(</span>result<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">})</span>
</span></span><span class="line"><span class="cl">// after <span class="m">2</span> seconds it will print
</span></span><span class="line"><span class="cl">// <span class="o">=</span>&gt; It didnt go well
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> const <span class="nv">doSomething</span> <span class="o">=</span> <span class="nv">callback</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span></span><span class="line"><span class="cl"> setTimeout<span class="o">(()</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span></span><span class="line"><span class="cl">   const <span class="nv">skills</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;HTML&#39;</span>, <span class="s1">&#39;CSS&#39;</span>, <span class="s1">&#39;JS&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">   callback<span class="o">(</span>false, skills<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="o">}</span>, 2000<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">doSomething<span class="o">((</span>err, result<span class="o">)</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="o">(</span>err<span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">   <span class="k">return</span> console.log<span class="o">(</span>err<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="o">}</span>
</span></span><span class="line"><span class="cl"> <span class="k">return</span> console.log<span class="o">(</span>result<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">})</span>
</span></span><span class="line"><span class="cl">// after <span class="m">2</span> seconds it will print the skills
</span></span><span class="line"><span class="cl">// <span class="o">=</span>&gt; <span class="o">[</span><span class="s2">&#34;HTML&#34;</span>, <span class="s2">&#34;CSS&#34;</span>, <span class="s2">&#34;JS&#34;</span><span class="o">]</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Promise
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">doPromise</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">setTimeout</span><span class="p">(()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">skills</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JS&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">skills</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">resolve</span><span class="p">(</span><span class="nx">skills</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">reject</span><span class="p">(</span><span class="s2">&#34;Something wrong has happened&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span> <span class="mi">2000</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">doPromise</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">result</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="k">catch</span><span class="p">((</span><span class="nx">error</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">myPromise</span> <span class="o">=</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">resolve</span><span class="p">(</span><span class="nx">n</span> <span class="o">*</span> <span class="nx">n</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">reject</span><span class="p">(</span><span class="s2">&#34;You need to pass an argument&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">square</span> <span class="o">=</span> <span class="kr">async</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">value</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">myPromise</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">square</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">res</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">res</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="k">catch</span><span class="p">((</span><span class="nx">err</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">square</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span>
</span></span></code></pre></div><h2 id="async-and-await">Async and Await</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">&#34;https://restcountries.eu/rest/v2/alll&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">response</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">data</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="k">catch</span><span class="p">((</span><span class="nx">error</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">fetchData</span> <span class="o">=</span> <span class="kr">async</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">response</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">countries</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">countries</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;===== async and await&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">fetchData</span><span class="p">();</span>
</span></span></code></pre></div><h2 id="localstorage">localStorage</h2>
<p>Local storage is the para of the web storage API which is used to store data on the browser with no expiration data. The data will be available on the browser even after the browser is closed. There are five methods to work on local storage:
<em>setItem(), getItem(), removeItem(), clear(), key()</em></p>
<h3 id="setting-item-to-the-localstorage">Setting item to the localStorage</h3>
<p>When we set data to be stored in a localStorage, it will be stored as a string. If we are storing an array or an object, we should stringify it first to keep the format unless otherwise we lose the array structure or the object structure of the original data</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s2">&#34;name&#34;</span><span class="p">,</span> <span class="s2">&#34;Asabeneh&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">localStorage</span><span class="p">);</span> <span class="c1">//Storage {name: &#39;Asabeneh&#39;, length: 1}
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s2">&#34;age&#34;</span><span class="p">,</span> <span class="mi">200</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">localStorage</span><span class="p">);</span> <span class="c1">//Storage {age: &#39;200&#39;, name: &#39;Asabeneh&#39;, length: 2}
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">skills</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="s2">&#34;JS&#34;</span><span class="p">,</span> <span class="s2">&#34;React&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="c1">//Skills array has to be stringified first to keep the format.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">skillsJSON</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">skills</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s2">&#34;skills&#34;</span><span class="p">,</span> <span class="nx">skillsJSON</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">localStorage</span><span class="p">);</span> <span class="c1">//Storage {age: &#39;200&#39;, name: &#39;Asabeneh&#39;, skills: &#39;HTML,CSS,JS,React&#39;, length: 3}
</span></span></span></code></pre></div><p>If we are storing an array, an object or object array, we should stringify the object first. See the example below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">skills</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">tech</span><span class="o">:</span> <span class="s2">&#34;HTML&#34;</span><span class="p">,</span> <span class="nx">level</span><span class="o">:</span> <span class="mi">10</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">tech</span><span class="o">:</span> <span class="s2">&#34;CSS&#34;</span><span class="p">,</span> <span class="nx">level</span><span class="o">:</span> <span class="mi">9</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">tech</span><span class="o">:</span> <span class="s2">&#34;JS&#34;</span><span class="p">,</span> <span class="nx">level</span><span class="o">:</span> <span class="mi">8</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">tech</span><span class="o">:</span> <span class="s2">&#34;React&#34;</span><span class="p">,</span> <span class="nx">level</span><span class="o">:</span> <span class="mi">9</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">tech</span><span class="o">:</span> <span class="s2">&#34;Redux&#34;</span><span class="p">,</span> <span class="nx">level</span><span class="o">:</span> <span class="mi">10</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">tech</span><span class="o">:</span> <span class="s2">&#34;Node&#34;</span><span class="p">,</span> <span class="nx">level</span><span class="o">:</span> <span class="mi">8</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="nx">tech</span><span class="o">:</span> <span class="s2">&#34;MongoDB&#34;</span><span class="p">,</span> <span class="nx">level</span><span class="o">:</span> <span class="mi">8</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">skillJSON</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">skills</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s2">&#34;skills&#34;</span><span class="p">,</span> <span class="nx">skillJSON</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="getting-item-from-localstorage">Getting item from localStorage</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s2">&#34;name&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">age</span> <span class="o">=</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s2">&#34;age&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">skills</span> <span class="o">=</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s2">&#34;skills&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">skills</span><span class="p">);</span> <span class="c1">// &#39;Asabeneh&#39;, &#39;200&#39;, &#39;[&#39;HTML&#39;,&#39;CSS&#39;,&#39;JS&#39;,&#39;React&#39;]&#39;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">skillsObj</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s2">&#34;skills&#34;</span><span class="p">),</span> <span class="kc">undefined</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">skillsObj</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="clearing-the-localstorage">Clearing the localStorage</h3>
<p>The clear method, will clear everything stored in the local storage</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">localStorage</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>
</span></span></code></pre></div><h3 id="exerciseslocal-storage">Exercises:Local Storage</h3>
<h2 id="cookies">Cookies</h2>
<h3 id="exercisescookies">Exercises:Cookies</h3>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
