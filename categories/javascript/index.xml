<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JavaScript on Shenlong616</title>
    <link>https://shenlong616.github.io/categories/javascript/</link>
    <description>Recent content in JavaScript on Shenlong616</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 15 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://shenlong616.github.io/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript: a falsy value</title>
      <link>https://shenlong616.github.io/posts/javascript/falsy/</link>
      <pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/falsy/</guid>
      <description>Value Description false The keyword false. 0 The Number zero (so, also 0.0, etc., and 0x0). -0 The Number negative zero (so, also -0.0, etc., and -0x0). 0n The BigInt zero (so, also 0x0n). Note that there is no BigInt negative zero — the negation of 0n is 0n. &amp;quot;&amp;quot;, &#39;&#39;, `` Empty string value. null The absence of any value. undefined The primitive value. NaN Not a number. document.</description>
      <content:encoded><![CDATA[<table>
<thead>
<tr>
<th>Value</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>false</code></td>
<td>The keyword <code>false</code>.</td>
</tr>
<tr>
<td><code>0</code></td>
<td>The Number zero (so, also <code>0.0</code>, etc., and <code>0x0</code>).</td>
</tr>
<tr>
<td><code>-0</code></td>
<td>The Number negative zero (so, also <code>-0.0</code>, etc., and <code>-0x0</code>).</td>
</tr>
<tr>
<td><code>0n</code></td>
<td>The <code>BigInt</code> zero (so, also <code>0x0n</code>). Note that there is no BigInt negative zero — the negation of <code>0n</code> is <code>0n</code>.</td>
</tr>
<tr>
<td><code>&quot;&quot;</code>, <code>''</code>, <code>``</code></td>
<td>Empty string value.</td>
</tr>
<tr>
<td>null</td>
<td>The absence of any value.</td>
</tr>
<tr>
<td>undefined</td>
<td>The primitive value.</td>
</tr>
<tr>
<td>NaN</td>
<td>Not a number.</td>
</tr>
<tr>
<td>document.all</td>
<td>Objects are falsy if and only if they have the <code>IsHTMLDDA</code> internal slot. That slot only exists in <code>document.all</code> and cannot be set using JavaScript.</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: creates a duplicate-free version of an Array</title>
      <link>https://shenlong616.github.io/posts/javascript/creates-a-duplicate-free-version-of-an-array/</link>
      <pubDate>Fri, 08 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/creates-a-duplicate-free-version-of-an-array/</guid>
      <description>const array = [1, 2, 2, 3, 3, 3]; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set const uniqueArray = [...new Set(array)]; console.log(uniqueArray); // [1, 2, 3] const Champions = [ { name: &amp;#34;Yasuo&amp;#34;, age: 18, }, { name: &amp;#34;Zed&amp;#34;, age: 19, }, { name: &amp;#34;Darius&amp;#34;, age: 20, }, { name: &amp;#34;Yasuo&amp;#34;, age: 21, }, { name: &amp;#34;Kha&amp;#39;Zix&amp;#34;, age: 21, }, ]; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map const uniqueChampionsName = [ ...new Set(Champions.map((element) =&amp;gt; element.name)), ]; const uniqueChampionsAge = [ .</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">array</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">uniqueArray</span> <span class="o">=</span> <span class="p">[...</span><span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">array</span><span class="p">)];</span>
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">uniqueArray</span><span class="p">);</span> <span class="c1">// [1, 2, 3]
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">Champions</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Yasuo&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">18</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Zed&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">19</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Darius&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Yasuo&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">21</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">name</span><span class="o">:</span> <span class="s2">&#34;Kha&#39;Zix&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">age</span><span class="o">:</span> <span class="mi">21</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">uniqueChampionsName</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">...</span><span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">Champions</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">element</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">element</span><span class="p">.</span><span class="nx">name</span><span class="p">)),</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">uniqueChampionsAge</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="p">...</span><span class="k">new</span> <span class="nx">Set</span><span class="p">(</span><span class="nx">Champions</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">element</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">element</span><span class="p">.</span><span class="nx">age</span><span class="p">)),</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">uniqueChampionsName</span><span class="p">);</span> <span class="c1">// [&#39;Yasuo&#39;, &#39;Zed&#39;, &#39;Darius&#39;, &#34;Kha&#39;Zix&#34;]
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>JavaScript: get a random item from an Array</title>
      <link>https://shenlong616.github.io/posts/javascript/get-a-random-item-from-an-array/</link>
      <pubDate>Fri, 08 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shenlong616.github.io/posts/javascript/get-a-random-item-from-an-array/</guid>
      <description>var array = [1, 2, 3]; var array2 = [4, 5, 6]; const randomArray = (arr) =&amp;gt; { return arr[Math.floor(Math.random() * arr.length)]; }; console.log(randomArray(array)); // random 1 to 3 console.log(randomArray([...array, ...array2])); // random 1 to 6 </description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">array</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">array2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">randomArray</span> <span class="o">=</span> <span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">arr</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="p">)];</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">randomArray</span><span class="p">(</span><span class="nx">array</span><span class="p">));</span> <span class="c1">// random 1 to 3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">randomArray</span><span class="p">([...</span><span class="nx">array</span><span class="p">,</span> <span class="p">...</span><span class="nx">array2</span><span class="p">]));</span> <span class="c1">// random 1 to 6
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
