<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>React on Shenlong616</title>
    <link>https://shenlong616.github.io/categories/react/</link>
    <description>Recent content in React on Shenlong616</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 25 Aug 2019 13:07:30 -0700</lastBuildDate><atom:link href="https://shenlong616.github.io/categories/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React: Algolia instantsearch</title>
      <link>https://shenlong616.github.io/posts/snippets/react-algolia-instantsearch/</link>
      <pubDate>Sun, 25 Aug 2019 13:07:30 -0700</pubDate>
      
      <guid>https://shenlong616.github.io/posts/snippets/react-algolia-instantsearch/</guid>
      <description>Algolia InstantSearch with React</description>
      <content:encoded><![CDATA[<h2 id="install-instantsearch">Install InstantSearch</h2>
<p>Algolia provides official <a href="https://www.algolia.com/doc/guides/building-search-ui/installation/react/">React support</a>. Follow the installation steps to make the prebuilt components available in your app.</p>
<h2 id="react-instantsearch-component">React InstantSearch Component</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-jsx" data-lang="jsx"><span class="line"><span class="cl"><span class="kr">import</span> <span class="nx">React</span> <span class="nx">from</span> <span class="s2">&#34;react&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="s2">&#34;./App.css&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="nx">algoliasearch</span> <span class="nx">from</span> <span class="s2">&#34;algoliasearch/lite&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">InstantSearch</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">SearchBox</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Hits</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">connectHighlight</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="nx">from</span> <span class="s2">&#34;react-instantsearch-dom&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">searchClient</span> <span class="o">=</span> <span class="nx">algoliasearch</span><span class="p">(</span><span class="s2">&#34;YOUR-APP-ID&#34;</span><span class="p">,</span> <span class="s2">&#34;YOUR-SEARCH-KEY&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">InstantSearch</span> <span class="na">searchClient</span><span class="o">=</span><span class="p">{</span><span class="nx">searchClient</span><span class="p">}</span> <span class="na">indexName</span><span class="o">=</span><span class="s">&#34;customers&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">SearchBox</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">Hits</span> <span class="na">hitComponent</span><span class="o">=</span><span class="p">{</span><span class="nx">Hit</span><span class="p">}</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">InstantSearch</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">CustomHighlight</span> <span class="o">=</span> <span class="nx">connectHighlight</span><span class="p">(({</span> <span class="nx">highlight</span><span class="p">,</span> <span class="nx">attribute</span><span class="p">,</span> <span class="nx">hit</span> <span class="p">})</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">parsedHit</span> <span class="o">=</span> <span class="nx">highlight</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">    <span class="nx">highlightProperty</span><span class="o">:</span> <span class="s2">&#34;_highlightResult&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">attribute</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">hit</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">h3</span><span class="p">&gt;{</span><span class="nx">hit</span><span class="p">.</span><span class="nx">username</span><span class="p">}&lt;/</span><span class="nt">h3</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="p">{</span><span class="nx">hit</span><span class="p">.</span><span class="nx">avatar</span><span class="p">}</span> <span class="na">alt</span><span class="o">=</span><span class="p">{</span><span class="nx">hit</span><span class="p">.</span><span class="nx">username</span><span class="p">}</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span><span class="nx">parsedHit</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">part</span><span class="p">)</span> <span class="p">=&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">part</span><span class="p">.</span><span class="nx">isHighlighted</span> <span class="o">?</span> <span class="p">&lt;</span><span class="nt">mark</span><span class="p">&gt;{</span><span class="nx">part</span><span class="p">.</span><span class="nx">value</span><span class="p">}&lt;/</span><span class="nt">mark</span><span class="p">&gt;</span> <span class="o">:</span> <span class="nx">part</span><span class="p">.</span><span class="nx">value</span>
</span></span><span class="line"><span class="cl">      <span class="p">)}</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">Hit</span> <span class="o">=</span> <span class="p">({</span> <span class="nx">hit</span> <span class="p">})</span> <span class="p">=&gt;</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">CustomHighlight</span> <span class="na">attribute</span><span class="o">=</span><span class="s">&#34;bio&#34;</span> <span class="na">hit</span><span class="o">=</span><span class="p">{</span><span class="nx">hit</span><span class="p">}</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="nx">App</span><span class="p">;</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
