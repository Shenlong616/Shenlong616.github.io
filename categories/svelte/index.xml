<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Svelte on Shenlong616</title>
    <link>https://shenlong616.github.io/categories/svelte/</link>
    <description>Recent content in Svelte on Shenlong616</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 25 Aug 2019 13:07:30 -0700</lastBuildDate><atom:link href="https://shenlong616.github.io/categories/svelte/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Svelte: Algolia instantsearch</title>
      <link>https://shenlong616.github.io/posts/snippets/svelte-algolia-instantsearch/</link>
      <pubDate>Sun, 25 Aug 2019 13:07:30 -0700</pubDate>
      
      <guid>https://shenlong616.github.io/posts/snippets/svelte-algolia-instantsearch/</guid>
      <description>Algolia InstantSearch with Svelte 3</description>
      <content:encoded><![CDATA[<h2 id="install-algolia">Install Algolia</h2>
<p>Algolia does not provide official support for <a href="https://svelte.dev">Svelte</a>, but we can easily implement our own custom UI with <a href="https://github.com/algolia/algoliasearch-client-javascript">AlgoliaSearch</a>.</p>
<p>Note. You can also use InstantSearch.js if you want pre-built components.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">npm install algoliasearch
</span></span></code></pre></div><h2 id="update-the-indexhtml">Update the index.html</h2>
<p>The Algolia client makes a reference to <code>process</code>, which does not exist in the browser. Add the code below to prevent errors.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Svelte app<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">&lt;!-- ADD THIS LINE --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nb">window</span><span class="p">.</span><span class="nx">process</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">env</span><span class="o">:</span> <span class="p">{</span> <span class="nx">DEBUG</span><span class="o">:</span> <span class="kc">undefined</span> <span class="p">}</span> <span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></div><h2 id="svelte-algolia-search-component">Svelte Algolia Search Component</h2>
<p>The component below initializes the AlgoliaSearch <em>lite</em>, then binds a request to each <em>keyup</em> event on a form input. Algolia returns an object with the resulting hits, which are updated on the component&rsquo;s <code>hit</code> property.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="kr">import</span> <span class="p">{</span> <span class="nx">onMount</span> <span class="p">}</span> <span class="nx">from</span> <span class="s2">&#34;svelte&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kr">import</span> <span class="nx">algoliasearch</span> <span class="nx">from</span> <span class="s2">&#34;algoliasearch/lite&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">searchClient</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">index</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">query</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">hits</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nx">onMount</span><span class="p">(()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">searchClient</span> <span class="o">=</span> <span class="nx">algoliasearch</span><span class="p">(</span><span class="s2">&#34;YOUR-APP-ID&#34;</span><span class="p">,</span> <span class="s2">&#34;YOUR-SEARCH-ONLY-KEY&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">index</span> <span class="o">=</span> <span class="nx">searchClient</span><span class="p">.</span><span class="nx">initIndex</span><span class="p">(</span><span class="s2">&#34;customers&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Warm up search
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">index</span><span class="p">.</span><span class="nx">search</span><span class="p">({</span> <span class="nx">query</span> <span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Fires on each keyup in form
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kr">async</span> <span class="kd">function</span> <span class="nx">search</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">index</span><span class="p">.</span><span class="nx">search</span><span class="p">({</span> <span class="nx">query</span> <span class="p">});</span>
</span></span><span class="line"><span class="cl">    <span class="nx">hits</span> <span class="o">=</span> <span class="nx">result</span><span class="p">.</span><span class="nx">hits</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">hits</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">:</span><span class="nd">global</span><span class="o">(</span><span class="nt">em</span><span class="o">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">color</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-weight</span><span class="p">:</span> <span class="kc">bold</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">background</span><span class="p">:</span> <span class="kc">black</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>Svelte InstantSearch<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text&#34;</span> <span class="na">bind:value</span><span class="o">=</span><span class="s">&#34;{query}&#34;</span> <span class="na">on:keyup</span><span class="o">=</span><span class="s">&#34;{search}&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;{hit.avatar}&#34;</span> <span class="na">alt</span><span class="o">=</span><span class="s">&#34;{hit.username}&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">section</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">h3</span><span class="p">&gt;</span>{hit.username} {hit.objectID}<span class="p">&lt;/</span><span class="nt">h3</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="c">&lt;!-- &lt;p&gt;{hit.bio}&lt;/p&gt; --&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">p</span> <span class="na">contenteditable</span> <span class="na">bind:innerHTML</span><span class="o">=</span><span class="s">&#34;{hit._highlightResult.bio.value}&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">section</span><span class="p">&gt;</span>
</span></span></code></pre></div><p><img loading="lazy" src="/assets/images/0/svelte-algolia.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
